{"version":3,"sources":["webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm.js","webpack://onnxruntime-web/./node_modules/@protobufjs/aspromise/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/base64/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/eventemitter/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/float/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/inquire/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/pool/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/utf8/index.js","webpack://onnxruntime-web/./node_modules/flatbuffers/js/flatbuffers.mjs","webpack://onnxruntime-web/./node_modules/guid-typescript/dist/guid.js","webpack://onnxruntime-web/./node_modules/long/src/long.js","webpack://onnxruntime-web/./node_modules/onnx-proto/dist/onnx.js","webpack://onnxruntime-web/./node_modules/protobufjs/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/index-minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader_buffer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/roots.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc/service.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/longbits.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer_buffer.js","webpack://onnxruntime-web/./lib/backend-onnxjs.ts","webpack://onnxruntime-web/./lib/backend-wasm.ts","webpack://onnxruntime-web/./lib/index.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute-with-cache-key.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute.ts","webpack://onnxruntime-web/./lib/onnxjs/backend.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/backend-webgl.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-definitions.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-function-inliner.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-preprocessor.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-registered-libs.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-source.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-vec-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/inference-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/op-resolve-rules.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/batch-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/binary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-grouped.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/depth-to-space.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/dot-product.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/flatten.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/fuse-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gather.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gemm.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/image-scaler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/instance-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/packing-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pad.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pool.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reduce.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/resize-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/shape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/slice.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/softmax.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/split.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/squeeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/sum.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/tile.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/transpose.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/uint8-encode.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unpack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unsqueeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/upsample.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/program-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-data-encoder.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout-strategy.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/types.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context-factory.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context.ts","webpack://onnxruntime-web/./lib/onnxjs/execution-plan.ts","webpack://onnxruntime-web/./lib/onnxjs/graph.ts","webpack://onnxruntime-web/./lib/onnxjs/instrument.ts","webpack://onnxruntime-web/./lib/onnxjs/model.ts","webpack://onnxruntime-web/./lib/onnxjs/operators.ts","webpack://onnxruntime-web/./lib/onnxjs/opset.ts","webpack://onnxruntime-web/./lib/onnxjs/ort-schema/ort-generated.ts","webpack://onnxruntime-web/./lib/onnxjs/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/session.ts","webpack://onnxruntime-web/./lib/onnxjs/tensor.ts","webpack://onnxruntime-web/./lib/onnxjs/util.ts","webpack://onnxruntime-web/./lib/wasm/options-utils.ts","webpack://onnxruntime-web/./lib/wasm/proxy-wrapper.ts","webpack://onnxruntime-web/./lib/wasm/run-options.ts","webpack://onnxruntime-web/./lib/wasm/session-handler.ts","webpack://onnxruntime-web/./lib/wasm/session-options.ts","webpack://onnxruntime-web/./lib/wasm/string-utils.ts","webpack://onnxruntime-web/./lib/wasm/wasm-core-impl.ts","webpack://onnxruntime-web/./lib/wasm/wasm-factory.ts","webpack://onnxruntime-web/./lib/wasm/proxy-worker/main.ts","webpack://onnxruntime-web/./node_modules/worker-loader/dist/runtime/inline.js","webpack://onnxruntime-web/external \"fs\"","webpack://onnxruntime-web/external \"os\"","webpack://onnxruntime-web/external \"path\"","webpack://onnxruntime-web/external \"perf_hooks\"","webpack://onnxruntime-web/external \"util\"","webpack://onnxruntime-web/external \"worker_threads\"","webpack://onnxruntime-web/external {\"commonjs\":\"onnxruntime-common\",\"commonjs2\":\"onnxruntime-common\",\"root\":\"ort\"}","webpack://onnxruntime-web/webpack/bootstrap","webpack://onnxruntime-web/webpack/runtime/compat get default export","webpack://onnxruntime-web/webpack/runtime/define property getters","webpack://onnxruntime-web/webpack/runtime/hasOwnProperty shorthand","webpack://onnxruntime-web/webpack/runtime/make namespace object","webpack://onnxruntime-web/webpack/startup"],"names":["_scriptDir","e","document","currentScript","src","__filename","t","B","buffer","P","K","W","n","Y","r","q","i","z","o","U","a","G","c","u","s","ready","Promise","f","l","hasOwnProperty","d","p","m","h","g","_","b","y","window","v","importScripts","w","process","versions","node","A","ENVIRONMENT_IS_PTHREAD","T","O","locateFile","__dirname","normalize","readFileSync","Uint8Array","I","readFile","argv","length","replace","slice","on","_n","le","oe","exitCode","exit","inspect","global","Worker","x","console","error","self","location","href","indexOf","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","onload","status","onerror","performance","E","k","S","print","log","bind","M","printErr","warn","thisProgram","quit","wasmBinary","D","noExitRuntime","WebAssembly","C","R","j","F","TextDecoder","this","decode","SharedArrayBuffer","call","H","L","subarray","String","fromCharCode","N","V","charCodeAt","X","J","Q","Ht","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","Z","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","Error","byteLength","$","ee","te","ne","re","ie","ae","preRun","shift","unshift","ce","ue","se","fe","onAbort","RuntimeError","de","startsWith","pe","preloadedImages","preloadedAudios","me","1000260","he","Rc","jc","get","ge","Atomics","load","gn","compareExchange","notify","_e","ye","dc","vc","worker","_emscripten_futex_wake","be","hc","fc","Dc","Dd","Vc","store","rn","Jt","Wc","receiveObjectTransfer","bd","threadInit","nd","threadCancel","md","threadExit","Lc","setExitStatus","dd","Cc","Ic","pop","an","Jc","Vt","postMessage","cmd","Kc","terminate","cc","Ac","ec","Nt","zc","ic","cd","push","splice","hn","Yc","onmessage","data","Pc","targetThread","Jd","transferList","Zt","Te","thread","loaded","pc","threadId","text","alert","yn","returnCode","target","filename","lineno","message","urlOrBlob","mainScriptUrlOrBlob","wasmModule","Mc","Sc","td","now","ve","Date","Lt","we","Ne","Ae","nc","kd","gd","hd","ed","jd","Tc","uc","kc","detached","start_routine","ld","arg","threadInfoStruct","stackBase","stackSize","time","sd","Oe","exchange","wait","xe","establishStackSpace","pn","ln","invokeEntryPoint","hrtime","__performance_now_clock_drift","Ee","ke","Se","Me","De","xd","Be","Ce","Re","je","Ie","Fe","yd","Pe","Math","ceil","mn","fill","$c","Xc","Nc","fd","Gd","flags","offset","We","Ye","qe","zd","ze","Ue","Ge","He","Le","arguments","fn","dn","$t","Ve","Xe","Je","querySelector","Qe","tc","Hc","vd","en","sc","rc","getParameter","width","height","viewport","Ke","Ze","$e","et","tt","nt","rt","it","split","ot","at","ct","ut","st","BYTES_PER_ELEMENT","ft","minValue","maxValue","lt","alpha","dt","type","dimensions","pt","windowDimensions","padding","strides","dilations","autoPad","layout","roundingType","outputSizes","mt","ht","gt","_t","bt","yt","vt","wt","At","Tt","Ot","xt","Et","kt","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","St","forEach","Mt","Dt","Bt","Ct","Bd","Ad","Rt","jt","It","toTimeString","match","Oc","getFullYear","getTimezoneOffset","max","sn","un","Number","cn","Ft","Pt","Wt","Yt","qt","getTime","getMonth","getDate","setDate","setMonth","setFullYear","zt","toString","getDay","bc","yc","qd","pd","wc","qc","lc","xc","Kd","od","rd","RegExp","substring","abs","includes","Array","set","mc","ad","create","Bc","object","oc","release","Ut","Gt","cb","Kt","ud","Qt","tn","gb","_a","fb","db","eb","Va","ba","apply","Za","Xa","copyWithin","hardwareConcurrency","Ya","min","grow","setTimeout","stack","nn","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","powerPreference","failIfMajorPerformanceCaveat","Zc","Ed","Fc","Qc","Hd","Id","Gc","getContext","WebGLRenderingContext","Cd","attributes","version","canvas","Uc","getExtension","vertexAttribDivisor","vertexAttribDivisorANGLE","drawArraysInstanced","drawArraysInstancedANGLE","drawElementsInstanced","drawElementsInstancedANGLE","createVertexArray","createVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","bindVertexArray","bindVertexArrayOES","isVertexArray","isVertexArrayOES","drawBuffers","drawBuffersWEBGL","wd","Fd","getSupportedExtensions","Ta","devicePreference","ml","createContext","ab","bb","$a","Wa","wa","hb","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","Ec","getSeconds","getMinutes","getHours","setTime","Sa","Ra","Qa","Pa","La","add","Ka","averagePool2d","Ja","scale","bias","axis","epsilon","activation","batchNormalization","Ia","build","Ha","clamp","Ga","Fa","concat","Ea","constant","Ca","groups","inputLayout","filterLayout","conv2d","Da","outputPadding","convTranspose2d","Ba","beta","aTranspose","bTranspose","gemm","Aa","recurrentBias","initialHiddenState","resetAfter","returnSequence","direction","activations","gru","za","input","ya","leakyRelu","xa","va","matmul","ua","maxPool2d","ja","ta","relu","sa","ra","mode","scales","sizes","axes","resample2d","qa","reshape","pa","sigmoid","oa","na","ma","tanh","la","ka","permutation","transpose","Oa","compute","Na","Ma","ha","ia","resource","fa","ga","da","ea","ca","aa","Ua","MLGraphBuilder","asm","exports","Db","ib","Ib","monitorRunDependencies","clearInterval","instance","module","fetch","credentials","then","ok","arrayBuffer","catch","resolve","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_OrtInit","jb","_OrtCreateSessionOptions","kb","_OrtSessionOptionsAppendExecutionProviderWebNN","lb","_OrtAddSessionConfigEntry","mb","_OrtReleaseSessionOptions","nb","_OrtCreateSession","ob","_OrtReleaseSession","pb","_OrtGetInputCount","qb","_OrtGetOutputCount","rb","_OrtGetInputName","sb","_OrtGetOutputName","tb","_OrtFree","ub","_OrtCreateTensor","vb","_OrtGetTensorData","wb","_OrtReleaseTensor","xb","_OrtCreateRunOptions","yb","_OrtAddRunConfigEntry","zb","_OrtReleaseRunOptions","Ab","_OrtRun","Bb","_OrtEndProfiling","Cb","_malloc","Eb","___errno_location","Fb","_free","Gb","_pthread_self","Hb","_emscripten_tls_init","_emscripten_current_thread_process_queued_calls","Jb","Xt","_emscripten_register_main_browser_thread_id","Kb","_emscripten_main_browser_thread_id","Lb","_emscripten_sync_run_in_main_thread_4","Mb","_emscripten_main_thread_process_queued_calls","Nb","_emscripten_run_in_main_runtime_thread_js","Ob","__emscripten_call_on_thread","Pb","_pthread_testcancel","Qb","_pthread_exit","Rb","__emscripten_thread_init","Sb","_emscripten_get_global_libc","Tb","___pthread_tsd_run_dtors","Ub","__get_tzname","Vb","__get_daylight","Wb","__get_timezone","Xb","stackSave","Yb","stackRestore","Zb","stackAlloc","_b","_emscripten_stack_set_limits","$b","_memalign","ac","__emscripten_allow_main_runtime_queued_calls","__emscripten_main_thread_futex","name","bn","calledRun","onRuntimeInitialized","postRun","setStatus","_fflush","onExit","UTF8ToString","stringToUTF8","lengthBytesUTF8","keepRuntimeAlive","PThread","ExitStatus","run","preInit","ortWasm","undefined","ctx","params","index","pending","reject","err","base64","string","charAt","b64","s64","encode","start","end","parts","chunk","join","invalidEncoding","test","EventEmitter","_listeners","prototype","evt","off","listeners","emit","args","factory","f32","f8b","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","floor","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","Object","keys","alloc","size","SIZE","MAX","slab","utf8","len","read","write","c1","c2","flatbuffers","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","SIZE_PREFIX_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","float32","float64","isLittleEndian","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","position","prep","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","value","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","finish","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","finishSizePrefixed","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","__offset","bb_pos","vtable_offset","__union","__string","opt_encoding","__indirect","__vector","__vector_len","__has_identifier","ident","__esModule","Guid","guid","TypeError","EMPTY","isGuid","validator","gen","createEmpty","parse","raw","count","out","random","isEmpty","toJSON","wasm","Instance","Module","unsigned","isLong","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","str","radix","RangeError","radixToPower","parseInt","power","mul","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","lessThan","comp","lessThanOrEqual","lte","greaterThan","greaterThanOrEqual","gte","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","valuesById","values","onnx","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Version","AttributeProto","properties","floats","ints","strings","tensors","graphs","refAttrName","docString","newBuffer","emptyArray","writer","uint32","float","int64","TensorProto","fork","ldelim","GraphProto","encodeDelimited","reader","tag","end2","skipType","decodeDelimited","verify","isString","isInteger","isArray","fromObject","LongBits","toObject","options","arrays","defaults","long","longs","enums","json","isFinite","AttributeType","constructor","toJSONOptions","ValueInfoProto","TypeProto","NodeProto","output","attribute","opType","domain","ModelProto","opsetImport","metadataProps","irVersion","producerName","producerVersion","modelVersion","graph","OperatorSetIdProto","StringStringEntryProto","key","TensorAnnotation","quantParameterTensorNames","tensorName","initializer","valueInfo","quantizationAnnotation","dims","floatData","int32Data","stringData","int64Data","externalData","doubleData","uint64Data","dataType","segment","rawData","dataLocation","Segment","double","uint64","DataLocation","DataType","begin","TensorShapeProto","dim","Dimension","$oneOfFields","dimValue","dimParam","denotation","oneOfGetter","oneOfSetter","oneofs","tensorType","Tensor","elemType","shape","protobuf","configure","_configure","BufferWriter","BufferReader","rpc","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","sint32","bool","fixed32","sfixed32","skip","wireType","BufferReader_","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","asPromise","endedByRPC","zero","zzEncode","zeroHash","from","toLong","fromHash","hash","toHash","mask","part0","part1","part2","dst","ifNotSet","newError","CustomError","captureStackTrace","pool","isNode","freeze","emptyObject","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","ProtocolError","fieldNames","fieldMap","encoding","allocUnsafe","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","init","createSessionHandler","pathOrBuffer","session","Session","loadModel","OnnxjsSessionHandler","onnxjsBackend","OnnxjsBackend","initializeFlags","env","initTimeout","simd","proxy","numThreads","numCpuLogicalCores","cpus","initWasm","promisify","handler","OnnxruntimeWebAssemblySessionHandler","wasmBackend","OnnxruntimeWebAssemblyBackend","registerBackend","assign","_cacheKey","getOwnPropertyNames","sort","map","createAttributeWithCacheKey","AttributeWithCacheKeyImpl","ortFbs","onnxruntime","experimental","fbs","_attributes","Map","attr","Attribute","getValue","getType","delete","getFloat","getInt","getString","getTensor","getFloats","getInts","getStrings","getTensors","valueAndType","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","attrType","GRAPH","GRAPHS","getValueNoCheck","LongUtil","longToNumber","arr","numberValue","maybeLong","fromProto","fromOrtTensor","utf8String","byteOffset","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","floatsArray","intsLength","stringsLength","tensorsLength","backendsCache","tryLoadBackend","backendHint","backendObj","backend","initialize","dispose","webgl","WebGLBackend","resolveBackend","hint","hints","contextId","matmulMaxBatchSize","textureCacheMode","pack","async","glContext","createWebGLContext","Logger","setWithEnv","verbose","warning","context","WebGLSessionHandler","getFunctions","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","getCustomTypes","GlslLibRoutine","outputLayout","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","outShape","unpackedShape","outTexShape","funcName","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","floatTextureSetRGBASource","getGlsl","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetRSource","texShape","packedTexShape","source","ArrayUtil","arraysEqual","texelsInLogicalRow","texelsInBatch","texelsInBatchN","batches","coords","rank","coordsToCompute","coordsFromIndexSnippet","stride","glsl","texture2D","programInfo","inputNames","samplerName","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","outCoordFuncName","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","coordsSnippet","inShape","texName","texFuncSnippet","inRank","outRank","broadcastDims","BroadcastUtil","getBroadcastDims","getCoordsDataType","rankDiff","fields","getGlChannels","unpackedCoordsSnippet","isInputScalar","ShapeUtil","isOutputScalar","rows","cols","inTexShape","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","texNumR","texNumC","valuesPerRow","squeezedShape","newInputShape","squeezeInputShape","newInputLayout","JSON","stringify","samplerRoutine","routineBody","getSqueezedParams","dependencies","tNumR","tNumC","squeezeShape","newShape","keptDims","stride0","stride1","routine","revDims","reverse","stride2","stride3","stride4","xScale","yScale","stridesBlock","body","getValueFromSingle","varName","getPackedValueFrom","GlslLib","CoordsGlslLib","FunctionType","GlslContext","addDependency","GlslLibRoutineNode","returnOrderedNodes","nodes","cycleCheck","Set","alreadyTraversed","createOrderedNodes","graphNodes","dfsTraverse","root","has","TopologicalSortGlslRoutines","encodeFloat32","decodeFloat32","encodeUint8","endianness","EncodingGlslLib","decodeUint8","ArrayBuffer","setFragColor","getColorAsFloat","FragColorGlslLib","INLINE_FUNC_DEF_REGEX","script","inlineDefs","exec","tokens","trim","filter","regexString","regex","variable","declLine","newBody","paramRedecLine","replacement","libs","glslLibRoutineDependencyGraph","glslRegistry","lib","libName","routinesInLib","currentNode","preprocess","shaderSource","hasMain","getDefaultFragShaderMain","replaceInlines","getFragShaderPreamble","getUniforms","variables","getImports","routinesIncluded","selectGlslLibRoutinesToBeIncluded","routines","classAndRoutine","samplers","uniformLines","sampler","arrayLength","GlslPreprocessor","VecGlslLib","ShapeUtilsGlslLib","bcastIndex","bcastMatmulIndex","offsetToIndices","indicesToOffset","incrementIndices","outputRank","dimOffset","block","indexToOffsetSingle","offsetToIndicesSingle","shapeInit","GLSL_ES_2_0","varyingVertex","varyingFrag","outputDeclaration","GLSL_ES_3_0","outputShapeLength","binaryVecFunctions","copyVec","setVecItem","getVecItem","nameOp","fname","assignmentBlock","packedTextureDataCache","unpackedTextureDataCache","calculateTextureWidthAndHeight","textureType","layoutStrategy","executeProgram","program","inputs","inputTypes","inputTextureDatas","getOrCreateTextureData","texture","cacheHint","getProgramInfoUniqueKey","artifact","programManager","getArtifact","createTextureLayoutFromTextureType","outputTextureData","createTextureData","setArtifact","runProgram","tensor","TextureType","packed","getTextureData","dataId","unpack","packedLastDimension","adjustedKernelShape","adjustedLayout","numberData","numFeatureMaps","oldRowSize","newRowSize","oldOffset","newOffset","unpackedTextureLayout","createTextureLayoutFromShape","reverseWH","unpackedTextureData","createTextureDataFromLayoutBindTensor","usage","textureManager","createTextureFromLayout","createTextureDataFromTexture","reshapeUnpacked","reshapedDims","inputTD","unpacked","newTextureLayout","channels","computeStrides","reshapePacked","isReshapeCheap","squeezedInputShape","processDims3D","squeezedOutputShape","squeezedInputTensor","squeezedOutputTensor","createPackedReshape3DProgramInfoLoader","tensorId","textureData","_id","readTexture","readTextureAsync","setTextureData","isInitializer","isTextureLayoutCached","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WebGLInferenceHandler","WEBGL_OP_RESOLVE_RULES","unaryOps","acos","binaryOps","asin","atan","averagePool","parseAveragePoolAttributes","parseBatchNormalizationAttributes","clip","parseClipAttributes","parseConcatAttributes","conv","parseConvAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","exp","flatten","parseFlattenAttributes","gather","parseGatherAttributes","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","parseLeakyReluAttributes","less","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","parsePadAttributes","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","resize","parseResizeAttributesV10","parseResizeAttributesV11","sin","sliceV10","parseSliceAttributes","softmax","parseSoftmaxAttributes","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","sum","tan","tile","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","batchNormalizationProgramMetadata","inferenceHandler","validateInputs","cacheKey","createBatchNormalizationProgramInfo","momentum","spatial","mean","var_","glslAdd","ValueBased","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslBuiltinBinary","glslPRelu","createBinaryProgramInfoLoader","glslFunc","outputTensorType","createBinaryProgramInfo","isBroadcast","areEqual","outputShape","usePackedTexture","calculatedShape","calcShape","aRank","bRank","aBcast","bBcast","createPackedConcatProgramInfoLoader","inputCount","metadata","inputShape","dataNShape","axisIndex","getChannels","dtype","unpackChannel","unpackFromChannel","shapes","offsets","channel","lastChannels","allChannels","getValueSnippet","getShiftedChannelsSnippet","lastIndex","createPackedConcatProgramInfo","channelIdx","idx","createUnpackedConcatProgramInfoLoader","sizeInConcatAxis","previousSum","getTextureIndexWhereDataResidesMethod","getTextureIndexWhereDataResidesLinearSearch","getTextureIndexWhereDataResidesBinarySearch","getFetchDataFromCorrectTextureMethod","getGetSizeInConcatAxisValueFromIndexMethod","createUnpackedConcatProgramInfo","numberOfTensors","tensorRank","codeLines","inputType","inputDimensionality","createUnpackedGroupedConvProgramInfoLoader","hasBias","processBias","xShape","wShape","outputChannelsPerGroup","group","kernelShape","pads","calculateOutputShape","getActicationSnippet","activationFunction","applyActivation","createUnpackedGroupedConvProgramInfo","conv2DPackedPointwise","xshape","kshape","reshapedX","reshapedK","matmulInputs","matmulOutput","createPackedMatmulProgramInfoLoader","conv2DPacked","im2colOutput","createPackedIm2ColProgramInfoLoader","kernelReshaped","adjustPads","batchSize","inputSpatialShape","spatialRank","outChannels","dilatedKernelShape","outputSpatialShape","adjustedAttributes","getAdjustedConvAttributes","packMode","isPointwise","conv2DUnpackedPointwise","conv2DUnpacked","createMatmulProgramInfoLoader","xIm2Col","createIm2ColProgramInfoLoader","dotProductInputs","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","newAttributes","activationAttributes","parseInternalActivationAttributes","blocksize","blocksizeSqr","transposePerm","firstReshapeShape","firstReshapedTensor","transposeAttributes","perm","transposeOutput","secondReshapeShape","activationCacheKey","createDotProductProgramMetadata","im2colShape","calculateIm2ColDims","kWidth","kHeight","im2colStrides","im2colWidth","im2colHeight","initValue","sharedDim","createDotProductProgramInfo","outputDims","flattenShape","func","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","activationName","createGatherProgramInfoLoader","gatherProgramMetadata","indexDataShape","normalizeAxis","indexCopyOps","createGatherProgramInfo","NUMBER_TYPES","createGemmProgramInfoLoader","parseGemmAttributes","isOptionalC","transA","transB","createGemmProgramInfo","aShape","bShape","GemmUtil","getShapeOfGemmResult","line","wshape","kernelSize","unrolled","row","col","createPackedIm2ColProgramInfo","im2colDims","createIm2ColProgramInfo","createImageScalerProgramInfoLoader","imageScalerProgramMetadata","createGetBiasMethod","createImageScalerProgramInfo","numChannels","meanAndVariance","createMeanAndVarianceProgramInfoLoader","createComputeOutputProgramInfoLoader","meanAndVarianceProgramMetadata","xDims","channelSize","createMeanAndVarianceProgramInfo","computeOutputProgramMetadata","meanAndVarianceShape","textureWidth","textureHeight","createComputeOutputProgramInfo","sharedDimIndex","coordsDataType","allGlChannels","getBiasForMatmulSnippet","getBiasForMatmul","getBcastedSamplerForMatmulSnippet","unpackedACoordsSnippet","unpackedBCoordsSnippet","inAShape","inBShape","inARank","inBRank","rankADiff","rankBDiff","broadcastADims","broadcastBDims","coordsASnippet","coordsBSnippet","swapDimSnippet","getBcastSamplerForMatmul","getSamplerAInLoopSnippet","getA","getSamplerBInLoopSnippet","getB","createPackedMatmulProgramInfo","arank","brank","createMatmulProgramInfo","packProgramMetadata","unpackedReversed","inputRank","setup","outOfBoundsCondition","cond","getOutOfBoundsCondition","getOutput","createPackProgramInfo","getVecChannels","padProgramMetadata","createPadProgramInfo","padShape","getPadFunction","getPadConstant","getPadReflect","getPadEdge","createAveragePoolProgramInfo","ceilMode","countIncludePad","isGlobalOperator","adjustPoolAttributes","computePoolOutputShape","op2","generatePoolingCode","createMaxPoolProgramInfo","storageOrder","globalMaxPoolAttributes","globalMaxPoolMetadata","inputDims","op1","codeW","kw","sw","pwStart","pwEnd","dimW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimH","kernelStrides","stridesRank","padsRank","offsetToIndicesFunction","copyInputDims","copyArray","copyPads","copyKernelStrides","reduce","cur","array","arrayName","reduceOp","reduceProgramMetadata","createReduceProgramInfo","keepDims","iRank","idxCopy","normalizeAxes","ops","reduceOps","idxZero","input3D","outputShape3D","createPackedReshape3DProgramMetadata","inputShape3D","mainLoop","outputCoords","getFlattenedIndexFrom3D","createPackedReshape3DProgramInfo","batch","calculateReshapedDims","integerData","resizeProgramMetadata","createPackedResizeProgramInfo","parseUpsampleAttributes","prepareInputs","every","coordinateTransformMode","outputHeight","outputWidth","inputHeight","inputWidth","scalesHeight","scalesWidth","getSourceFracIndex","scalesTensor","scalesInputIdx","sizesInputIdx","parseScalesData","isResize","sizesTensor","parseScalesDataFromOutputSize","yDims","scalesValidation","sliceProgramMetadata","createSliceProgramInfo","starts","ends","normalizedAxes","sliceOps","validateInputsV10","generateSliceAttributesFromInputs","some","softmaxComputeMaxProgramMetadata","softmaxComputeScaleProgramMetadata","softmaxProgramMetadata","sizeToDimension","sizeFromDimension","computeMaxProgramInfo","createComputeMaxProgramInfo","computeScaleProgramInfo","createComputScaleProgramInfo","softMaxProgramInfo","createSoftMaxProgramInfo","maxElementPerLogicalRow","normalizationPerLogicalRow","splitProgramMetadata","getProgramCount","createSplitProgramInfo","numOutputs","outputs","SplitUtil","splitShape","sumProgramMetadata","createSumProgramInfo","tileProgramMetadata","createTileProgramInfo","tileOps","transposeProgramMetadata","createTransposeProgramInfo","getAdjustedPerm","unpackedOutputShape","getOutputShape","getPermFunctionBody","sortBasedOnPerm","reverseFunc","downloadUint8AsFloat","glslAbs","glslBuiltinUnary","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createElementwiseProgramInfoLoader","createElementwiseProgramInfo","unpackProgramMetadata","createUnpackProgramInfo","innerDims","sourceCoords","getSourceCoords","unsqueezeShape","upsampleProgramMetadata","createUpsampleProgramInfo","opset","extrapolationValue","needRoiInput","useExtrapolation","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","outputPitches","inputPitches","precalculatedPitches","getInputFloatFunction","profiler","textureLayoutStrategy","repo","attributesBound","buildArtifact","event","gl","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","draw","vertexShader","deleteShader","deleteProgram","preprocessor","fragScript","compile","getUniformLocations","getAttribLocations","fragShaderScript","vertexShaderScript","getVertexShaderSource","compileShader","VERTEX_SHADER","debug","fragShader","FRAGMENT_SHADER","createProgram","attachFramebuffer","positionHandle","textureCoordHandle","textureCoord","setVertexAttributes","textures","texturePosition","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","uniformHandle","bindTextureToUniform","getAttribLocation","getUniformLocation","reference","ProgramManager","PreferLogicalStrategy","maxTextureSize","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","createInferenceHandler","onGraphInitialized","initializers","getValues","addInitializer","opsets","op","resolveOperator","impl","opImpl","opInit","internalFormat","R32F","format","RED","RGBA32F","RGBA","textureSize","dataSize","RedFloat32DataEncoder","dest","RGBAFloatDataEncoder","ALPHA","UNSIGNED_BYTE","_textureSize","Uint8DataEncoder","computeTextureWH","prefs","breakAxis","wsize","hsize","totalSize","AlwaysKeepOriginalSizeStrategy","wh","computeTexture","logShape","squeezeResult","sizeFromShape","sizeToSquarishShape","isEmptyArray","parseAxisParam","assert","ax","isInt","dimsToSkip","inferredDims","reversedWH","config","pendingRead","inUseTextures","idleTextures","textureLookup","textureDataType","toEncoderType","encoder","getEncoder","updateTexture","toTextureData","allocateTexture","toTensorData","createAndWaitForFence","tensorData","subscribers","deleteTexture","_dataType","checkFn","delayFn","maxCounter","_counter","tryCount","tryFn","nextBackoff","toUpperCase","createNewWebGLContext","createElement","createCanvas","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","linearSearchLastTrue","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","scissor","readPixels","isFramebufferReady","getActiveTexture","ACTIVE_TEXTURE","TEXTURE0","getTextureBinding","TEXTURE_BINDING_2D","getFramebufferBinding","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","shaderType","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","label","DataEncoders","isRenderFloat32Supported","textureHalfFloatExtension","HALF_FLOAT_OES","unit","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","createDefaultGeometry","createBuffer","geometry","bufferData","STATIC_DRAW","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","frameBuffer","isComplete","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","fragmentShader","POINTS","NO_ERROR","beginTimer","gl2","ext","query","createQuery","beginQuery","TIME_ELAPSED_EXT","endTimer","endQuery","isTimerResultAvailable","available","disjoint","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","getTimerResult","timeElapsed","QUERY_RESULT","deleteQuery","waitForQueryAndGetTime","repeatedTry","fenceContext","createFence","pollFence","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","isFencePassed","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","addItemToPoll","pollItems","isDoneFn","resolveFn","getNodes","_ops","KernelOp","_starter","resolved","_values","getInputIndices","execute","sessionHandler","modelInputs","graphInputs","sequence","graphValues","rear","thisOpIndex","thisOp","inputList","inputTensors","outputList","downstreamNodes","to","currentDownstreamNodeIndex","currentDownstreamNode","getOutputIndices","outputIndex","outputTensor","getData","ExecutionPlan","Graph","graphProto","GraphImpl","_from","_to","ProtoUtil","tensorValueTypeFromProto","_nodeProto","Node","tensorAttributesFromORTFormat","executeNode","graphInitializer","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","getInputNames","_allInputNames","_allOutputIndices","getOutputNames","_allOutputNames","_allData","_nodes","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","dataIndices","nodesIndices","inputValueNames","currentIndex","Value","tensorDimsFromProto","tensorDataTypeFromProto","nodeProto","pick","dataIndex","inputsLength","inputName","nodeArgsLength","nodeArgs","valueType","TypeInfoValue","tensor_type","TensorTypeAndShape","dimLength","initializersLength","tensorDimsFromORTFormat","outputsLength","outputName","nodesLength","attributesLength","starters","nodesStack","nodesState","nodeIndex","outgoingEdgeIndex","downstreamNodeIndex","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","ind","deleteNode","inputValueIndex","outputValueIndex","nodesConsumingOutput","delIndex","replaceIndex","isActivation","child","_severity","_content","_category","severity","content","category","color","SEVERITY_VALUE","info","fatal","LOGGER_PROVIDER_MAP","NoOpLoggerProvider","ConsoleLoggerProvider","LOGGER_DEFAULT_CONFIG","provider","minimalSeverity","logDateTime","logSourceLocation","LOGGER_CONFIG_MAP","arg0","arg1","arg2","arg3","logInternal","toISOString","previousConfig","logLevel","startTime","endCallback","timer","checkTimer","endTime","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","_timingEvents","_flushTime","stop","logOneEvent","isPromise","reason","Event","endSync","EventRecord","toFixed","currentTime","previousPointer","Profiler","isOrtFormat","loadFromOnnxFormat","loadFromOrtFormat","modelProto","_opsets","_graph","ortModel","InferenceSession","getRootAsInferenceSession","model","opsetImportLength","opsetId","Model","INT_TYPES","FLOAT_TYPES","matchSelector","selector","endsWith","rangeStart","pair","rangeEnd","rules","rule","versionSelector","DimensionValueType","TensorDataType","NodeType","__init","getRootAsShape","Shape","getSizePrefixedRootAsShape","startShape","builder","addDim","createDimVector","startDimVector","numElems","endShape","createShape","getRootAsDimension","getSizePrefixedRootAsDimension","DimensionValue","optionalEncoding","startDimension","addValue","valueOffset","addDenotation","denotationOffset","endDimension","createDimension","getRootAsDimensionValue","getSizePrefixedRootAsDimensionValue","dimType","UNKNOWN","startDimensionValue","addDimType","addDimValue","addDimParam","dimParamOffset","endDimensionValue","createDimensionValue","getRootAsTensorTypeAndShape","getSizePrefixedRootAsTensorTypeAndShape","UNDEFINED","startTensorTypeAndShape","addElemType","addShape","shapeOffset","endTensorTypeAndShape","createTensorTypeAndShape","getRootAsMapType","MapType","getSizePrefixedRootAsMapType","keyType","TypeInfo","startMapType","addKeyType","addValueType","valueTypeOffset","endMapType","createMapType","getRootAsSequenceType","SequenceType","getSizePrefixedRootAsSequenceType","startSequenceType","elemTypeOffset","endSequenceType","createSequenceType","srcArgIndex","dstArgIndex","createEdgeEnd","node_index","src_arg_index","dst_arg_index","EdgeEnd","getRootAsNodeEdge","NodeEdge","getSizePrefixedRootAsNodeEdge","inputEdges","inputEdgesLength","outputEdges","outputEdgesLength","startNodeEdge","addNodeIndex","addInputEdges","inputEdgesOffset","startInputEdgesVector","addOutputEdges","outputEdgesOffset","startOutputEdgesVector","endNodeEdge","createNodeEdge","getRootAsNode","getSizePrefixedRootAsNode","sinceVersion","Primitive","executionProviderType","inputArgCounts","inputArgCountsLength","inputArgCountsArray","implicitInputs","implicitInputsLength","startNode","addName","nameOffset","addDocString","docStringOffset","addDomain","domainOffset","addSinceVersion","addIndex","addOpType","opTypeOffset","addType","addExecutionProviderType","executionProviderTypeOffset","addInputs","inputsOffset","createInputsVector","startInputsVector","addOutputs","outputsOffset","createOutputsVector","startOutputsVector","addAttributes","attributesOffset","createAttributesVector","startAttributesVector","addInputArgCounts","inputArgCountsOffset","createInputArgCountsVector","startInputArgCountsVector","addImplicitInputs","implicitInputsOffset","createImplicitInputsVector","startImplicitInputsVector","endNode","createNode","getRootAsValueInfo","ValueInfo","getSizePrefixedRootAsValueInfo","startValueInfo","typeOffset","endValueInfo","createValueInfo","getRootAsTypeInfo","getSizePrefixedRootAsTypeInfo","NONE","startTypeInfo","endTypeInfo","createTypeInfo","getRootAsOperatorSetId","OperatorSetId","getSizePrefixedRootAsOperatorSetId","startOperatorSetId","addVersion","endOperatorSetId","createOperatorSetId","getRootAsTensor","getSizePrefixedRootAsTensor","dimsLength","rawDataLength","rawDataArray","stringDataLength","startTensor","addDims","dimsOffset","createDimsVector","startDimsVector","addDataType","addRawData","rawDataOffset","createRawDataVector","startRawDataVector","addStringData","stringDataOffset","createStringDataVector","startStringDataVector","endTensor","createTensor","getRootAsSparseTensor","SparseTensor","getSizePrefixedRootAsSparseTensor","indices","startSparseTensor","addValues","valuesOffset","addIndices","indicesOffset","endSparseTensor","createSparseTensor","getRootAsAttribute","getSizePrefixedRootAsAttribute","floatsLength","graphsLength","startAttribute","addF","addI","addS","sOffset","addT","tOffset","addG","gOffset","addFloats","floatsOffset","createFloatsVector","startFloatsVector","addInts","intsOffset","createIntsVector","startIntsVector","addStrings","stringsOffset","createStringsVector","startStringsVector","addTensors","tensorsOffset","createTensorsVector","startTensorsVector","addGraphs","graphsOffset","createGraphsVector","startGraphsVector","endAttribute","createAttribute","getRootAsGraph","getSizePrefixedRootAsGraph","maxNodeIndex","nodeEdges","nodeEdgesLength","sparseInitializers","sparseInitializersLength","startGraph","addInitializers","initializersOffset","createInitializersVector","startInitializersVector","addNodeArgs","nodeArgsOffset","createNodeArgsVector","startNodeArgsVector","addNodes","nodesOffset","createNodesVector","startNodesVector","addMaxNodeIndex","addNodeEdges","nodeEdgesOffset","createNodeEdgesVector","startNodeEdgesVector","addSparseInitializers","sparseInitializersOffset","createSparseInitializersVector","startSparseInitializersVector","endGraph","createGraph","getRootAsModel","getSizePrefixedRootAsModel","graphDocString","startModel","addIrVersion","addOpsetImport","opsetImportOffset","createOpsetImportVector","startOpsetImportVector","addProducerName","producerNameOffset","addProducerVersion","producerVersionOffset","addModelVersion","addGraph","graphOffset","addGraphDocString","graphDocStringOffset","endModel","createModel","getRootAsKernelCreateInfos","KernelCreateInfos","getSizePrefixedRootAsKernelCreateInfos","nodeIndices","nodeIndicesLength","nodeIndicesArray","kernelDefHashes","kernelDefHashesLength","startKernelCreateInfos","addNodeIndices","nodeIndicesOffset","createNodeIndicesVector","startNodeIndicesVector","addKernelDefHashes","kernelDefHashesOffset","createKernelDefHashesVector","startKernelDefHashesVector","endKernelCreateInfos","createKernelCreateInfos","getRootAsSubGraphSessionState","SubGraphSessionState","getSizePrefixedRootAsSubGraphSessionState","graphId","sessionState","SessionState","startSubGraphSessionState","addGraphId","graphIdOffset","addSessionState","sessionStateOffset","endSubGraphSessionState","createSubGraphSessionState","getRootAsSessionState","getSizePrefixedRootAsSessionState","kernels","subGraphSessionStates","subGraphSessionStatesLength","startSessionState","addKernels","kernelsOffset","addSubGraphSessionStates","subGraphSessionStatesOffset","createSubGraphSessionStatesVector","startSubGraphSessionStatesVector","endSessionState","createSessionState","getSizePrefixedRootAsInferenceSession","bufferHasIdentifier","ortVersion","startInferenceSession","addOrtVersion","ortVersionOffset","addModel","modelOffset","endInferenceSession","finishInferenceSessionBuffer","finishSizePrefixedInferenceSessionBuffer","createInferenceSession","outputNames","feeds","_fetches","_options","inputMap","feed","outputMap","startProfiling","endProfiling","_initialized","graphInputTypes","graphInputDims","_model","isView","modelProtoBlob","initializeOps","_executionPlan","normalizeAndValidateInputs","outputTensors","createOutput","modelInputNames","sortedInputs","sortedInputsIndex","validateInputTensorDims","modelInputIndices","modelValues","graphInput","validateInputTensorTypes","givenInputs","expectedType","actualType","noneDimSupported","expectedDims","actualDims","compareTensorDims","modelOutputNames","dataProvider","asyncDataProvider","validateDimsAndCalcSize","empty","dataviewConstructor","sizeof","createView","_strides","tensorProto","dataDest","dataSource","DataView","elementSize","sizeofProto","readProto","INT32","INT16","UINT16","INT8","UINT8","BOOL","INT64","DOUBLE","UINT32","UINT64","element","fromData","ortTensor","view","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","getFloat64","expectedDimensions","expr","msg","n1","n2","preprocessInputShapes","dimsA","dimsB","postprocessOutputShape","calcMatMulShape","MatMulUtil","adims","bdims","isMatMul","crank","cdims","cShapeMatMul","aLen","bLen","broadcastedIndices","originalShape","originalIndices","fillIndex","calc","inplace","resultType","outputIndices","originalIndicesA","originalIndicesB","valA","valB","isAScalar","isBScalar","rest","isValidBroadcast","finalShape","finalRank","targetIndex","sourceIndex","blockSize","leftShape","transLeft","rightShape","transRight","biasShape","kDim","typeProto","tensorDataTypeStringToEnum","getSizeFromDimensionRange","incrementIndex","axisToIncrementOn","originalDims","shapeHints","nDims","unknownDimension","newTensorSize","oldTensorSize","shape1","shape2","total","right","inSqueezeList","inputDimsIterator","sqr","axpy","powx","MathUtil","determineSplit","numElementsAlongAxis","calcReduce","keepdims","ReduceUtil","calcReduceShape","inputStrides","indicesY","calcReduceByAxis","curAxisInd","step","adjustPadAndReturnShape","computeShapeHelper","computeConvOutputShape","filterDims","inSize","dilation","kernel","padHeadIndex","padTailIndex","dkernel","padNeeded","iterateExtraOptions","prefix","seen","entries","proxyWorker","initWasmCallbacks","initOrtCallbacks","isProxy","initializing","initialized","aborted","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","ev","scriptSrc","wasmPaths","in","initializeWebAssembly","initOrt","loggingLevel","core","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","allocWasmString","extra","WeakSet","keyDataOffset","valueDataOffset","ortInit","getLogLevel","fetches","inputArray","kvp","setSessionOptions","sessionOptionsHandle","sessionOptions","use_ort_model_bytes_directly","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","enableCpuMemArena","enableMemPattern","executionMode","getExecutionMode","logIdDataOffset","logId","enableProfiling","executionProviders","ep","webnnOptions","preferenceValues","dataLength","dataOffset","errorCode","activeSessions","modelDataOffset","sessionHandle","outputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","tensorDataTypeEnumToString","numericTensorTypeToTypedArray","BigInt64Array","BigUint64Array","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","beforeGetTensorDataStack","tensorDataOffset","tensorDataIndex","maxBytesToRead","profileFileName","buffers","getWasmFileName","useSimd","useThreads","timeout","MessageChannel","port1","validate","isMultiThreadSupported","isSimdSupported","wasmPrefixOverride","wasmFileName","wasmOverrideFileName","wasmPathOverride","isTimeout","tasks","fileName","scriptDirectory","Blob","URL","createObjectURL","path","scriptSourceCode","what","race","terminateAllThreads","Worker_fn","workerConstructor","workerOptions","url","globalScope","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","revokeObjectURL","encodeURIComponent","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","enumerable","Symbol","toStringTag","__webpack_exports__"],"mappings":"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","file":"ort-web.node.js","sourcesContent":["var _scriptDir,e=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e){function t(){return B.buffer!=P&&K(B.buffer),W}function n(){return B.buffer!=P&&K(B.buffer),Y}function r(){return B.buffer!=P&&K(B.buffer),q}function i(){return B.buffer!=P&&K(B.buffer),z}function o(){return B.buffer!=P&&K(B.buffer),U}function a(){return B.buffer!=P&&K(B.buffer),G}var c,u,s;e=e||{},c||(c=void 0!==e?e:{}),c.ready=new Promise((function(e,t){u=e,s=t}));var f,l={};for(f in c)c.hasOwnProperty(f)&&(l[f]=c[f]);var d=\"./this.program\";function p(e,t){throw t}var m,h,g,_,b,y=\"object\"==typeof window,v=\"function\"==typeof importScripts,w=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,A=c.ENVIRONMENT_IS_PTHREAD||!1,T=\"\";function O(e){return c.locateFile?c.locateFile(e,T):T+e}if(w){if(T=v?require(\"path\").dirname(T)+\"/\":__dirname+\"/\",m=function(e,t){return _||(_=require(\"fs\")),b||(b=require(\"path\")),e=b.normalize(e),_.readFileSync(e,t?null:\"utf8\")},g=function(e){return(e=m(e,!0)).buffer||(e=new Uint8Array(e)),I(e.buffer),e},h=function(e,t,n){_||(_=require(\"fs\")),b||(b=require(\"path\")),e=b.normalize(e),_.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",(function(e){if(!(e instanceof _n))throw e})),process.on(\"unhandledRejection\",le),p=function(e,t){if(oe())throw process.exitCode=e,t;process.exit(e)},c.inspect=function(){return\"[Emscripten Module object]\"},void 0===global.Worker){var x;try{x=require(\"worker_threads\")}catch(e){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=x.Worker}}else(y||v)&&(v?T=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(T=document.currentScript.src),_scriptDir&&(T=_scriptDir),T=0!==T.indexOf(\"blob:\")?T.substr(0,T.lastIndexOf(\"/\")+1):\"\",w?(m=function(e,t){return _||(_=require(\"fs\")),b||(b=require(\"path\")),e=b.normalize(e),_.readFileSync(e,t?null:\"utf8\")},g=function(e){return(e=m(e,!0)).buffer||(e=new Uint8Array(e)),I(e.buffer),e},h=function(e,t,n){_||(_=require(\"fs\")),b||(b=require(\"path\")),e=b.normalize(e),_.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))}):(m=function(e){var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.send(null),t.responseText},v&&(g=function(e){var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.responseType=\"arraybuffer\",t.send(null),new Uint8Array(t.response)}),h=function(e,t,n){var r=new XMLHttpRequest;r.open(\"GET\",e,!0),r.responseType=\"arraybuffer\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));w&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var E,k,S=c.print||console.log.bind(console),M=c.printErr||console.warn.bind(console);for(f in l)l.hasOwnProperty(f)&&(c[f]=l[f]);l=null,c.thisProgram&&(d=c.thisProgram),c.quit&&(p=c.quit),c.wasmBinary&&(k=c.wasmBinary);var D=c.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&le(\"no native wasm support detected\");var B,C,R,j=!1;function I(e,t){e||le(\"Assertion failed: \"+t)}function F(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var P,W,Y,q,z,U,G,H=\"undefined\"!=typeof TextDecoder?new F(\"utf8\"):void 0;function L(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&H)return H.decode(e.subarray(t,n));for(r=\"\";t<n;){var i=e[t++];if(128&i){var o=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|o);else{var a=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|o<<6|a:(7&i)<<18|o<<12|a<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function N(e,t){return e?L(n(),e,t):\"\"}function V(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var o=0;o<e.length;++o){var a=e.charCodeAt(o);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++o)),127>=a){if(n>=r)break;t[n++]=a}else{if(2047>=a){if(n+1>=r)break;t[n++]=192|a>>6}else{if(65535>=a){if(n+2>=r)break;t[n++]=224|a>>12}else{if(n+3>=r)break;t[n++]=240|a>>18,t[n++]=128|a>>12&63}t[n++]=128|a>>6&63}t[n++]=128|63&a}}return t[n]=0,n-i}function X(e,t,r){return V(e,n(),t,r)}function J(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function Q(e){var n=J(e)+1,r=Ht(n);return r&&V(e,t(),r,n),r}function K(e){P=e,c.HEAP8=W=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=q=new Int32Array(e),c.HEAPU8=Y=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=z=new Uint32Array(e),c.HEAPF32=U=new Float32Array(e),c.HEAPF64=G=new Float64Array(e)}\"undefined\"!=typeof TextDecoder&&new F(\"utf-16le\"),A&&(P=c.buffer);var Z=c.INITIAL_MEMORY||16777216;if(A)B=c.wasmMemory,P=c.buffer;else if(c.wasmMemory)B=c.wasmMemory;else if(!((B=new WebAssembly.Memory({initial:Z/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw M(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),w&&console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\"),Error(\"bad memory\");B&&(P=B.buffer),Z=P.byteLength,K(P);var $,ee=[],te=[],ne=[],re=[],ie=0;function oe(){return D||0<ie}function ae(){var e=c.preRun.shift();ee.unshift(e)}var ce,ue=0,se=null,fe=null;function le(e){throw c.onAbort&&c.onAbort(e),I(!A),M(e),j=!0,R=1,e=new WebAssembly.RuntimeError(\"abort(\"+e+\"). Build with -s ASSERTIONS=1 for more info.\"),s(e),e}function de(){return ce.startsWith(\"data:application/octet-stream;base64,\")}function pe(){var e=ce;try{if(e==ce&&k)return new Uint8Array(k);if(g)return g(e);throw\"both async and sync fetching of the wasm failed\"}catch(e){le(e)}}c.preloadedImages={},c.preloadedAudios={},ce=\"ort-wasm-threaded.wasm\",de()||(ce=O(ce));var me={1000260:function(){throw\"Canceled!\"}};function he(e){for(;0<e.length;){var t=e.shift();if(\"function\"==typeof t)t(c);else{var n=t.Rc;\"number\"==typeof n?void 0===t.jc?$.get(n)():$.get(n)(t.jc):n(void 0===t.jc?null:t.jc)}}}function ge(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var i=Atomics.load(r(),gn>>2),o=0;if(i==e&&Atomics.compareExchange(r(),gn>>2,i,0)==i&&(o=1,0>=--n))return 1;if(0<=(e=Atomics.notify(r(),e>>2,n)))return e+o;throw\"Atomics.notify returned an unexpected value \"+e}function _e(e){if(A)throw\"Internal Error! cleanupThread() can only ever be called from main application thread!\";if(!e)throw\"Internal Error! Null pthread_ptr in cleanupThread!\";var t=ye.dc[e];t&&(r()[e+12>>2]=0,ye.vc(t.worker))}c._emscripten_futex_wake=ge;var be,ye={hc:[],fc:[],Dc:[],Dd:function(){},Vc:function(){for(var e=Ht(228),t=0;57>t;++t)i()[e/4+t]=0;r()[e+12>>2]=e,t=e+152,r()[t>>2]=t;var n=Ht(512);for(t=0;128>t;++t)i()[n/4+t]=0;Atomics.store(i(),e+100>>2,n),Atomics.store(i(),e+40>>2,e),rn(e,!v,1),Jt(e)},Wc:function(){ye.receiveObjectTransfer=ye.bd,ye.threadInit=ye.nd,ye.threadCancel=ye.md,ye.threadExit=ye.Lc,ye.setExitStatus=ye.dd},dc:{},Cc:[],Ic:function(){for(;0<ye.Cc.length;)ye.Cc.pop()();an()},Jc:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),ye.Ic(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),ge(e+0,2147483647),rn(0,0,0)},dd:function(e){R=e},Lc:function(e){var t=Vt();t&&(ye.Jc(t,e),A&&postMessage({cmd:\"exit\"}))},md:function(){ye.Jc(Vt(),-1),postMessage({cmd:\"cancelDone\"})},Kc:function(){for(var e in ye.dc){var t=ye.dc[e];t&&t.worker&&ye.vc(t.worker)}for(ye.dc={},e=0;e<ye.hc.length;++e){var n=ye.hc[e];n.terminate()}for(ye.hc=[],e=0;e<ye.fc.length;++e)t=(n=ye.fc[e]).cc,ye.Ac(t),n.terminate();ye.fc=[]},Ac:function(e){if(e){if(e.ec){var t=r()[e.ec+100>>2];r()[e.ec+100>>2]=0,Nt(t),Nt(e.ec)}e.ec=0,e.zc&&e.ic&&Nt(e.ic),e.ic=0,e.worker&&(e.worker.cc=null)}},vc:function(e){ye.cd((function(){delete ye.dc[e.cc.ec],ye.hc.push(e),ye.fc.splice(ye.fc.indexOf(e),1),ye.Ac(e.cc),e.cc=void 0}))},cd:function(e){r()[hn>>2]=0;try{e()}finally{r()[hn>>2]=1}},bd:function(){},nd:function(){for(var e in ye.Dc)ye.Dc[e]()},Yc:function(e,t){e.onmessage=function(n){var o=n.data,a=o.cmd;if(e.cc&&(ye.Pc=e.cc.ec),o.targetThread&&o.targetThread!=Vt()){var c=ye.dc[o.Jd];c?c.worker.postMessage(n.data,o.transferList):M('Internal error! Worker sent a message \"'+a+'\" to target pthread '+o.targetThread+\", but that thread no longer exists!\")}else if(\"processQueuedMainThreadWork\"===a)Zt();else if(\"spawnThread\"===a)Te(n.data);else if(\"cleanupThread\"===a)_e(o.thread);else if(\"killThread\"===a){if(n=o.thread,A)throw\"Internal Error! killThread() can only ever be called from main application thread!\";if(!n)throw\"Internal Error! Null pthread_ptr in killThread!\";r()[n+12>>2]=0,o=ye.dc[n],delete ye.dc[n],o.worker.terminate(),ye.Ac(o),ye.fc.splice(ye.fc.indexOf(o.worker),1),o.worker.cc=void 0}else if(\"cancelThread\"===a){if(n=o.thread,A)throw\"Internal Error! cancelThread() can only ever be called from main application thread!\";if(!n)throw\"Internal Error! Null pthread_ptr in cancelThread!\";ye.dc[n].worker.postMessage({cmd:\"cancel\"})}else if(\"loaded\"===a)e.loaded=!0,t&&t(e),e.pc&&(e.pc(),delete e.pc);else if(\"print\"===a)S(\"Thread \"+o.threadId+\": \"+o.text);else if(\"printErr\"===a)M(\"Thread \"+o.threadId+\": \"+o.text);else if(\"alert\"===a)alert(\"Thread \"+o.threadId+\": \"+o.text);else if(\"exit\"===a)e.cc&&Atomics.load(i(),e.cc.ec+64>>2)&&ye.vc(e);else if(\"exitProcess\"===a)try{yn(o.returnCode)}catch(e){if(e instanceof _n)return;throw e}else\"cancelDone\"===a?ye.vc(e):\"objectTransfer\"!==a&&(\"setimmediate\"===n.data.target?e.postMessage(n.data):M(\"worker sent an unknown command \"+a));ye.Pc=void 0},e.onerror=function(e){M(\"pthread sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message)},w&&void 0!==e.on&&(e.on(\"message\",(function(t){e.onmessage({data:t})})),e.on(\"error\",(function(t){e.onerror(t)})),e.on(\"exit\",(function(){}))),e.postMessage({cmd:\"load\",urlOrBlob:c.mainScriptUrlOrBlob||_scriptDir,wasmMemory:B,wasmModule:C})},Mc:function(){var e=O(\"ort-wasm-threaded.worker.js\");ye.hc.push(new Worker(e))},Sc:function(){return 0==ye.hc.length&&(ye.Mc(),ye.Yc(ye.hc[0])),ye.hc.pop()},td:function(e){for(e=performance.now()+e;performance.now()<e;);}};function ve(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return r()[Lt()>>2]=28,-1;e=be()}return r()[t>>2]=e/1e3|0,r()[t+4>>2]=e%1e3*1e6|0,0}function we(e,t){if(A)return Ne(1,1,e,t);ne.unshift({Rc:e,jc:t})}function Ae(e){this.nc=e-16,this.kd=function(e){r()[this.nc+4>>2]=e},this.gd=function(e){r()[this.nc+8>>2]=e},this.hd=function(){r()[this.nc>>2]=0},this.ed=function(){t()[this.nc+12>>0]=0},this.jd=function(){t()[this.nc+13>>0]=0},this.Tc=function(e,t){this.kd(e),this.gd(t),this.hd(),this.ed(),this.jd()}}function Te(e){if(A)throw\"Internal Error! spawnThread() can only ever be called from main application thread!\";var t=ye.Sc();if(!t)return 6;if(void 0!==t.cc)throw\"Internal error!\";if(!e.uc)throw\"Internal error, no pthread ptr!\";ye.fc.push(t);for(var n=Ht(512),o=0;128>o;++o)r()[n+4*o>>2]=0;var a=e.ic+e.kc,c=(o=ye.dc[e.uc]={worker:t,ic:e.ic,kc:e.kc,zc:e.zc,ec:e.uc}).ec>>2;Atomics.store(i(),c+16,e.detached),Atomics.store(i(),c+25,n),Atomics.store(i(),c+10,o.ec),Atomics.store(i(),c+20,e.kc),Atomics.store(i(),c+19,a),Atomics.store(i(),c+26,e.kc),Atomics.store(i(),c+28,a),Atomics.store(i(),c+29,e.detached),n=on()+40,Atomics.store(i(),c+43,n),t.cc=o;var u={cmd:\"run\",start_routine:e.ld,arg:e.jc,threadInfoStruct:e.uc,stackBase:e.ic,stackSize:e.kc};return t.pc=function(){u.time=performance.now(),t.postMessage(u,e.sd)},t.loaded&&(t.pc(),delete t.pc),0}function Oe(e,n,i){if(0>=e||e>t().length||1&e)return-28;if(y){if(Atomics.load(r(),e>>2)!=n)return-6;var o=performance.now();for(i=o+i,Atomics.exchange(r(),gn>>2,e);;){if((o=performance.now())>i)return Atomics.exchange(r(),gn>>2,0),-73;if(0==(o=Atomics.exchange(r(),gn>>2,0)))break;if(Zt(),Atomics.load(r(),e>>2)!=n)return-6;Atomics.exchange(r(),gn>>2,e)}return 0}if(\"timed-out\"===(e=Atomics.wait(r(),e>>2,n,i)))return-73;if(\"not-equal\"===e)return-6;if(\"ok\"===e)return 0;throw\"Atomics.wait returned an unexpected value \"+e}function xe(){w||v||(E||(E={}),E[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]||(E[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]=1,M(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")))}c.establishStackSpace=function(e,t){pn(e,t),ln(e)},c.invokeEntryPoint=function(e,t){return $.get(e)(t)},be=w?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:A?function(){return performance.now()-c.__performance_now_clock_drift}:function(){return performance.now()};var Ee={},ke=[null,[],[]];function Se(e,t){var n=ke[e];0===t||10===t?((1===e?S:M)(L(n,0)),n.length=0):n.push(t)}var Me={};function De(e,t){return A?Ne(2,1,e,t):(e=N(e),Me.xd(e,t))}function Be(e,t,n){return A?Ne(3,1,e,t,n):0}function Ce(e,t){if(A)return Ne(4,1,e,t)}function Re(e,t,n){if(A)return Ne(5,1,e,t,n)}function je(e,t,n){return A?Ne(6,1,e,t,n):0}function Ie(e,t){if(A)return Ne(7,1,e,t)}function Fe(e,t){return A?Ne(8,1,e,t):(e=N(e),Me.yd(e,t))}function Pe(e,t,r,i,o,a){if(A)t=Ne(9,1,e,t,r,i,o,a);else if(a<<=12,0!=(16&i)&&0!=e%65536)t=-28;else if(0!=(32&i)){var c=65536*Math.ceil(t/65536);(e=mn(65536,c))?n().fill(0,e,e+c):e=0,e?(Ee[e]={$c:e,Xc:t,Nc:!0,fd:o,Gd:r,flags:i,offset:a},t=e):t=-48}else t=-52;return t}function We(e,t){if(A)e=Ne(10,1,e,t);else{var n=Ee[e];0!==t&&n?(t===n.Xc&&(Ee[e]=null,n.Nc&&Nt(n.$c)),e=0):e=-28}return e}function Ye(e,t,n){if(A)return Ne(11,1,e,t,n)}function qe(e,t,n){return A?Ne(12,1,e,t,n):(e=N(e),Me.zd(e,t,n))}function ze(e){if(A)return Ne(13,1,e)}function Ue(e,t){if(A)return Ne(14,1,e,t)}function Ge(e){if(A)return Ne(15,1,e)}function He(){if(A)return Ne(16,1);le()}var Le=[];function Ne(e,t){for(var n=arguments.length-2,r=fn(),i=dn(8*n),o=i>>3,c=0;c<n;c++){var u=arguments[2+c];a()[o+c]=u}return n=$t(e,n,i,t),ln(r),n}var Ve=[],Xe=[0,\"undefined\"!=typeof document?document:0,\"undefined\"!=typeof window?window:0];function Je(e){return e=2<e?N(e):e,Xe[e]||(\"undefined\"!=typeof document?document.querySelector(e):void 0)}function Qe(e,t,n){var i=Je(e);if(!i)return-4;if(i.tc&&(r()[i.tc>>2]=t,r()[i.tc+4>>2]=n),!i.Hc&&i.vd){if(i.tc){i=r()[i.tc+8>>2],e=e?N(e):\"\";var o=fn(),a=dn(12),c=0;if(e){c=J(e)+1;var u=Ht(c);X(e,u,c),c=u}return r()[a>>2]=c,r()[a+4>>2]=t,r()[a+8>>2]=n,en(0,i,657457152,0,c,a),ln(o),1}return-4}return i.Hc&&(i=i.Hc),e=!1,i.sc&&i.sc.rc&&(e=0===(e=i.sc.rc.getParameter(2978))[0]&&0===e[1]&&e[2]===i.width&&e[3]===i.height),i.width=t,i.height=n,e&&i.sc.rc.viewport(0,0,t,n),0}function Ke(e,t,n){return A?Ne(17,1,e,t,n):Qe(e,t,n)}var Ze=[\"default\",\"low-power\",\"high-performance\"],$e=[\"explicit\",\"same-upper\",\"same-lower\"],et=[\"iohw\",\"hwoi\",\"ohwi\"],tt=[\"oihw\",\"hwio\",\"ohwi\",\"ihwo\"],nt=[\"nchw\",\"nhwc\"],rt=[\"nearest-neighbor\",\"linear\"],it=\"float32 float16 int32 uint32 int8 uint8\".split(\" \"),ot=[\"forward\",\"backward\",\"both\"],at=[\"zrn\",\"rzn\"],ct=[\"floor\",\"ceil\"];function ut(e,t){if(0!==e&&0!==t){for(var n=[],i=0;i<e;++i,t+=4)n.push(r()[t>>2]);return n}}function st(e,t=\"float32\"){const o=r()[e>>2]+i()[e+8>>2];return e=i()[e+4>>2],I(\"float32\"===t),new Float32Array(n().buffer,o,e/Float32Array.BYTES_PER_ELEMENT)}function ft(e){return{minValue:o()[e>>2],maxValue:o()[e+4>>2]}}function lt(e){return{alpha:o()[e>>2]}}function dt(e){return{type:it[i()[e>>2]],dimensions:ut(i()[e+8>>2],r()[e+4>>2])}}function pt(e){return{windowDimensions:ut(i()[e>>2],r()[e+4>>2]),padding:\"explicit\"===$e[r()[e+32>>2]]?ut(i()[e+8>>2],r()[e+12>>2]):void 0,strides:ut(i()[e+16>>2],r()[e+20>>2]),dilations:ut(i()[e+24>>2],r()[e+28>>2]),autoPad:$e[r()[e+32>>2]],layout:nt[r()[e+36>>2]],roundingType:ct[r()[e+40>>2]],outputSizes:ut(i()[e+44>>2],r()[e+48>>2])}}var mt,ht,gt,_t,bt,yt,vt,wt,At,Tt,Ot,xt,Et={};function kt(){if(!xt){var e,t={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:d||\"./this.program\"};for(e in Et)void 0===Et[e]?delete t[e]:t[e]=Et[e];var n=[];for(e in t)n.push(e+\"=\"+t[e]);xt=n}return xt}function St(e,n){if(A)return Ne(18,1,e,n);var i=0;return kt().forEach((function(o,a){var c=n+i;for(a=r()[e+4*a>>2]=c,c=0;c<o.length;++c)t()[a++>>0]=o.charCodeAt(c);t()[a>>0]=0,i+=o.length+1})),0}function Mt(e,t){if(A)return Ne(19,1,e,t);var n=kt();r()[e>>2]=n.length;var i=0;return n.forEach((function(e){i+=e.length+1})),r()[t>>2]=i,0}function Dt(e){return A?Ne(20,1,e):0}function Bt(e,n){return A?Ne(21,1,e,n):(e=1==e||2==e?2:le(),t()[n>>0]=e,0)}function Ct(e,t,n,i){return A?Ne(22,1,e,t,n,i):(e=Me.Bd(e),t=Me.Ad(e,t,n),r()[i>>2]=t,0)}function Rt(e,t,n,r,i){if(A)return Ne(23,1,e,t,n,r,i)}function jt(e,t,i,o){if(A)return Ne(24,1,e,t,i,o);for(var a=0,c=0;c<i;c++){for(var u=r()[t+8*c>>2],s=r()[t+(8*c+4)>>2],f=0;f<s;f++)Se(e,n()[u+f]);a+=s}return r()[o>>2]=a,0}function It(){function e(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:\"GMT\"}if(A)return Ne(25,1);if(!It.Oc){It.Oc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),i=new Date(t,6,1);t=n.getTimezoneOffset();var o=i.getTimezoneOffset(),a=Math.max(t,o);r()[sn()>>2]=60*a,r()[un()>>2]=Number(t!=o),n=e(n),i=e(i),n=Q(n),i=Q(i),o<t?(r()[cn()>>2]=n,r()[cn()+4>>2]=i):(r()[cn()>>2]=i,r()[cn()+4>>2]=n)}}function Ft(e){return 0==e%4&&(0!=e%100||0==e%400)}function Pt(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Wt=[31,29,31,30,31,30,31,31,30,31,30,31],Yt=[31,28,31,30,31,30,31,31,30,31,30,31];function qt(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(Ft(e.getFullYear())?Wt:Yt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function zt(e,n,i,o){function a(e,t,n){for(e=\"number\"==typeof e?e.toString():e||\"\";e.length<t;)e=n[0]+e;return e}function c(e,t){return a(e,t,\"0\")}function u(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function f(e){e=qt(new Date(e.bc+1900,0,1),e.yc);var t=new Date(e.getFullYear()+1,0,4),n=s(new Date(e.getFullYear(),0,4));return t=s(t),0>=u(n,e)?0>=u(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=r()[o+40>>2];for(var d in o={qd:r()[o>>2],pd:r()[o+4>>2],wc:r()[o+8>>2],qc:r()[o+12>>2],lc:r()[o+16>>2],bc:r()[o+20>>2],xc:r()[o+24>>2],yc:r()[o+28>>2],Kd:r()[o+32>>2],od:r()[o+36>>2],rd:l?N(l):\"\"},i=N(i),l={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})i=i.replace(new RegExp(d,\"g\"),l[d]);var p=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),m=\"January February March April May June July August September October November December\".split(\" \");for(d in l={\"%a\":function(e){return p[e.xc].substring(0,3)},\"%A\":function(e){return p[e.xc]},\"%b\":function(e){return m[e.lc].substring(0,3)},\"%B\":function(e){return m[e.lc]},\"%C\":function(e){return c((e.bc+1900)/100|0,2)},\"%d\":function(e){return c(e.qc,2)},\"%e\":function(e){return a(e.qc,2,\" \")},\"%g\":function(e){return f(e).toString().substring(2)},\"%G\":function(e){return f(e)},\"%H\":function(e){return c(e.wc,2)},\"%I\":function(e){return 0==(e=e.wc)?e=12:12<e&&(e-=12),c(e,2)},\"%j\":function(e){return c(e.qc+Pt(Ft(e.bc+1900)?Wt:Yt,e.lc-1),3)},\"%m\":function(e){return c(e.lc+1,2)},\"%M\":function(e){return c(e.pd,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(e){return 0<=e.wc&&12>e.wc?\"AM\":\"PM\"},\"%S\":function(e){return c(e.qd,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(e){return e.xc||7},\"%U\":function(e){var t=new Date(e.bc+1900,0,1),n=0===t.getDay()?t:qt(t,7-t.getDay());return 0>u(n,e=new Date(e.bc+1900,e.lc,e.qc))?c(Math.ceil((31-n.getDate()+(Pt(Ft(e.getFullYear())?Wt:Yt,e.getMonth()-1)-31)+e.getDate())/7),2):0===u(n,t)?\"01\":\"00\"},\"%V\":function(e){var t=new Date(e.bc+1901,0,4),n=s(new Date(e.bc+1900,0,4));t=s(t);var r=qt(new Date(e.bc+1900,0,1),e.yc);return 0>u(r,n)?\"53\":0>=u(t,r)?\"01\":c(Math.ceil((n.getFullYear()<e.bc+1900?e.yc+32-n.getDate():e.yc+1-n.getDate())/7),2)},\"%w\":function(e){return e.xc},\"%W\":function(e){var t=new Date(e.bc,0,1),n=1===t.getDay()?t:qt(t,0===t.getDay()?1:7-t.getDay()+1);return 0>u(n,e=new Date(e.bc+1900,e.lc,e.qc))?c(Math.ceil((31-n.getDate()+(Pt(Ft(e.getFullYear())?Wt:Yt,e.getMonth()-1)-31)+e.getDate())/7),2):0===u(n,t)?\"01\":\"00\"},\"%y\":function(e){return(e.bc+1900).toString().substring(2)},\"%Y\":function(e){return e.bc+1900},\"%z\":function(e){var t=0<=(e=e.od);return e=Math.abs(e)/60,(t?\"+\":\"-\")+String(\"0000\"+(e/60*100+e%60)).slice(-4)},\"%Z\":function(e){return e.rd},\"%%\":function(){return\"%\"}})i.includes(d)&&(i=i.replace(new RegExp(d,\"g\"),l[d](o)));return(d=function(e){var t=Array(J(e)+1);return V(e,t,0,t.length),t}(i)).length>n?0:(function(e,n){t().set(e,n)}(d,e),d.length-1)}mt||(mt=mt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},ht=ht||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},gt=gt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},_t=_t||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},bt=bt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},yt=yt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},vt=vt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},wt=wt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},At=At||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},Tt=Tt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},Ot=Ot||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}});var Ut=[null,we,De,Be,Ce,Re,je,Ie,Fe,Pe,We,Ye,qe,ze,Ue,Ge,He,Ke,St,Mt,Dt,Bt,Ct,Rt,jt,It],Gt={h:function(e,t,n,r){le(\"Assertion failed: \"+N(e)+\", at: \"+[t?N(t):\"unknown filename\",n,r?N(r):\"unknown function\"])},cb:function(e,t){return ve(e,t)},b:function(e){return Ht(e+16)+16},d:function(e,t){return we(e,t)},e:function(e,t){ye.Cc.push((function(){$.get(e)(t)}))},c:function(e,t,n){throw new Ae(e).Tc(t,n),e},I:function(e,t,n,o){if(\"undefined\"==typeof SharedArrayBuffer)return M(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;if(!e)return M(\"pthread_create called with a null thread pointer!\"),28;var a=[];if(A&&0===a.length)return Kt(687865856,e,t,n,o);var c=0,u=0;if(t&&-1!=t){var s=r()[t>>2];s+=81920,c=r()[t+8>>2],u=0!==r()[t+12>>2]}else s=2097152;(t=0==c)?c=mn(16,s):I(0<(c-=s));for(var f=Ht(228),l=0;57>l;++l)i()[(f>>2)+l]=0;return r()[e>>2]=f,r()[f+12>>2]=f,e=f+152,r()[e>>2]=e,n={ic:c,kc:s,zc:t,detached:u,ld:n,uc:f,jc:o,sd:a},A?(n.ud=\"spawnThread\",postMessage(n,a),0):Te(n)},G:function(e){throw A?ye.Lc(e):(ye.Ic(),yn(e)),\"unwind\"},H:function(e,t){return function(e,t){if(!e)return M(\"pthread_join attempted on a null thread pointer!\"),71;if(A&&Vt()==e)return M(\"PThread \"+e+\" is attempting to join to itself!\"),16;if(!A&&Qt()==e)return M(\"Main thread \"+e+\" is attempting to join to itself!\"),16;if(r()[e+12>>2]!==e)return M(\"pthread_join attempted on thread \"+e+\", which does not point to a valid thread, or does not exist anymore!\"),71;if(Atomics.load(i(),e+64>>2))return M(\"Attempted to join thread \"+e+\", which was already detached!\"),28;for(xe();;){var n=Atomics.load(i(),e+0>>2);if(1==n)return n=Atomics.load(i(),e+4>>2),t&&(r()[t>>2]=n),Atomics.store(i(),e+64>>2,1),A?postMessage({cmd:\"cleanupThread\",thread:e}):_e(e),0;tn(),A||Zt(),Oe(e+0,n,A?100:1)}}(e,t)},z:De,y:Be,C:Ce,gb:Re,s:function(){return 42},_a:je,A:Ie,D:Fe,F:Pe,E:We,q:Ye,fb:qe,db:ze,t:Ue,eb:Ge,P:function(e,t){if(e==t)postMessage({cmd:\"processQueuedMainThreadWork\"});else if(A)postMessage({targetThread:e,cmd:\"processThreadQueue\"});else{if(!(e=(e=ye.dc[e])&&e.worker))return;e.postMessage({cmd:\"processThreadQueue\"})}return 1},f:He,w:ve,Va:function(e,t){return e-t},S:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},m:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},ba:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},N:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Q:function(e,t,i){var o;for(Le.length=0,i>>=2;o=n()[t++];)(o=105>o)&&1&i&&i++,Le.push(o?a()[i++>>1]:r()[i]),++i;return me[e].apply(null,Le)},Za:xe,n:function(){},k:Oe,j:ge,B:function(){return 2147483648},i:be,Xa:function(e,t,r){n().copyWithin(e,t,t+r)},o:function(){return w?require(\"os\").cpus().length:navigator.hardwareConcurrency},L:function(e,t,n){Ve.length=t,n>>=3;for(var r=0;r<t;r++)Ve[r]=a()[n+r];return(0>e?me[-e-1]:Ut[e]).apply(null,Ve)},Ya:function(e){var t=n().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var r=1;4>=r;r*=2){var i=t*(1+.2/r);i=Math.min(i,e+100663296),0<(i=Math.max(e,i))%65536&&(i+=65536-i%65536);e:{try{B.grow(Math.min(2147483648,i)-P.byteLength+65535>>>16),K(B.buffer);var o=1;break e}catch(e){}o=void 0}if(o)return!0}return!1},M:function(e,t,n){return Je(e)?Qe(e,t,n):Ke(e,t,n)},v:function(){},K:function(e,t,n){return ie+=1,setTimeout((function(){--ie,function(e){if(!j){try{e()}catch(e){if(e instanceof _n)return;if(\"unwind\"!==e)throw e&&\"object\"==typeof e&&e.stack&&M(\"exception thrown: \"+[e,e.stack]),e}if(!oe())try{A?nn(R):yn(R)}catch(e){if(!(e instanceof _n))throw e}}}((function(){$.get(e)(n)}))}),t)},O:function(e,t){t>>=2;var n=r()[t+6];return t={alpha:!!r()[t],depth:!!r()[t+1],stencil:!!r()[t+2],antialias:!!r()[t+3],premultipliedAlpha:!!r()[t+4],preserveDrawingBuffer:!!r()[t+5],powerPreference:Ze[n],failIfMajorPerformanceCaveat:!!r()[t+7],Zc:r()[t+8],Ed:r()[t+9],Fc:r()[t+10],Qc:r()[t+11],Hd:r()[t+12],Id:r()[t+13]},!(e=Je(e))||t.Qc?0:function(e,t){e.Gc||(e.Gc=e.getContext,e.getContext=function(t,n){return\"webgl\"==t==(n=e.Gc(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\"webgl\",t);return n?function(e,t){var n=Ht(8);r()[n+4>>2]=Vt();var i={Cd:n,attributes:t,version:t.Zc,rc:e};return e.canvas&&(e.canvas.sc=i),(void 0===t.Fc||t.Fc)&&function(e){if(e||(e=void 0),!e.Uc){e.Uc=!0;var t=e.rc;!function(e){var t=e.getExtension(\"ANGLE_instanced_arrays\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,i){t.drawArraysInstancedANGLE(e,n,r,i)},e.drawElementsInstanced=function(e,n,r,i,o){t.drawElementsInstancedANGLE(e,n,r,i,o)})}(t),function(e){var t=e.getExtension(\"OES_vertex_array_object\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\"WEBGL_draw_buffers\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.wd=t.getExtension(\"EXT_disjoint_timer_query\"),t.Fd=t.getExtension(\"WEBGL_multi_draw\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\"lose_context\")||e.includes(\"debug\")||t.getExtension(e)}))}}(i),n}(n,t):0}(e,t)},Ta:function(e){var t={devicePreference:\"default\",powerPreference:\"default\"};return 0!==e&&(t={devicePreference:[\"default\",\"gpu\",\"cpu\"][i()[e>>2]],powerPreference:[\"default\",\"high-performance\",\"low-power\"][i()[e+4>>2]]}),mt.create(navigator.ml.createContext(t))},ab:St,bb:Mt,l:Dt,$a:Bt,r:Ct,Wa:Rt,p:jt,wa:function(e){var t=Date.now();return r()[e>>2]=t/1e3|0,r()[e+4>>2]=t%1e3*1e3|0,0},hb:function e(t,n){return t=new Date(1e3*r()[t>>2]),r()[n>>2]=t.getUTCSeconds(),r()[n+4>>2]=t.getUTCMinutes(),r()[n+8>>2]=t.getUTCHours(),r()[n+12>>2]=t.getUTCDate(),r()[n+16>>2]=t.getUTCMonth(),r()[n+20>>2]=t.getUTCFullYear()-1900,r()[n+24>>2]=t.getUTCDay(),r()[n+36>>2]=0,r()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,r()[n+28>>2]=t,e.Ec||(e.Ec=Q(\"GMT\")),r()[n+40>>2]=e.Ec,n},J:function(){ye.Vc()},u:function(e,t){It(),e=new Date(1e3*r()[e>>2]),r()[t>>2]=e.getSeconds(),r()[t+4>>2]=e.getMinutes(),r()[t+8>>2]=e.getHours(),r()[t+12>>2]=e.getDate(),r()[t+16>>2]=e.getMonth(),r()[t+20>>2]=e.getFullYear()-1900,r()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),i=(e.getTime()-n.getTime())/864e5|0;return r()[t+28>>2]=i,r()[t+36>>2]=-60*e.getTimezoneOffset(),i=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(i!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,i)),r()[t+32>>2]=e,e=r()[cn()+(e?4:0)>>2],r()[t+40>>2]=e,t},a:B||c.wasmMemory,x:function(e){It();var t=new Date(r()[e+20>>2]+1900,r()[e+16>>2],r()[e+12>>2],r()[e+8>>2],r()[e+4>>2],r()[e>>2],0),n=r()[e+32>>2],i=t.getTimezoneOffset(),o=new Date(t.getFullYear(),0,1),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),c=o.getTimezoneOffset(),u=Math.min(c,a);return 0>n?r()[e+32>>2]=Number(a!=c&&u==i):0<n!=(u==i)&&(a=Math.max(c,a),t.setTime(t.getTime()+6e4*((0<n?u:a)-i))),r()[e+24>>2]=t.getDay(),n=(t.getTime()-o.getTime())/864e5|0,r()[e+28>>2]=n,r()[e>>2]=t.getSeconds(),r()[e+4>>2]=t.getMinutes(),r()[e+8>>2]=t.getHours(),r()[e+12>>2]=t.getDate(),r()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Sa:function(e){mt.oc(e)},Ra:function(e){mt.release(e)},Qa:function(e){ht.oc(e)},Pa:function(e){ht.release(e)},La:function(e,t,n){return e=_t.get(e),t=At.get(t),n=At.get(n),n=e.add(t,n),At.create(n)},Ka:function(e,t,n){return e=_t.get(e),t=At.get(t),n=pt(n),n=e.averagePool2d(t,n),At.create(n)},Ja:function(e,t,n,i,a){return e=_t.get(e),t=At.get(t),n=At.get(n),i=At.get(i),a={scale:At.get(r()[a>>2]),bias:At.get(r()[a+4>>2]),axis:r()[a+8>>2],epsilon:o()[a+12>>2],activation:ht.get(r()[a+16>>2])},a=e.batchNormalization(t,n,i,a),At.create(a)},Ia:function(e,t){e=_t.get(e),t=wt.get(t);try{var n=e.build(t);return gt.create(n)}catch(e){return console.log(\"builder.build failed: \"+e),0}},Ha:function(e,t,n){return e=_t.get(e),t=At.get(t),n=ft(n),n=e.clamp(t,n),At.create(n)},Ga:function(e,t){return e=_t.get(e),t=ft(t),t=e.clamp(t),ht.create(t)},Fa:function(e,t,n,r){e=_t.get(e),t=ut(t,n),n=[];for(var i=0;i<t.length;++i)n.push(At.get(t[i]));return r=e.concat(n,r),At.create(r)},Ea:function(e,t,n){return e=_t.get(e),n=st(n,(t=dt(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),At.create(n)},Ca:function(e,t,n,o){return e=_t.get(e),t=At.get(t),n=At.get(n),o={padding:\"explicit\"===$e[r()[o+24>>2]]?ut(i()[o>>2],r()[o+4>>2]):void 0,strides:ut(i()[o+8>>2],r()[o+12>>2]),dilations:ut(i()[o+16>>2],r()[o+20>>2]),autoPad:$e[r()[o+24>>2]],groups:r()[o+28>>2],inputLayout:nt[r()[o+32>>2]],filterLayout:tt[r()[o+36>>2]],bias:At.get(r()[o+40>>2]),activation:ht.get(r()[o+44>>2])},o=e.conv2d(t,n,o),At.create(o)},Da:function(e,t,n,o){return e=_t.get(e),t=At.get(t),n=At.get(n),o={padding:\"explicit\"===$e[r()[o+40>>2]]?ut(i()[o>>2],r()[o+4>>2]):void 0,strides:ut(i()[o+8>>2],r()[o+12>>2]),dilations:ut(i()[o+16>>2],r()[o+20>>2]),outputPadding:ut(i()[o+24>>2],r()[o+28>>2]),outputSizes:ut(i()[o+32>>2],r()[o+36>>2]),autoPad:$e[r()[o+40>>2]],groups:r()[o+44>>2],inputLayout:nt[r()[o+48>>2]],filterLayout:et[r()[o+52>>2]],bias:At.get(r()[o+56>>2]),activation:ht.get(r()[o+60>>2])},o=e.convTranspose2d(t,n,o),At.create(o)},Ba:function(e,n,i,a){return e=_t.get(e),n=At.get(n),i=At.get(i),a={c:At.get(r()[a>>2]),alpha:o()[a+4>>2],beta:o()[a+8>>2],aTranspose:0!==t()[a+12>>0],bTranspose:0!==t()[a+13>>0]},a=e.gemm(n,i,a),At.create(a)},Aa:function(e,n,i,o,a,c,u){return e=_t.get(e),n=At.get(n),i=At.get(i),o=At.get(o),u={bias:At.get(r()[u>>2]),recurrentBias:At.get(r()[u+4>>2]),initialHiddenState:At.get(r()[u+8>>2]),resetAfter:0!==t()[u+12>>0],returnSequence:0!==t()[u+13>>0],direction:ot[r()[u+16>>2]],layout:at[r()[u+20>>2]],activations:Ot.get(r()[u+24>>2])},a=e.gru(n,i,o,a,c,u),Tt.create(a)},za:function(e,t,n){return e=_t.get(e),t=N(t),n=dt(n),n=e.input(t,n),At.create(n)},ya:function(e,t,n){return e=_t.get(e),t=At.get(t),n=lt(n),n=e.leakyRelu(t,n),At.create(n)},xa:function(e,t){return e=_t.get(e),t=lt(t),t=e.leakyRelu(t),ht.create(t)},va:function(e,t,n){return e=_t.get(e),t=At.get(t),n=At.get(n),n=e.matmul(t,n),At.create(n)},ua:function(e,t,n){return e=_t.get(e),t=At.get(t),n=pt(n),n=e.maxPool2d(t,n),At.create(n)},ja:function(e){_t.release(e)},ta:function(e,t){return e=_t.get(e),t=At.get(t),t=e.relu(t),At.create(t)},sa:function(e){return e=_t.get(e).relu(),ht.create(e)},ra:function(e,t,n){e=_t.get(e),t=At.get(t);var a=rt[r()[n>>2]],c=i()[n+4>>2],u=r()[n+8>>2];if(0!==c&&0!==u){for(var s=[],f=0;f<c;++f,u+=4)s.push(o()[u>>2]);c=s}else c=void 0;return n={mode:a,scales:c,sizes:ut(i()[n+12>>2],r()[n+16>>2]),axes:ut(i()[n+20>>2],r()[n+24>>2])},n=e.resample2d(t,n),At.create(n)},qa:function(e,t,n,r){return e=_t.get(e),t=At.get(t),n=ut(r,n),n=e.reshape(t,n),At.create(n)},pa:function(e,t){return e=_t.get(e),t=At.get(t),t=e.sigmoid(t),At.create(t)},oa:function(e){return e=_t.get(e).sigmoid(),ht.create(e)},na:function(e,t,n,o,a){if(e=_t.get(e),t=At.get(t),0!==o&&0!==n){for(var c=[],u=0;u<o;++u,n+=4)c.push(i()[n>>2]);n=c}else n=void 0;return 1==o&&(n=n[0]),o={axis:r()[a>>2]},o=e.split(t,n,o),Tt.create(o)},ma:function(e,t){return e=_t.get(e),t=At.get(t),t=e.tanh(t),At.create(t)},la:function(e){return e=_t.get(e).tanh(),ht.create(e)},ka:function(e,t,n){return e=_t.get(e),t=At.get(t),n={permutation:ut(i()[n>>2],r()[n+4>>2])},n=e.transpose(t,n),At.create(n)},Oa:function(e,t,n){return e=gt.get(e),t=yt.get(t),n=vt.get(n),e.compute(t,n)},Na:function(e){gt.oc(e)},Ma:function(e){gt.release(e)},ha:function(e){yt.release(e)},ia:function(e,t,n){e=yt.get(e),t=N(t),n=0===r()[n+12>>2]?st(n+0):{resource:st(n+0),dimensions:ut(i()[n+16>>2],r()[n+12>>2])},e[t]=n},fa:function(e){wt.release(e)},ga:function(e,t,n){e=wt.get(e),t=N(t),n=At.get(n),e[t]=n},da:function(e){vt.release(e)},ea:function(e,t,n){e=vt.get(e),t=N(t),n=st(n),e[t]=n},$:function(e,t){return e=Tt.get(e)[t],At.create(e)},_:function(e){Tt.release(e)},ca:function(e){At.oc(e)},aa:function(e){At.release(e)},Y:function(e){Ot.oc(e)},X:function(e){Ot.release(e)},Z:function(e,t){e=Ot.get(e),t=ht.get(t),e.push(t)},Ua:zt,g:function(e,t,n,r){return zt(e,t,n,r)},W:function(e){return e=mt.get(e),e=new MLGraphBuilder(e),_t.create(e)},V:function(){return yt.create({})},U:function(){return wt.create({})},T:function(){return vt.create({})},R:function(){return Ot.create([])}};!function(){function e(e,t){c.asm=e.exports,$=c.asm.Db,te.unshift(c.asm.ib),ye.Dc.push(c.asm.Ib),C=t,A||(ue--,c.monitorRunDependencies&&c.monitorRunDependencies(ue),0==ue&&(null!==se&&(clearInterval(se),se=null),fe&&(e=fe,fe=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!k&&(y||v)){if(\"function\"==typeof fetch&&!ce.startsWith(\"file://\"))return fetch(ce,{credentials:\"same-origin\"}).then((function(e){if(!e.ok)throw\"failed to load wasm binary file at '\"+ce+\"'\";return e.arrayBuffer()})).catch((function(){return pe()}));if(h)return new Promise((function(e,t){h(ce,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return pe()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){M(\"failed to asynchronously prepare wasm: \"+e),le(e)}))}var r={a:Gt};if(A||(ue++,c.monitorRunDependencies&&c.monitorRunDependencies(ue)),c.instantiateWasm)try{return c.instantiateWasm(r,e)}catch(e){return M(\"Module.instantiateWasm callback failed with error: \"+e),!1}(k||\"function\"!=typeof WebAssembly.instantiateStreaming||de()||ce.startsWith(\"file://\")||\"function\"!=typeof fetch?n(t):fetch(ce,{credentials:\"same-origin\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return M(\"wasm streaming compile failed: \"+e),M(\"falling back to ArrayBuffer instantiation\"),n(t)}))}))).catch(s)}(),c.___wasm_call_ctors=function(){return(c.___wasm_call_ctors=c.asm.ib).apply(null,arguments)},c._OrtInit=function(){return(c._OrtInit=c.asm.jb).apply(null,arguments)},c._OrtCreateSessionOptions=function(){return(c._OrtCreateSessionOptions=c.asm.kb).apply(null,arguments)},c._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(c._OrtSessionOptionsAppendExecutionProviderWebNN=c.asm.lb).apply(null,arguments)},c._OrtAddSessionConfigEntry=function(){return(c._OrtAddSessionConfigEntry=c.asm.mb).apply(null,arguments)},c._OrtReleaseSessionOptions=function(){return(c._OrtReleaseSessionOptions=c.asm.nb).apply(null,arguments)},c._OrtCreateSession=function(){return(c._OrtCreateSession=c.asm.ob).apply(null,arguments)},c._OrtReleaseSession=function(){return(c._OrtReleaseSession=c.asm.pb).apply(null,arguments)},c._OrtGetInputCount=function(){return(c._OrtGetInputCount=c.asm.qb).apply(null,arguments)},c._OrtGetOutputCount=function(){return(c._OrtGetOutputCount=c.asm.rb).apply(null,arguments)},c._OrtGetInputName=function(){return(c._OrtGetInputName=c.asm.sb).apply(null,arguments)},c._OrtGetOutputName=function(){return(c._OrtGetOutputName=c.asm.tb).apply(null,arguments)},c._OrtFree=function(){return(c._OrtFree=c.asm.ub).apply(null,arguments)},c._OrtCreateTensor=function(){return(c._OrtCreateTensor=c.asm.vb).apply(null,arguments)},c._OrtGetTensorData=function(){return(c._OrtGetTensorData=c.asm.wb).apply(null,arguments)},c._OrtReleaseTensor=function(){return(c._OrtReleaseTensor=c.asm.xb).apply(null,arguments)},c._OrtCreateRunOptions=function(){return(c._OrtCreateRunOptions=c.asm.yb).apply(null,arguments)},c._OrtAddRunConfigEntry=function(){return(c._OrtAddRunConfigEntry=c.asm.zb).apply(null,arguments)},c._OrtReleaseRunOptions=function(){return(c._OrtReleaseRunOptions=c.asm.Ab).apply(null,arguments)},c._OrtRun=function(){return(c._OrtRun=c.asm.Bb).apply(null,arguments)},c._OrtEndProfiling=function(){return(c._OrtEndProfiling=c.asm.Cb).apply(null,arguments)};var Ht=c._malloc=function(){return(Ht=c._malloc=c.asm.Eb).apply(null,arguments)},Lt=c.___errno_location=function(){return(Lt=c.___errno_location=c.asm.Fb).apply(null,arguments)},Nt=c._free=function(){return(Nt=c._free=c.asm.Gb).apply(null,arguments)},Vt=c._pthread_self=function(){return(Vt=c._pthread_self=c.asm.Hb).apply(null,arguments)};c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.Ib).apply(null,arguments)},c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.Jb).apply(null,arguments)};var Xt,Jt=c._emscripten_register_main_browser_thread_id=function(){return(Jt=c._emscripten_register_main_browser_thread_id=c.asm.Kb).apply(null,arguments)},Qt=c._emscripten_main_browser_thread_id=function(){return(Qt=c._emscripten_main_browser_thread_id=c.asm.Lb).apply(null,arguments)},Kt=c._emscripten_sync_run_in_main_thread_4=function(){return(Kt=c._emscripten_sync_run_in_main_thread_4=c.asm.Mb).apply(null,arguments)},Zt=c._emscripten_main_thread_process_queued_calls=function(){return(Zt=c._emscripten_main_thread_process_queued_calls=c.asm.Nb).apply(null,arguments)},$t=c._emscripten_run_in_main_runtime_thread_js=function(){return($t=c._emscripten_run_in_main_runtime_thread_js=c.asm.Ob).apply(null,arguments)},en=c.__emscripten_call_on_thread=function(){return(en=c.__emscripten_call_on_thread=c.asm.Pb).apply(null,arguments)},tn=c._pthread_testcancel=function(){return(tn=c._pthread_testcancel=c.asm.Qb).apply(null,arguments)},nn=c._pthread_exit=function(){return(nn=c._pthread_exit=c.asm.Rb).apply(null,arguments)},rn=c.__emscripten_thread_init=function(){return(rn=c.__emscripten_thread_init=c.asm.Sb).apply(null,arguments)},on=c._emscripten_get_global_libc=function(){return(on=c._emscripten_get_global_libc=c.asm.Tb).apply(null,arguments)},an=c.___pthread_tsd_run_dtors=function(){return(an=c.___pthread_tsd_run_dtors=c.asm.Ub).apply(null,arguments)},cn=c.__get_tzname=function(){return(cn=c.__get_tzname=c.asm.Vb).apply(null,arguments)},un=c.__get_daylight=function(){return(un=c.__get_daylight=c.asm.Wb).apply(null,arguments)},sn=c.__get_timezone=function(){return(sn=c.__get_timezone=c.asm.Xb).apply(null,arguments)},fn=c.stackSave=function(){return(fn=c.stackSave=c.asm.Yb).apply(null,arguments)},ln=c.stackRestore=function(){return(ln=c.stackRestore=c.asm.Zb).apply(null,arguments)},dn=c.stackAlloc=function(){return(dn=c.stackAlloc=c.asm._b).apply(null,arguments)},pn=c._emscripten_stack_set_limits=function(){return(pn=c._emscripten_stack_set_limits=c.asm.$b).apply(null,arguments)},mn=c._memalign=function(){return(mn=c._memalign=c.asm.ac).apply(null,arguments)},hn=c.__emscripten_allow_main_runtime_queued_calls=999808,gn=c.__emscripten_main_thread_futex=1003828;function _n(e){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+e+\")\",this.status=e}function bn(){function e(){if(!Xt&&(Xt=!0,c.calledRun=!0,!j)&&(A||he(te),u(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),!A)){if(c.postRun)for(\"function\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var e=c.postRun.shift();re.unshift(e)}he(re)}}if(!(0<ue))if(A)u(c),A||he(te),postMessage({cmd:\"loaded\"});else{if(!A){if(c.preRun)for(\"function\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)ae();he(ee)}0<ue||(c.setStatus?(c.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){c.setStatus(\"\")}),1),e()}),1)):e())}}function yn(e){if(R=e,A)throw postMessage({cmd:\"exitProcess\",returnCode:e}),new _n(e);oe()||(ye.Kc(),A||(he(ne),\"undefined\"!=typeof _fflush&&_fflush(0),ke[1].length&&Se(1,10),ke[2].length&&Se(2,10))),R=e,oe()||(ye.Kc(),c.onExit&&c.onExit(e),j=!0),p(e,new _n(e))}if(c.UTF8ToString=N,c.stringToUTF8=X,c.lengthBytesUTF8=J,c.keepRuntimeAlive=oe,c.PThread=ye,c.stackSave=fn,c.stackRestore=ln,c.stackAlloc=dn,c.PThread=ye,c.wasmMemory=B,c.ExitStatus=_n,fe=function e(){Xt||bn(),Xt||(fe=e)},c.run=bn,c.preInit)for(\"function\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();return A&&(D=!1,ye.Wc()),bn(),e.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e:\"function\"==typeof define&&define.amd?define([],(function(){return e})):\"object\"==typeof exports&&(exports.ortWasmThreaded=e);\n","\nvar ortWasm = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(ortWasm) {\n  ortWasm = ortWasm || {};\n\n\nvar e;e||(e=typeof ortWasm !== 'undefined' ? ortWasm : {});var aa,ba;e.ready=new Promise(function(a,b){aa=a;ba=b});var f={},k;for(k in e)e.hasOwnProperty(k)&&(f[k]=e[k]);var ca=\"./this.program\",da=\"object\"===typeof window,n=\"function\"===typeof importScripts,ea=\"object\"===typeof process&&\"object\"===typeof process.versions&&\"string\"===typeof process.versions.node,q=\"\",fa,ha,ia,r,w;\nif(ea)q=n?require(\"path\").dirname(q)+\"/\":__dirname+\"/\",fa=function(a,b){r||(r=require(\"fs\"));w||(w=require(\"path\"));a=w.normalize(a);return r.readFileSync(a,b?null:\"utf8\")},ia=function(a){a=fa(a,!0);a.buffer||(a=new Uint8Array(a));a.buffer||x(\"Assertion failed: undefined\");return a},ha=function(a,b,c){r||(r=require(\"fs\"));w||(w=require(\"path\"));a=w.normalize(a);r.readFile(a,function(d,h){d?c(d):b(h.buffer)})},1<process.argv.length&&(ca=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",\nfunction(a){throw a;}),process.on(\"unhandledRejection\",x),e.inspect=function(){return\"[Emscripten Module object]\"};else if(da||n)n?q=self.location.href:\"undefined\"!==typeof document&&document.currentScript&&(q=document.currentScript.src),_scriptDir&&(q=_scriptDir),0!==q.indexOf(\"blob:\")?q=q.substr(0,q.lastIndexOf(\"/\")+1):q=\"\",fa=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},n&&(ia=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\n\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),ha=function(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a,!0);d.responseType=\"arraybuffer\";d.onload=function(){200==d.status||0==d.status&&d.response?b(d.response):c()};d.onerror=c;d.send(null)};var ja=e.print||console.log.bind(console),y=e.printErr||console.warn.bind(console);for(k in f)f.hasOwnProperty(k)&&(e[k]=f[k]);f=null;e.thisProgram&&(ca=e.thisProgram);var z;e.wasmBinary&&(z=e.wasmBinary);var noExitRuntime=e.noExitRuntime||!1;\n\"object\"!==typeof WebAssembly&&x(\"no native wasm support detected\");var ka,la=!1,ma=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction na(a,b,c){var d=b+c;for(c=b;a[c]&&!(c>=d);)++c;if(16<c-b&&a.subarray&&ma)return ma.decode(a.subarray(b,c));for(d=\"\";b<c;){var h=a[b++];if(h&128){var l=a[b++]&63;if(192==(h&224))d+=String.fromCharCode((h&31)<<6|l);else{var m=a[b++]&63;h=224==(h&240)?(h&15)<<12|l<<6|m:(h&7)<<18|l<<12|m<<6|a[b++]&63;65536>h?d+=String.fromCharCode(h):(h-=65536,d+=String.fromCharCode(55296|h>>10,56320|h&1023))}}else d+=String.fromCharCode(h)}return d}function A(a,b){return a?na(C,a,b):\"\"}\nfunction oa(a,b,c,d){if(!(0<d))return 0;var h=c;d=c+d-1;for(var l=0;l<a.length;++l){var m=a.charCodeAt(l);if(55296<=m&&57343>=m){var u=a.charCodeAt(++l);m=65536+((m&1023)<<10)|u&1023}if(127>=m){if(c>=d)break;b[c++]=m}else{if(2047>=m){if(c+1>=d)break;b[c++]=192|m>>6}else{if(65535>=m){if(c+2>=d)break;b[c++]=224|m>>12}else{if(c+3>=d)break;b[c++]=240|m>>18;b[c++]=128|m>>12&63}b[c++]=128|m>>6&63}b[c++]=128|m&63}}b[c]=0;return c-h}\nfunction pa(a){for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&(d=65536+((d&1023)<<10)|a.charCodeAt(++c)&1023);127>=d?++b:b=2047>=d?b+2:65535>=d?b+3:b+4}return b}function qa(a){var b=pa(a)+1,c=ra(b);c&&oa(a,D,c,b);return c}var sa,D,C,E,F,G;\nfunction ta(){var a=ka.buffer;sa=a;e.HEAP8=D=new Int8Array(a);e.HEAP16=new Int16Array(a);e.HEAP32=E=new Int32Array(a);e.HEAPU8=C=new Uint8Array(a);e.HEAPU16=new Uint16Array(a);e.HEAPU32=F=new Uint32Array(a);e.HEAPF32=G=new Float32Array(a);e.HEAPF64=new Float64Array(a)}var ua,va=[],wa=[],xa=[],ya=[];function za(){var a=e.preRun.shift();va.unshift(a)}var H=0,Aa=null,I=null;e.preloadedImages={};e.preloadedAudios={};\nfunction x(a){if(e.onAbort)e.onAbort(a);y(a);la=!0;a=new WebAssembly.RuntimeError(\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\");ba(a);throw a;}function Ba(){return K.startsWith(\"data:application/octet-stream;base64,\")}var K;K=\"ort-wasm.wasm\";if(!Ba()){var Ca=K;K=e.locateFile?e.locateFile(Ca,q):q+Ca}function Da(){var a=K;try{if(a==K&&z)return new Uint8Array(z);if(ia)return ia(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){x(b)}}\nfunction Ea(){if(!z&&(da||n)){if(\"function\"===typeof fetch&&!K.startsWith(\"file://\"))return fetch(K,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+K+\"'\";return a.arrayBuffer()}).catch(function(){return Da()});if(ha)return new Promise(function(a,b){ha(K,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return Da()})}\nfunction Fa(a){for(;0<a.length;){var b=a.shift();if(\"function\"==typeof b)b(e);else{var c=b.Ib;\"number\"===typeof c?void 0===b.yb?ua.get(c)():ua.get(c)(b.yb):c(void 0===b.yb?null:b.yb)}}}function Ga(a){this.Ab=a-16;this.Sb=function(b){E[this.Ab+4>>2]=b};this.Pb=function(b){E[this.Ab+8>>2]=b};this.Qb=function(){E[this.Ab>>2]=0};this.Ob=function(){D[this.Ab+12>>0]=0};this.Rb=function(){D[this.Ab+13>>0]=0};this.Kb=function(b,c){this.Sb(b);this.Pb(c);this.Qb();this.Ob();this.Rb()}}\nvar Ha=0,Ia={},Ja=[null,[],[]],L={},Ka;Ka=ea?function(){var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:function(){return performance.now()};var M=[\"explicit\",\"same-upper\",\"same-lower\"],La=[\"iohw\",\"hwoi\",\"ohwi\"],Ma=[\"oihw\",\"hwio\",\"ohwi\",\"ihwo\"],Na=[\"nchw\",\"nhwc\"],Oa=[\"nearest-neighbor\",\"linear\"],Pa=\"float32 float16 int32 uint32 int8 uint8\".split(\" \"),Qa=[\"forward\",\"backward\",\"both\"],Ra=[\"zrn\",\"rzn\"],Sa=[\"floor\",\"ceil\"];\nfunction N(a,b){if(0!==a&&0!==b){for(var c=[],d=0;d<a;++d,b+=4)c.push(E[b>>2]);return c}}function Ta(a,b=\"float32\"){const c=E[a>>2]+F[a+8>>2];a=F[a+4>>2];\"float32\"===b||x(\"Assertion failed: undefined\");return new Float32Array(C.buffer,c,a/Float32Array.BYTES_PER_ELEMENT)}function Ua(a){return{minValue:G[a>>2],maxValue:G[a+4>>2]}}function Va(a){return{type:Pa[F[a>>2]],dimensions:N(F[a+8>>2],E[a+4>>2])}}\nfunction Wa(a){return{windowDimensions:N(F[a>>2],E[a+4>>2]),padding:\"explicit\"===M[E[a+32>>2]]?N(F[a+8>>2],E[a+12>>2]):void 0,strides:N(F[a+16>>2],E[a+20>>2]),dilations:N(F[a+24>>2],E[a+28>>2]),autoPad:M[E[a+32>>2]],layout:Na[E[a+36>>2]],roundingType:Sa[E[a+40>>2]],outputSizes:N(F[a+44>>2],E[a+48>>2])}}var O,P,Q,R,Xa,S,T,V,W,X,Y,Ya={};\nfunction Za(){if(!$a){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"===typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ca||\"./this.program\"},b;for(b in Ya)void 0===Ya[b]?delete a[b]:a[b]=Ya[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);$a=c}return $a}var $a;\nfunction db(a,b){a=new Date(1E3*E[a>>2]);E[b>>2]=a.getUTCSeconds();E[b+4>>2]=a.getUTCMinutes();E[b+8>>2]=a.getUTCHours();E[b+12>>2]=a.getUTCDate();E[b+16>>2]=a.getUTCMonth();E[b+20>>2]=a.getUTCFullYear()-1900;E[b+24>>2]=a.getUTCDay();E[b+36>>2]=0;E[b+32>>2]=0;E[b+28>>2]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0;db.Hb||(db.Hb=qa(\"GMT\"));E[b+40>>2]=db.Hb;return b}\nfunction eb(){function a(m){return(m=m.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?m[1]:\"GMT\"}if(!fb){fb=!0;var b=(new Date).getFullYear(),c=new Date(b,0,1),d=new Date(b,6,1);b=c.getTimezoneOffset();var h=d.getTimezoneOffset(),l=Math.max(b,h);E[gb()>>2]=60*l;E[hb()>>2]=Number(b!=h);c=a(c);d=a(d);c=qa(c);d=qa(d);h<b?(E[Z()>>2]=c,E[Z()+4>>2]=d):(E[Z()>>2]=d,E[Z()+4>>2]=c)}}var fb;function ib(a){return 0===a%4&&(0!==a%100||0===a%400)}function jb(a,b){for(var c=0,d=0;d<=b;c+=a[d++]);return c}\nvar kb=[31,29,31,30,31,30,31,31,30,31,30,31],lb=[31,28,31,30,31,30,31,31,30,31,30,31];function mb(a,b){for(a=new Date(a.getTime());0<b;){var c=a.getMonth(),d=(ib(a.getFullYear())?kb:lb)[c];if(b>d-a.getDate())b-=d-a.getDate()+1,a.setDate(1),11>c?a.setMonth(c+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+b);break}}return a}\nfunction nb(a,b,c,d){function h(g,p,t){for(g=\"number\"===typeof g?g.toString():g||\"\";g.length<p;)g=t[0]+g;return g}function l(g,p){return h(g,p,\"0\")}function m(g,p){function t(ab){return 0>ab?-1:0<ab?1:0}var J;0===(J=t(g.getFullYear()-p.getFullYear()))&&0===(J=t(g.getMonth()-p.getMonth()))&&(J=t(g.getDate()-p.getDate()));return J}function u(g){switch(g.getDay()){case 0:return new Date(g.getFullYear()-1,11,29);case 1:return g;case 2:return new Date(g.getFullYear(),0,3);case 3:return new Date(g.getFullYear(),\n0,2);case 4:return new Date(g.getFullYear(),0,1);case 5:return new Date(g.getFullYear()-1,11,31);case 6:return new Date(g.getFullYear()-1,11,30)}}function U(g){g=mb(new Date(g.wb+1900,0,1),g.Fb);var p=new Date(g.getFullYear()+1,0,4),t=u(new Date(g.getFullYear(),0,4));p=u(p);return 0>=m(t,g)?0>=m(p,g)?g.getFullYear()+1:g.getFullYear():g.getFullYear()-1}var B=E[d+40>>2];d={Vb:E[d>>2],Ub:E[d+4>>2],Db:E[d+8>>2],Cb:E[d+12>>2],xb:E[d+16>>2],wb:E[d+20>>2],Eb:E[d+24>>2],Fb:E[d+28>>2],cc:E[d+32>>2],Tb:E[d+\n36>>2],Wb:B?A(B):\"\"};c=A(c);B={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var v in B)c=c.replace(new RegExp(v,\"g\"),B[v]);var bb=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),\ncb=\"January February March April May June July August September October November December\".split(\" \");B={\"%a\":function(g){return bb[g.Eb].substring(0,3)},\"%A\":function(g){return bb[g.Eb]},\"%b\":function(g){return cb[g.xb].substring(0,3)},\"%B\":function(g){return cb[g.xb]},\"%C\":function(g){return l((g.wb+1900)/100|0,2)},\"%d\":function(g){return l(g.Cb,2)},\"%e\":function(g){return h(g.Cb,2,\" \")},\"%g\":function(g){return U(g).toString().substring(2)},\"%G\":function(g){return U(g)},\"%H\":function(g){return l(g.Db,\n2)},\"%I\":function(g){g=g.Db;0==g?g=12:12<g&&(g-=12);return l(g,2)},\"%j\":function(g){return l(g.Cb+jb(ib(g.wb+1900)?kb:lb,g.xb-1),3)},\"%m\":function(g){return l(g.xb+1,2)},\"%M\":function(g){return l(g.Ub,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(g){return 0<=g.Db&&12>g.Db?\"AM\":\"PM\"},\"%S\":function(g){return l(g.Vb,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(g){return g.Eb||7},\"%U\":function(g){var p=new Date(g.wb+1900,0,1),t=0===p.getDay()?p:mb(p,7-p.getDay());g=new Date(g.wb+1900,g.xb,g.Cb);return 0>\nm(t,g)?l(Math.ceil((31-t.getDate()+(jb(ib(g.getFullYear())?kb:lb,g.getMonth()-1)-31)+g.getDate())/7),2):0===m(t,p)?\"01\":\"00\"},\"%V\":function(g){var p=new Date(g.wb+1901,0,4),t=u(new Date(g.wb+1900,0,4));p=u(p);var J=mb(new Date(g.wb+1900,0,1),g.Fb);return 0>m(J,t)?\"53\":0>=m(p,J)?\"01\":l(Math.ceil((t.getFullYear()<g.wb+1900?g.Fb+32-t.getDate():g.Fb+1-t.getDate())/7),2)},\"%w\":function(g){return g.Eb},\"%W\":function(g){var p=new Date(g.wb,0,1),t=1===p.getDay()?p:mb(p,0===p.getDay()?1:7-p.getDay()+1);g=\nnew Date(g.wb+1900,g.xb,g.Cb);return 0>m(t,g)?l(Math.ceil((31-t.getDate()+(jb(ib(g.getFullYear())?kb:lb,g.getMonth()-1)-31)+g.getDate())/7),2):0===m(t,p)?\"01\":\"00\"},\"%y\":function(g){return(g.wb+1900).toString().substring(2)},\"%Y\":function(g){return g.wb+1900},\"%z\":function(g){g=g.Tb;var p=0<=g;g=Math.abs(g)/60;return(p?\"+\":\"-\")+String(\"0000\"+(g/60*100+g%60)).slice(-4)},\"%Z\":function(g){return g.Wb},\"%%\":function(){return\"%\"}};for(v in B)c.includes(v)&&(c=c.replace(new RegExp(v,\"g\"),B[v](d)));v=ob(c);\nif(v.length>b)return 0;D.set(v,a);return v.length-1}(function(){function a(){return{zb:{},Nb:1,create:function(b,c){c=c||{};var d=this.Nb++;c.Gb=1;c.object=b;this.zb[d]=c;return d},get:function(b){if(0!==b)return this.zb[b].object},Bb:function(b){this.zb[b].Gb++},release:function(b){var c=this.zb[b];c.Gb--;0>=c.Gb&&delete this.zb[b]}}}O||(O=O||a(),P=P||a(),Q=Q||a(),R=R||a(),Xa=Xa||a(),S=S||a(),T=T||a(),V=V||a(),W=W||a(),X=X||a(),Y=Y||a())})();\nfunction ob(a){var b=Array(pa(a)+1);oa(a,b,0,b.length);return b}\nvar sb={a:function(a){return ra(a+16)+16},c:function(a,b){xa.unshift({Ib:a,yb:b})},f:function(a,b){xa.unshift({Ib:a,yb:b})},b:function(a,b,c){(new Ga(a)).Kb(b,c);Ha++;throw a;},Q:function(a,b){a=A(a);return L.Xb(a,b)},p:function(){return 0},T:function(){},P:function(){},t:function(){return 42},H:function(){return 0},R:function(){},U:function(a,b){a=A(a);return L.Yb(a,b)},W:function(a,b,c,d,h,l){l<<=12;if(0!==(d&16)&&0!==a%65536)b=-28;else if(0!==(d&32)){a=65536*Math.ceil(b/65536);var m=pb(65536,a);\nm?(C.fill(0,m,m+a),a=m):a=0;a?(Ia[a]={Mb:a,Lb:b,Jb:!0,fd:h,bc:c,flags:d,offset:l},b=a):b=-48}else b=-52;return b},V:function(a,b){var c=Ia[a];0!==b&&c?(b===c.Lb&&(Ia[a]=null,c.Jb&&qb(c.Mb)),a=0):a=-28;return a},n:function(){},O:function(a,b,c){a=A(a);return L.Zb(a,b,c)},M:function(){},u:function(){},N:function(){},k:function(){x()},B:function(a,b){if(0===a)a=Date.now();else if(1===a||4===a)a=Ka();else return E[rb()>>2]=28,-1;E[b>>2]=a/1E3|0;E[b+4>>2]=a%1E3*1E6|0;return 0},X:function(a,b){return a-\nb},Pa:function(){x(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},j:function(){x(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Qa:function(){x(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Oa:function(){x(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},\nS:function(){return 2147483648},G:function(a,b,c){C.copyWithin(a,b,b+c)},m:function(a){var b=C.length;a>>>=0;if(2147483648<a)return!1;for(var c=1;4>=c;c*=2){var d=b*(1+.2/c);d=Math.min(d,a+100663296);d=Math.max(a,d);0<d%65536&&(d+=65536-d%65536);a:{try{ka.grow(Math.min(2147483648,d)-sa.byteLength+65535>>>16);ta();var h=1;break a}catch(l){}h=void 0}if(h)return!0}return!1},L:function(a){for(var b=Ka();Ka()-b<a;);},Ma:function(a){var b={devicePreference:\"default\",powerPreference:\"default\"},c=[\"default\",\n\"gpu\",\"cpu\"],d=[\"default\",\"high-performance\",\"low-power\"];0!==a&&(b={devicePreference:c[F[a>>2]],powerPreference:d[F[a+4>>2]]});return O.create(navigator.ml.createContext(b))},J:function(a,b){var c=0;Za().forEach(function(d,h){var l=b+c;h=E[a+4*h>>2]=l;for(l=0;l<d.length;++l)D[h++>>0]=d.charCodeAt(l);D[h>>0]=0;c+=d.length+1});return 0},K:function(a,b){var c=Za();E[a>>2]=c.length;var d=0;c.forEach(function(h){d+=h.length+1});E[b>>2]=d;return 0},i:function(){return 0},I:function(a,b){a=1==a||2==a?2:\nx();D[b>>0]=a;return 0},r:function(a,b,c,d){a=L.ac(a);b=L.$b(a,b,c);E[d>>2]=b;return 0},F:function(){},s:function(a,b,c,d){for(var h=0,l=0;l<c;l++){for(var m=E[b+8*l>>2],u=E[b+(8*l+4)>>2],U=0;U<u;U++){var B=C[m+U],v=Ja[a];0===B||10===B?((1===a?ja:y)(na(v,0)),v.length=0):v.push(B)}h+=u}E[d>>2]=h;return 0},sa:function(a){var b=Date.now();E[a>>2]=b/1E3|0;E[a+4>>2]=b%1E3*1E3|0;return 0},da:db,x:function(a,b){eb();a=new Date(1E3*E[a>>2]);E[b>>2]=a.getSeconds();E[b+4>>2]=a.getMinutes();E[b+8>>2]=a.getHours();\nE[b+12>>2]=a.getDate();E[b+16>>2]=a.getMonth();E[b+20>>2]=a.getFullYear()-1900;E[b+24>>2]=a.getDay();var c=new Date(a.getFullYear(),0,1);E[b+28>>2]=(a.getTime()-c.getTime())/864E5|0;E[b+36>>2]=-(60*a.getTimezoneOffset());var d=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();c=c.getTimezoneOffset();a=(d!=c&&a.getTimezoneOffset()==Math.min(c,d))|0;E[b+32>>2]=a;a=E[Z()+(a?4:0)>>2];E[b+40>>2]=a;return b},q:function(a){eb();var b=new Date(E[a+20>>2]+1900,E[a+16>>2],E[a+12>>2],E[a+8>>2],E[a+4>>2],E[a>>\n2],0),c=E[a+32>>2],d=b.getTimezoneOffset(),h=new Date(b.getFullYear(),0,1),l=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),m=h.getTimezoneOffset(),u=Math.min(m,l);0>c?E[a+32>>2]=Number(l!=m&&u==d):0<c!=(u==d)&&(l=Math.max(m,l),b.setTime(b.getTime()+6E4*((0<c?u:l)-d)));E[a+24>>2]=b.getDay();E[a+28>>2]=(b.getTime()-h.getTime())/864E5|0;E[a>>2]=b.getSeconds();E[a+4>>2]=b.getMinutes();E[a+8>>2]=b.getHours();E[a+12>>2]=b.getDate();E[a+16>>2]=b.getMonth();return b.getTime()/1E3|0},E:function(a){O.Bb(a)},\nD:function(a){O.release(a)},La:function(a){P.Bb(a)},g:function(a){P.release(a)},Ia:function(a,b,c){a=R.get(a);b=W.get(b);c=W.get(c);c=a.add(b,c);return W.create(c)},Ha:function(a,b,c){a=R.get(a);b=W.get(b);c=Wa(c);c=a.averagePool2d(b,c);return W.create(c)},Ga:function(a,b,c,d,h){a=R.get(a);b=W.get(b);c=W.get(c);d=W.get(d);h={scale:W.get(E[h>>2]),bias:W.get(E[h+4>>2]),axis:E[h+8>>2],epsilon:G[h+12>>2],activation:P.get(E[h+16>>2])};h=a.batchNormalization(b,c,d,h);return W.create(h)},Fa:function(a,b){a=\nR.get(a);b=V.get(b);try{var c=a.build(b);return Q.create(c)}catch(d){return console.log(\"builder.build failed: \"+d),0}},Ea:function(a,b,c){a=R.get(a);b=W.get(b);c=a.clamp(b,Ua(c));return W.create(c)},Da:function(a,b){a=R.get(a).clamp(Ua(b));return P.create(a)},Ca:function(a,b,c,d){a=R.get(a);b=N(b,c);c=[];for(var h=0;h<b.length;++h)c.push(W.get(b[h]));d=a.concat(c,d);return W.create(d)},Ba:function(a,b,c){a=R.get(a);b=Va(b);c=Ta(c,b.type);c=void 0===b.dimensions?a.constant(c[0]):a.constant(b,c);return W.create(c)},\nza:function(a,b,c,d){a=R.get(a);b=W.get(b);c=W.get(c);d={padding:\"explicit\"===M[E[d+24>>2]]?N(F[d>>2],E[d+4>>2]):void 0,strides:N(F[d+8>>2],E[d+12>>2]),dilations:N(F[d+16>>2],E[d+20>>2]),autoPad:M[E[d+24>>2]],groups:E[d+28>>2],inputLayout:Na[E[d+32>>2]],filterLayout:Ma[E[d+36>>2]],bias:W.get(E[d+40>>2]),activation:P.get(E[d+44>>2])};d=a.conv2d(b,c,d);return W.create(d)},Aa:function(a,b,c,d){a=R.get(a);b=W.get(b);c=W.get(c);d={padding:\"explicit\"===M[E[d+40>>2]]?N(F[d>>2],E[d+4>>2]):void 0,strides:N(F[d+\n8>>2],E[d+12>>2]),dilations:N(F[d+16>>2],E[d+20>>2]),outputPadding:N(F[d+24>>2],E[d+28>>2]),outputSizes:N(F[d+32>>2],E[d+36>>2]),autoPad:M[E[d+40>>2]],groups:E[d+44>>2],inputLayout:Na[E[d+48>>2]],filterLayout:La[E[d+52>>2]],bias:W.get(E[d+56>>2]),activation:P.get(E[d+60>>2])};d=a.convTranspose2d(b,c,d);return W.create(d)},ya:function(a,b,c,d){a=R.get(a);b=W.get(b);c=W.get(c);d={c:W.get(E[d>>2]),alpha:G[d+4>>2],beta:G[d+8>>2],aTranspose:0!==D[d+12>>0],bTranspose:0!==D[d+13>>0]};d=a.gemm(b,c,d);return W.create(d)},\nxa:function(a,b,c,d,h,l,m){a=R.get(a);b=W.get(b);c=W.get(c);d=W.get(d);m={bias:W.get(E[m>>2]),recurrentBias:W.get(E[m+4>>2]),initialHiddenState:W.get(E[m+8>>2]),resetAfter:0!==D[m+12>>0],returnSequence:0!==D[m+13>>0],direction:Qa[E[m+16>>2]],layout:Ra[E[m+20>>2]],activations:Y.get(E[m+24>>2])};h=a.gru(b,c,d,h,l,m);return X.create(h)},wa:function(a,b,c){a=R.get(a);b=A(b);c=Va(c);c=a.input(b,c);return W.create(c)},va:function(a,b,c){a=R.get(a);b=W.get(b);c=a.leakyRelu(b,{alpha:G[c>>2]});return W.create(c)},\nua:function(a,b){a=R.get(a).leakyRelu({alpha:G[b>>2]});return P.create(a)},ta:function(a,b,c){a=R.get(a);b=W.get(b);c=W.get(c);c=a.matmul(b,c);return W.create(c)},ra:function(a,b,c){a=R.get(a);b=W.get(b);c=Wa(c);c=a.maxPool2d(b,c);return W.create(c)},w:function(a){R.release(a)},qa:function(a,b){a=R.get(a);b=W.get(b);b=a.relu(b);return W.create(b)},A:function(a){a=R.get(a).relu();return P.create(a)},pa:function(a,b,c){a=R.get(a);b=W.get(b);var d=Oa[E[c>>2]];var h=F[c+4>>2];var l=E[c+8>>2];if(0!==h&&\n0!==l){for(var m=[],u=0;u<h;++u,l+=4)m.push(G[l>>2]);h=m}else h=void 0;c={mode:d,scales:h,sizes:N(F[c+12>>2],E[c+16>>2]),axes:N(F[c+20>>2],E[c+24>>2])};c=a.resample2d(b,c);return W.create(c)},oa:function(a,b,c,d){a=R.get(a);b=W.get(b);c=N(d,c);c=a.reshape(b,c);return W.create(c)},na:function(a,b){a=R.get(a);b=W.get(b);b=a.sigmoid(b);return W.create(b)},z:function(a){a=R.get(a).sigmoid();return P.create(a)},ma:function(a,b,c,d,h){a=R.get(a);b=W.get(b);if(0!==d&&0!==c){for(var l=[],m=0;m<d;++m,c+=4)l.push(F[c>>\n2]);c=l}else c=void 0;1==d&&(c=c[0]);d=a.split(b,c,{axis:E[h>>2]});return X.create(d)},la:function(a,b){a=R.get(a);b=W.get(b);b=a.tanh(b);return W.create(b)},y:function(a){a=R.get(a).tanh();return P.create(a)},ka:function(a,b,c){a=R.get(a);b=W.get(b);c={permutation:N(F[c>>2],E[c+4>>2])};c=a.transpose(b,c);return W.create(c)},Ka:function(a,b,c){a=Q.get(a);b=S.get(b);c=T.get(c);return a.compute(b,c)},Ja:function(a){Q.Bb(a)},C:function(a){Q.release(a)},ia:function(a){S.release(a)},ja:function(a,b,c){a=\nS.get(a);b=A(b);c=0===E[c+12>>2]?Ta(c+0):{resource:Ta(c+0),dimensions:N(F[c+16>>2],E[c+12>>2])};a[b]=c},ga:function(a){V.release(a)},ha:function(a,b,c){a=V.get(a);b=A(b);c=W.get(c);a[b]=c},ea:function(a){T.release(a)},fa:function(a,b,c){a=T.get(a);b=A(b);c=Ta(c);a[b]=c},l:function(a,b){a=X.get(a)[b];return W.create(a)},v:function(a){X.release(a)},e:function(a){W.Bb(a)},d:function(a){W.release(a)},ba:function(a){Y.Bb(a)},o:function(a){Y.release(a)},ca:function(a,b){a=Y.get(a);b=P.get(b);a.push(b)},\nNa:nb,h:function(a,b,c,d){return nb(a,b,c,d)},aa:function(a){a=O.get(a);a=new MLGraphBuilder(a);return R.create(a)},$:function(){return S.create({})},_:function(){return V.create({})},Z:function(){return T.create({})},Y:function(){return Y.create([])}};\n(function(){function a(h){e.asm=h.exports;ka=e.asm.Ra;ta();ua=e.asm.vb;wa.unshift(e.asm.Sa);H--;e.monitorRunDependencies&&e.monitorRunDependencies(H);0==H&&(null!==Aa&&(clearInterval(Aa),Aa=null),I&&(h=I,I=null,h()))}function b(h){a(h.instance)}function c(h){return Ea().then(function(l){return WebAssembly.instantiate(l,d)}).then(h,function(l){y(\"failed to asynchronously prepare wasm: \"+l);x(l)})}var d={a:sb};H++;e.monitorRunDependencies&&e.monitorRunDependencies(H);if(e.instantiateWasm)try{return e.instantiateWasm(d,\na)}catch(h){return y(\"Module.instantiateWasm callback failed with error: \"+h),!1}(function(){return z||\"function\"!==typeof WebAssembly.instantiateStreaming||Ba()||K.startsWith(\"file://\")||\"function\"!==typeof fetch?c(b):fetch(K,{credentials:\"same-origin\"}).then(function(h){return WebAssembly.instantiateStreaming(h,d).then(b,function(l){y(\"wasm streaming compile failed: \"+l);y(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ba);return{}})();\ne.___wasm_call_ctors=function(){return(e.___wasm_call_ctors=e.asm.Sa).apply(null,arguments)};e._OrtInit=function(){return(e._OrtInit=e.asm.Ta).apply(null,arguments)};e._OrtCreateSessionOptions=function(){return(e._OrtCreateSessionOptions=e.asm.Ua).apply(null,arguments)};e._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(e._OrtSessionOptionsAppendExecutionProviderWebNN=e.asm.Va).apply(null,arguments)};\ne._OrtAddSessionConfigEntry=function(){return(e._OrtAddSessionConfigEntry=e.asm.Wa).apply(null,arguments)};e._OrtReleaseSessionOptions=function(){return(e._OrtReleaseSessionOptions=e.asm.Xa).apply(null,arguments)};e._OrtCreateSession=function(){return(e._OrtCreateSession=e.asm.Ya).apply(null,arguments)};e._OrtReleaseSession=function(){return(e._OrtReleaseSession=e.asm.Za).apply(null,arguments)};e._OrtGetInputCount=function(){return(e._OrtGetInputCount=e.asm._a).apply(null,arguments)};\ne._OrtGetOutputCount=function(){return(e._OrtGetOutputCount=e.asm.$a).apply(null,arguments)};e._OrtGetInputName=function(){return(e._OrtGetInputName=e.asm.ab).apply(null,arguments)};e._OrtGetOutputName=function(){return(e._OrtGetOutputName=e.asm.bb).apply(null,arguments)};e._OrtFree=function(){return(e._OrtFree=e.asm.cb).apply(null,arguments)};e._OrtCreateTensor=function(){return(e._OrtCreateTensor=e.asm.db).apply(null,arguments)};\ne._OrtGetTensorData=function(){return(e._OrtGetTensorData=e.asm.eb).apply(null,arguments)};e._OrtReleaseTensor=function(){return(e._OrtReleaseTensor=e.asm.fb).apply(null,arguments)};e._OrtCreateRunOptions=function(){return(e._OrtCreateRunOptions=e.asm.gb).apply(null,arguments)};e._OrtAddRunConfigEntry=function(){return(e._OrtAddRunConfigEntry=e.asm.hb).apply(null,arguments)};e._OrtReleaseRunOptions=function(){return(e._OrtReleaseRunOptions=e.asm.ib).apply(null,arguments)};\ne._OrtRun=function(){return(e._OrtRun=e.asm.jb).apply(null,arguments)};e._OrtEndProfiling=function(){return(e._OrtEndProfiling=e.asm.kb).apply(null,arguments)};\nvar ra=e._malloc=function(){return(ra=e._malloc=e.asm.lb).apply(null,arguments)},rb=e.___errno_location=function(){return(rb=e.___errno_location=e.asm.mb).apply(null,arguments)},qb=e._free=function(){return(qb=e._free=e.asm.nb).apply(null,arguments)},Z=e.__get_tzname=function(){return(Z=e.__get_tzname=e.asm.ob).apply(null,arguments)},hb=e.__get_daylight=function(){return(hb=e.__get_daylight=e.asm.pb).apply(null,arguments)},gb=e.__get_timezone=function(){return(gb=e.__get_timezone=e.asm.qb).apply(null,\narguments)},tb=e.stackSave=function(){return(tb=e.stackSave=e.asm.rb).apply(null,arguments)},ub=e.stackRestore=function(){return(ub=e.stackRestore=e.asm.sb).apply(null,arguments)},vb=e.stackAlloc=function(){return(vb=e.stackAlloc=e.asm.tb).apply(null,arguments)},pb=e._memalign=function(){return(pb=e._memalign=e.asm.ub).apply(null,arguments)};e.UTF8ToString=A;e.stringToUTF8=function(a,b,c){return oa(a,C,b,c)};e.lengthBytesUTF8=pa;e.stackSave=tb;e.stackRestore=ub;e.stackAlloc=vb;var wb;\nI=function xb(){wb||yb();wb||(I=xb)};\nfunction yb(){function a(){if(!wb&&(wb=!0,e.calledRun=!0,!la)){Fa(wa);aa(e);if(e.onRuntimeInitialized)e.onRuntimeInitialized();if(e.postRun)for(\"function\"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;){var b=e.postRun.shift();ya.unshift(b)}Fa(ya)}}if(!(0<H)){if(e.preRun)for(\"function\"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)za();Fa(va);0<H||(e.setStatus?(e.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){e.setStatus(\"\")},1);a()},1)):a())}}e.run=yb;\nif(e.preInit)for(\"function\"==typeof e.preInit&&(e.preInit=[e.preInit]);0<e.preInit.length;)e.preInit.pop()();yb();\n\n\n  return ortWasm.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return ortWasm; });\nelse if (typeof exports === 'object')\n  exports[\"ortWasm\"] = ortWasm;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable import/no-internal-modules */\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {Session} from './onnxjs/session';\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\n\nclass OnnxjsBackend implements Backend {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async init(): Promise<void> {}\n\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\n    // onnxruntime-common).\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\n    //       Currently we allow this to happen to make test runner work.\n    const session = new Session(options as unknown as Session.Config);\n\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\n    if (typeof pathOrBuffer === 'string') {\n      await session.loadModel(pathOrBuffer);\n    } else {\n      await session.loadModel(pathOrBuffer);\n    }\n\n    return new OnnxjsSessionHandler(session);\n  }\n}\n\nexport const onnxjsBackend = new OnnxjsBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\nimport {promisify} from 'util';\nimport {initWasm} from './wasm/proxy-wrapper';\n\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initWasm();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    let buffer: Uint8Array;\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        buffer = await promisify(readFile)(pathOrBuffer);\n      } else {\n        // browser\n        const response = await fetch(pathOrBuffer);\n        const arrayBuffer = await response.arrayBuffer();\n        buffer = new Uint8Array(arrayBuffer);\n      }\n    } else {\n      buffer = pathOrBuffer;\n    }\n\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(buffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\nimport {onnxjsBackend} from './backend-onnxjs';\nimport {wasmBackend} from './backend-wasm';\n\nregisterBackend('webgl', onnxjsBackend, 1);\nregisterBackend('wasm', wasmBackend, 2);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\n\nimport {Tensor} from './tensor';\nimport {LongUtil} from './util';\n\nexport declare namespace Attribute {\n  export interface DataTypeMap {\n    float: number;\n    int: number;\n    string: string;\n    tensor: Tensor;\n    floats: number[];\n    ints: number[];\n    strings: string[];\n    tensors: Tensor[];\n  }\n\n  export type DataType = keyof DataTypeMap;\n}\n\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\n\ntype Value = [ValueTypes, Attribute.DataType];\n\nexport class Attribute {\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\n    this._attributes = new Map();\n    if (attributes !== null && attributes !== undefined) {\n      for (const attr of attributes) {\n        if (attr instanceof onnx.AttributeProto) {\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        } else if (attr instanceof ortFbs.Attribute) {\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        }\n      }\n      if (this._attributes.size < attributes.length) {\n        throw new Error('duplicated attribute names');\n      }\n    }\n  }\n\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\n    this._attributes.set(key, [value, type]);\n  }\n  delete(key: string): void {\n    this._attributes.delete(key);\n  }\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\n    return this.get(key, 'float', defaultValue);\n  }\n\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\n    return this.get(key, 'int', defaultValue);\n  }\n\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\n    return this.get(key, 'string', defaultValue);\n  }\n\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\n    return this.get(key, 'tensor', defaultValue);\n  }\n\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\n    return this.get(key, 'floats', defaultValue);\n  }\n\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\n    return this.get(key, 'ints', defaultValue);\n  }\n\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\n    return this.get(key, 'strings', defaultValue);\n  }\n\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\n    return this.get(key, 'tensors', defaultValue);\n  }\n\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\n    const valueAndType = this._attributes.get(key);\n    if (valueAndType === undefined) {\n      if (defaultValue !== undefined) {\n        return defaultValue;\n      }\n      throw new Error(`required attribute not found: ${key}`);\n    }\n    if (valueAndType[1] !== type) {\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\n    }\n    return valueAndType[0] as V;\n  }\n\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\n    switch (type) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return 'float';\n      case onnx.AttributeProto.AttributeType.INT:\n        return 'int';\n      case onnx.AttributeProto.AttributeType.STRING:\n        return 'string';\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return 'tensor';\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return 'floats';\n      case onnx.AttributeProto.AttributeType.INTS:\n        return 'ints';\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return 'strings';\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return 'tensors';\n      default:\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\n    }\n  }\n\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\n      throw new Error('graph attribute is not supported yet');\n    }\n\n    const value = this.getValueNoCheck(attr);\n\n    // cast LONG to number\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\n    }\n\n    // cast LONG[] to number[]\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\n      const numberValue: number[] = new Array<number>(arr.length);\n\n      for (let i = 0; i < arr.length; i++) {\n        const maybeLong = arr[i];\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\n      }\n\n      return numberValue;\n    }\n\n    // cast onnx.TensorProto to onnxjs.Tensor\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\n    }\n\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\n      if (attr instanceof onnx.AttributeProto) {\n        const tensorProtos = value as onnx.ITensorProto[];\n        return tensorProtos.map(value => Tensor.fromProto(value));\n      } else if (attr instanceof ortFbs.Attribute) {\n        const tensorProtos = value as ortFbs.Tensor[];\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\n      }\n    }\n\n    // cast Uint8Array to string\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\n      // string attributes are returned as string, so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8String = value as Uint8Array;\n        return Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString();\n      }\n    }\n\n    // cast Uint8Array[] to string[]\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\n      // format strings attributes are returned as string[], so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8Strings = value as Uint8Array[];\n        return utf8Strings.map(\n            utf8String => Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString());\n      }\n    }\n\n    return value as ValueTypes;\n  }\n\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\n  }\n\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\n    switch (attr.type!) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return attr.f;\n      case onnx.AttributeProto.AttributeType.INT:\n        return attr.i;\n      case onnx.AttributeProto.AttributeType.STRING:\n        return attr.s;\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return attr.t;\n      case onnx.AttributeProto.AttributeType.GRAPH:\n        return attr.g;\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return attr.floats;\n      case onnx.AttributeProto.AttributeType.INTS:\n        return attr.ints;\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return attr.strings;\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return attr.tensors;\n      case onnx.AttributeProto.AttributeType.GRAPHS:\n        return attr.graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\n    }\n  }\n\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\n    switch (attr.type()) {\n      case ortFbs.AttributeType.FLOAT:\n        return attr.f();\n      case ortFbs.AttributeType.INT:\n        return attr.i();\n      case ortFbs.AttributeType.STRING:\n        return attr.s();\n      case ortFbs.AttributeType.TENSOR:\n        return attr.t();\n      case ortFbs.AttributeType.GRAPH:\n        return attr.g();\n      case ortFbs.AttributeType.FLOATS:\n        return attr.floatsArray();\n      case ortFbs.AttributeType.INTS: {\n        const ints = [];\n        for (let i = 0; i < attr.intsLength(); i++) {\n          ints.push(attr.ints(i)!);\n        }\n        return ints;\n      }\n      case ortFbs.AttributeType.STRINGS: {\n        const strings = [];\n        for (let i = 0; i < attr.stringsLength(); i++) {\n          strings.push(attr.strings(i));\n        }\n        return strings;\n      }\n      case ortFbs.AttributeType.TENSORS: {\n        const tensors = [];\n        for (let i = 0; i < attr.tensorsLength(); i++) {\n          tensors.push(attr.tensors(i)!);\n        }\n        return tensors;\n      }\n      // case ortFbs.AttributeType.GRAPHS:\n      // TODO: Subgraph not supported yet.\n      // const graphs = [];\n      // for (let i = 0; i < attr.graphsLength(); i++) {\n      //   graphs.push(attr.graphs(i)!);\n      // }\n      // return graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\n    }\n  }\n\n  protected _attributes: Map<string, Value>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGLBackend} from './backends/backend-webgl';\nimport {Graph} from './graph';\nimport {Operator} from './operators';\nimport {OpSet} from './opset';\nimport {Session} from './session';\n\nexport interface InferenceHandler {\n  /**\n   * dispose the inference handler. it will be called as the last step in Session.run()\n   */\n  dispose(): void;\n}\n\nexport interface SessionHandler {\n  /**\n   * transform the graph at initialization time\n   * @param graphTransformer the graph transformer to manipulate the model graph\n   */\n  transformGraph?(graphTransformer: Graph.Transformer): void;\n\n  /**\n   * create an instance of InferenceHandler to use in a Session.run() call\n   */\n  createInferenceHandler(): InferenceHandler;\n\n  /**\n   * dispose the session handler. it will be called when a session is being disposed explicitly\n   */\n  dispose(): void;\n\n  /**\n   * Resolves the operator from the name and opset version; backend specific\n   * @param node the node to resolve\n   * @param opsets a list of opsets that exported from the model\n   * @param graph the completely initialized graph\n   */\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\n\n  /**\n   * This method let's the sessionHandler know that the graph initialization is complete\n   * @param graph the completely initialized graph\n   */\n  onGraphInitialized?(graph: Graph): void;\n\n  /**\n   * a reference to the corresponding backend\n   */\n  readonly backend: Backend;\n\n  /**\n   * a reference to the session context\n   */\n  readonly context: Session.Context;\n}\n\nexport interface Backend {\n  /**\n   * initialize the backend. will be called only once, when the first time the\n   * backend it to be used\n   */\n  initialize(): boolean|Promise<boolean>;\n\n  /**\n   * create an instance of SessionHandler to use in a Session object's lifecycle\n   */\n  createSessionHandler(context: Session.Context): SessionHandler;\n\n  /**\n   * dispose the backend. currently this will not be called\n   */\n  dispose(): void;\n}\n\n// caches all initialized backend instances\nconst backendsCache: Map<string, Backend> = new Map();\n\nexport const backend: {[name: string]: Backend} = {\n  webgl: new WebGLBackend(),\n};\n\n/**\n * Resolve a reference to the backend. If a hint is specified, the corresponding\n * backend will be used.\n */\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\n  if (!hint) {\n    return resolveBackend(['webgl']);\n  } else {\n    const hints = typeof hint === 'string' ? [hint] : hint;\n\n    for (const backendHint of hints) {\n      const cache = backendsCache.get(backendHint);\n      if (cache) {\n        return cache;\n      }\n\n      const backend = await tryLoadBackend(backendHint);\n      if (backend) {\n        return backend;\n      }\n    }\n  }\n\n  throw new Error('no available backend to use');\n}\n\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\n  const backendObj = backend;\n\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\n    const backend = backendObj[backendHint];\n    let init = backend.initialize();\n    if (typeof init === 'object' && 'then' in init) {\n      init = await init;\n    }\n    if (init) {\n      backendsCache.set(backendHint, backend);\n      return backend;\n    }\n  }\n\n  return undefined;\n}\n\nfunction isBackend(obj: unknown) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = obj as any;\n\n  // check if an object is a Backend instance\n  if (\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport type BackendType = Backend;\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\nimport {Backend, SessionHandler} from '../backend';\nimport {Logger} from '../instrument';\nimport {Session} from '../session';\n\nimport {WebGLSessionHandler} from './webgl/session-handler';\nimport {WebGLContext} from './webgl/webgl-context';\nimport {createWebGLContext} from './webgl/webgl-context-factory';\n\n/**\n * WebGLBackend is the entry point for all WebGL opeartions\n * When it starts it created the WebGLRenderingContext\n * and other main framework components such as Program and Texture Managers\n */\nexport class WebGLBackend implements Backend {\n  glContext: WebGLContext;\n\n  get contextId(): 'webgl'|'webgl2'|undefined {\n    return env.webgl.contextId;\n  }\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\n    env.webgl.contextId = value;\n  }\n\n  get matmulMaxBatchSize(): number|undefined {\n    return env.webgl.matmulMaxBatchSize;\n  }\n  set matmulMaxBatchSize(value: number|undefined) {\n    env.webgl.matmulMaxBatchSize = value;\n  }\n\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\n    return env.webgl.textureCacheMode;\n  }\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\n    env.webgl.textureCacheMode = value;\n  }\n\n  get pack(): boolean|undefined {\n    return env.webgl.pack;\n  }\n  set pack(value: boolean|undefined) {\n    env.webgl.pack = value;\n  }\n\n  get async(): boolean|undefined {\n    return env.webgl.async;\n  }\n  set async(value: boolean|undefined) {\n    env.webgl.async = value;\n  }\n\n  initialize(): boolean {\n    try {\n      this.glContext = createWebGLContext(this.contextId);\n      if (typeof this.matmulMaxBatchSize !== 'number') {\n        this.matmulMaxBatchSize = 16;\n      }\n      if (typeof this.textureCacheMode !== 'string') {\n        this.textureCacheMode = 'full';\n      }\n      if (typeof this.pack !== 'boolean') {\n        this.pack = false;\n      }\n      if (typeof this.async !== 'boolean') {\n        this.async = false;\n      }\n\n      Logger.setWithEnv(env);\n\n      Logger.verbose(\n          'WebGLBackend',\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\n              this.async}.`);\n      return true;\n    } catch (e) {\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\n      return false;\n    }\n  }\n  createSessionHandler(context: Session.Context): SessionHandler {\n    return new WebGLSessionHandler(this, context);\n  }\n  dispose(): void {\n    this.glContext.dispose();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\nimport {squeezeShape} from './texture-layout-strategy';\nimport {TextureLayout} from './types';\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class CoordsGlslLib extends GlslLib {\n  returnType: string;\n\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.offsetToCoords(),\n      ...this.coordsToOffset(),\n      ...this.toVec(),\n      ...this.valueFrom(),\n      // TODO return these only when packing is enabled.\n      ...this.getCommonUtilFuncs(),\n      ...this.getInputsSamplingSnippets(),\n      ...this.getOutputSamplingSnippet()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'offsetToCoords';\n    return {\n      offsetToCoords: new GlslLibRoutine(`\n      vec2 ${funcName}(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'coordsToOffset';\n    return {\n      coordsToOffset: new GlslLibRoutine(`\n      int ${funcName}(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Generates code for output sampler.\n   */\n\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    if (outputLayout.isPacked) {\n      return this.getPackedOutputSamplingSnippet(outputLayout);\n    } else {\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\n    }\n  }\n\n  /**\n   * Generates code for packed output sampler.\n   */\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRGBASource = `\n      void setOutput(vec4 val) {\n        ${glsl.output} = val;\n      }\n    `;\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\n    return result;\n  }\n\n  /**\n   * Generates code for unpacked output sampler.\n   */\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] =\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      case 4:\n        result[funcName] = this.getOutputUnpacked4DCoords(\n            outShape as [number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 5:\n        result[funcName] = this.getOutputUnpacked5DCoords(\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 6:\n        result[funcName] = this.getOutputUnpacked6DCoords(\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRSource = `\n        void setOutput(float val) {\n          ${glsl.output} = vec4(val, 0, 0, 0);\n        }\n    `;\n    const floatTextureSetRFuncName = 'floatTextureSetR';\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\n    return result;\n  }\n\n  /**\n   * Scalar output coordinates.\n   */\n  protected getOutputScalarCoords(): GlslLibRoutine {\n    return new GlslLibRoutine(`\n      int getOutputCoords() {\n        return 0;\n      }\n    `);\n  }\n\n  /**\n   * 1D packed output coordinates.\n   */\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = texShape;\n    let source = '';\n    if (packedTexShape[0] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    if (packedTexShape[1] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 2D packed output coordinates.\n   */\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\n      source = `\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\n        }\n      `;\n      return new GlslLibRoutine(source);\n    }\n\n    const packedTexShape = texShape;\n    // texels needed to accommodate a logical row\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 3D packed output coordinates.\n   */\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    const source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          int b = index / ${texelsInBatch};\n          index -= b * ${texelsInBatch};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec3(b, r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * ND packed output coordinates.\n   */\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    let texelsInBatchN = texelsInBatch;\n    let batches = '';\n    let coords = 'b, r, c';\n\n    for (let b = 2; b < shape.length - 1; b++) {\n      texelsInBatchN *= shape[shape.length - b - 1];\n      batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n      coords = `b${b}, ` + coords;\n    }\n    const source = `\n      ivec${shape.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n        ${batches}\n\n        int b = index / ${texelsInBatch};\n        index -= b * ${texelsInBatch};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\n        int c = 2 * (index / ${texelsInLogicalRow});\n\n        return ivec${shape.length}(${coords});\n      }\n    `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 1D output coordinates.\n   */\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 2D output coordinates.\n   */\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          int r = index / ${shape[1]};\n          int c = index - r * ${shape[1]};\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 3D output coordinates.\n   */\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec3(r, c, d);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 4D output coordinates.\n   */\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec4(r, c, d, d2);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 5D output coordinates.\n   */\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 6D output coordinates.\n   */\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\n    number, number\n  ]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n         ${coordsFromIndexSnippet}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Generates code for common UV coords computation utility functions.\n   */\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    let funcName = 'uvFromFlat';\n    result[funcName] = new GlslLibRoutine(`\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    `);\n    funcName = 'packedUVfrom1D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom2D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom3D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'sampleTexture';\n    const glsl = getGlsl(this.context.glContext.version);\n    result[funcName] = new GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${glsl.texture2D}(textureSampler, uv).r;\n        }`);\n    return result;\n  }\n\n  /**\n   * Constructing snippets for inputs\n   */\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const outputLayout = this.context.outputTextureLayout;\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\n      const inputLayout = this.context.inputTextureLayouts[i];\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\n      if (inputLayout.isPacked) {\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\n      } else {\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\n      }\n\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\n        if (inputLayout.isPacked) {\n          result[outCoordFuncName] =\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        } else {\n          result[outCoordFuncName] =\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Constructing snippets for output coordinates of samplers\n   */\n  protected getPackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texName = name;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\n\n    const inRank = inShape.length;\n    const outRank = outShape.length;\n\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n\n    const type = getCoordsDataType(outRank);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n\n    let output = 'return outputValue;';\n    const inSize = ShapeUtil.size(inShape);\n    const isInputScalar = inSize === 1;\n    const outSize = ShapeUtil.size(outShape);\n    const isOutputScalar = outSize === 1;\n\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n      output = `\n        return vec4(outputValue.xy, outputValue.xy);\n      `;\n    } else if (isInputScalar && !isOutputScalar) {\n      if (outRank === 1) {\n        output = `\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        `;\n      } else {\n        output = `\n          return vec4(outputValue.x);\n        `;\n      }\n    } else if (broadcastDims.length) {\n      const rows = inRank - 2;\n      const cols = inRank - 1;\n\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.x);';\n      } else if (broadcastDims.indexOf(rows) > -1) {\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\n            'outputValue.x, outputValue.y);';\n      } else if (broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\n      }\n    }\n\n    const swapLastDimsSnippet = `\n        int lastDim = coords.${fields[outRank - 1]};\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\n        coords.${fields[outRank - 2]} = lastDim;\n      `;\n    const source = `\n      vec4 ${funcName}() {\n        ${type} coords = getOutputCoords();\n        ${swapLastDimsSnippet}\n        ${coordsSnippet}\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\n        ${output}\n      }\n    `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for unpacked output coordinates of samplers\n   */\n  protected getUnpackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const inTexShape = [inputLayout.width, inputLayout.height];\n    const inRank = inputLayout.unpackedShape.length;\n    const outRank = outputLayout.unpackedShape.length;\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\n\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, TexCoords);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const type = getCoordsDataType(outRank);\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n    const source = `\n        float ${funcName}() {\n          ${type} coords = getOutputCoords();\n          ${coordsSnippet}\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for packed operations.\n   */\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    switch (inputLayout.unpackedShape.length) {\n      case 0:\n        return this.getPackedSamplerScalar(funcName, name);\n      case 1:\n        return this.getPackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getPackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getPackedSampler3D(funcName, name, inputLayout);\n      default:\n        return this.getPackedSamplerND(funcName, name, inputLayout);\n    }\n  }\n\n  /**\n   * Constructing snippets for unpacked operations.\n   */\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    switch (shape.length) {\n      case 0:\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\n      case 1:\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\n      case 4:\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\n      case 5:\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\n      case 6:\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\n      default:\n        // TODO support more dimensionalities\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\n    }\n  }\n\n  /**\n   * Packed scalar snippet.\n   */\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\n    const glsl = getGlsl(this.context.glContext.version);\n    const source = `\n          vec4 ${funcName}() {\n            return ${glsl.texture2D}(${name}, halfCR);\n          }\n        `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Packed 1D snippet.\n   */\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[1], texShape[0]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedSampler = `vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\n  }\n\n  /**\n   * Packed 2D snippet.\n   */\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n        return ${glsl.texture2D}(${name}, uv);\n      }`;\n\n      return new GlslLibRoutine(packedSampler);\n    }\n    const packedTexShape = texShape;\n    const valuesPerRow = Math.ceil(shape[1] / 2);\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\n  }\n\n  /**\n   * Packed 3D snippet.\n   */\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[0], texShape[1]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    if (shape[0] === 1) {\n      const squeezedShape = shape.slice(1);\n      const keptDims = [1, 2];\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['b', 'row', 'col'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\n      const packedSampler = `${samplerRoutine.routineBody}\n      vec4 ${funcName}(int b, int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      } `;\n      const source = packedSampler;\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\n    }\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n\n    const valuesPerRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${name}, uv);}`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\n  }\n  /*\n   * Packed ND snippet.\n   */\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const rank = shape.length;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texNumR = packedTexShape[1];\n    const texNumC = packedTexShape[0];\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    let params = 'int b, int row, int col';\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n    for (let b = 2; b < rank - 1; b++) {\n      params = `int b${b}, ` + params;\n      texelsInBatch *= shape[rank - b - 1];\n      index = `b${b} * ${texelsInBatch} + ` + index;\n    }\n    const packedSampler = `vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked scalar snippet.\n   */\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\n    if (texNumR === 1 && texNumC === 1) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, halfCR);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const source = `\n        float ${funcName}() {\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 1D snippet.\n   */\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const tNumR = inputLayout.width;\n    const tNumC = inputLayout.height;\n\n    if (tNumC === 1 && tNumR === 1) {\n      const source = `\n        float ${funcName}(int index) {\n          return sampleTexture(${name}, halfCR);\n        }\n      `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    if (tNumC === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    if (tNumR === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    const source = `\n        float ${funcName}(int index) {\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 2D snippet.\n   */\n\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n\n    // TODO: modify row/col order for other dimensions.\n    const texShape = [inputLayout.height, inputLayout.width];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const texNumR = texShape[1];\n      const texNumC = texShape[0];\n      const source = `\n          float ${funcName}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const params = ['col', 'row'];\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const texNumR = texShape[1];\n    const texNumC = texShape[0];\n    if (texNumC === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    if (texNumR === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    const source = `\n        float ${funcName}(int row, int col) {\n          int index = col * ${shape[1]} + row;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 3D snippet.\n   */\n\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride0 = shape[1] * shape[2];\n    const stride1 = shape[2];\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['batch', 'col', 'row'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\n      // TODO: revisit the logic here to make it simpler\n      const revDims = keptDims.reverse();\n      const source = `\n          ${routine.routineBody}\n          float ${funcName}(int batch, int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, revDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, routine.dependencies);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${stride0} + col * ${stride1} + row;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 4D snippet.\n   */\n\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride2 = shape[3];\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    //\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\n    //\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\n    // if (newShape.length < shape.length) {\n    //   const newInputShape = squeezeInputShape(shape, newShape);\n    //   const params = ['row', 'col', 'depth', 'depth2'];\n    //   // Deep copy of input texture layout.\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n    //   newInputLayout.unpackedShape = newInputShape;\n    //   const source = `\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\n    //       }\n    //     `;\n    //   return new GlslLibRoutine(\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    // }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2) {\n          int index = row * ${stride0} + col * ${stride1} +\n              depth2 * ${stride2} + depth;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 5D snippet.\n   */\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride3 = shape[4];\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth3 * ${stride3} + depth2;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n  }\n\n  /**\n   * Unpacked 6D snippet.\n   */\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride4 = shape[5];\n    const stride3 = shape[4] * stride4;\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n            float ${funcName}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\n            }\n          `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * This is the main function to map from the given texture coordiantes (s,t)\n   * to logical indices for the output\n   * There will only be one single variation of this\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\n   */\n  protected toVec(): {[name: string]: GlslLibRoutine} {\n    const output = this.context.outputTextureLayout;\n    const rank = output.shape.length;\n    const strides = output.strides;\n    const xScale = output.width;\n    const yScale = output.height;\n\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n        c[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= c[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n        c[${rank - 1}] = offset;`);\n    const body = `\n      void toVec(vec2 texCoords, out int c[${rank}]) {\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\n        ${stridesBlock.join('')}\n      }\n      void toVec(int offset, out int c[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n    `;\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\n  }\n  /**\n   * These are value getter functions generated for each input\n   * Each function is hardwired to the name and dimensions of the input\n   * An '_T' variation is also produced which accesses values as if the\n   * input was transposed\n   */\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const layout = this.context.inputTextureLayouts[i];\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\n      const rank = shape.length;\n      let funcName = `_${name}`;\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n      funcName = funcName + '_T';\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n    });\n    return result;\n  }\n  /**\n   * Produces one value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        float ${name}(int m[${rank}]) {\n          int offset = indicesToOffset${name}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\n          return value;\n        }\n        `;\n  }\n\n  /**\n   * Produces a packed value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}_Pack`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        vec4 ${name}(int m[${rank}]) {\n          int offset = indicesToOffset_${varName}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          return ${glsl.texture2D}(${varName}, coords);\n        }\n        `;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ProgramInfo, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum FunctionType {\n  ValueBased,\n  Positional\n}\nexport interface GlslFunction<T extends FunctionType> {\n  body: string;\n  name: string;\n  type: T;\n}\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\n  inputShape: readonly number[];\n  outputShape: readonly number[];\n}\n\nexport class GlslContext {\n  constructor(\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\n      public outputTextureLayout: TextureLayout) {}\n}\nexport abstract class GlslLib {\n  constructor(public context: GlslContext) {}\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\n  abstract getCustomTypes(): {[name: string]: string};\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies\nexport class GlslLibRoutine {\n  constructor(public routineBody: string, public dependencies?: string[]) {}\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\nexport class GlslLibRoutineNode {\n  dependencies: GlslLibRoutineNode[];\n  routineBody: string;\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\n    if (dependencies) {\n      this.dependencies = dependencies;\n    } else {\n      this.dependencies = [];\n    }\n\n    if (routineBody) {\n      this.routineBody = routineBody;\n    }\n  }\n  addDependency(node: GlslLibRoutineNode) {\n    if (node) {\n      this.dependencies.push(node);\n    }\n  }\n}\n\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\nexport class TopologicalSortGlslRoutines {\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\n    if (!nodes || nodes.length === 0) {\n      return [];\n    }\n\n    if (nodes.length === 1) {\n      return nodes;\n    }\n\n    const cycleCheck = new Set<string>();\n    const alreadyTraversed = new Set<string>();\n    const result = new Array<GlslLibRoutineNode>();\n\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\n    return result;\n  }\n\n  private static createOrderedNodes(\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\n      result: GlslLibRoutineNode[]) {\n    for (let i = 0; i < graphNodes.length; ++i) {\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\n    }\n  }\n\n  private static dfsTraverse(\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\n    // if this root has already been traversed return\n    if (!root || alreadyTraversed.has(root.name)) {\n      return;\n    }\n\n    // cyclic dependency has been detected\n    if (cycleCheck.has(root.name)) {\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\n    }\n\n    // hold this node to detect cycles if any\n    cycleCheck.add(root.name);\n\n    // traverse children in a dfs fashion\n    const dependencies = root.dependencies;\n    if (dependencies && dependencies.length > 0) {\n      for (let i = 0; i < dependencies.length; ++i) {\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\n      }\n    }\n\n    // add to result holder\n    result.push(root);\n\n    // mark this node as traversed so that we don't traverse from this again\n    alreadyTraversed.add(root.name);\n\n    // release the hold\n    cycleCheck.delete(root.name);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * This GLSL library handles routines converting\n * float32 to/from Unsigned byte or float 16\n */\nexport class EncodingGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        `)\n    };\n  }\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      encode: new GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${endianness}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode a vec4 of unsigned bytes to float32\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      decode: new GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${endianness}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)\n    };\n  }\n  /**\n   * Determines if the machine is little endian or not\n   * @credit: https://gist.github.com/TooTallNate/4750953\n   */\n  static isLittleEndian(): boolean {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) {\n      return true;\n    }\n    if (c[0] === 0xde) {\n      return false;\n    }\n    throw new Error('unknown endianness');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\n\n/**\n * This GLSL library handles routines around reading a texlet and writing to it\n * Reading and writing could be more than just dealing with one channel\n * It may require encoding/decoding to/from 4 channels into one\n */\nexport class FragColorGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\n    const glsl = getGlsl(this.context.glContext.version);\n    return {\n      setFragColor: new GlslLibRoutine(\n          `\n        void setFragColor(float value) {\n            ${glsl.output} = encode(value);\n        }\n        `,\n          ['encoding.encode'])\n    };\n  }\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\n    return {\n      getColorAsFloat: new GlslLibRoutine(\n          `\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        `,\n          ['encoding.decode'])\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\n/**\n * GLSL preprocessor responsible for resolving @inline directives\n */\nexport function replaceInlines(script: string): string {\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\n  let match;\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\n    const params = match[3]\n                       .split(',')\n                       .map(s => {\n                         const tokens = s.trim().split(' ');\n                         if (tokens && tokens.length === 2) {\n                           return {type: tokens[0], name: tokens[1]};\n                         }\n                         return null;\n                       })\n                       .filter(v => v !== null);\n    inlineDefs[match[2]] = {params, body: match[4]};\n  }\n  for (const name in inlineDefs) {\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\n    const regex = new RegExp(regexString, 'gm');\n    while ((match = regex.exec(script)) !== null) {\n      const type = match[1];\n      const variable = match[2];\n      const params = match[3].split(',');\n      const declLine = (type) ? `${type} ${variable};` : '';\n      let newBody: string = inlineDefs[name].body;\n      let paramRedecLine = '';\n      inlineDefs[name].params.forEach((v, i) => {\n        if (v) {\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\n        }\n      });\n      newBody = `${paramRedecLine}\\n ${newBody}`;\n      newBody = newBody.replace('return', `${variable} = `);\n      const replacement = `\n      ${declLine}\n      {\n        ${newBody}\n      }\n      `;\n      script = script.replace(match[0], replacement);\n    }\n  }\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\n  return script;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\nimport {replaceInlines} from './glsl-function-inliner';\nimport {glslRegistry} from './glsl-registered-libs';\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * Preprocessor for the additions to the GLSL language\n * It deals with:\n *  @include directives\n *  @inline\n *  Loop unrolling (not implemented)\n *  Macro resolution (not implemented)\n */\nexport class GlslPreprocessor {\n  readonly context: GlslContext;\n  readonly libs: {[name: string]: GlslLib} = {};\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\n\n  constructor(\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\n      outputTextureLayout: TextureLayout) {\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n\n    // construct GlslLibs\n    Object.keys(glslRegistry).forEach((name: string) => {\n      const lib = new glslRegistry[name](this.context);\n      this.libs[name] = lib;\n    });\n\n    // construct GlslRoutineDependencyGraph\n    const map = this.glslLibRoutineDependencyGraph;\n    for (const libName in this.libs) {\n      const lib = this.libs[libName];\n      const routinesInLib = lib.getFunctions();\n      for (const routine in routinesInLib) {\n        const key = libName + '.' + routine;\n        let currentNode: GlslLibRoutineNode;\n        if (map[key]) {\n          currentNode = map[key];\n          currentNode.routineBody = routinesInLib[routine].routineBody;\n        } else {\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\n          map[key] = currentNode;\n        }\n        const dependencies = routinesInLib[routine].dependencies;\n        if (dependencies) {\n          for (let i = 0; i < dependencies.length; ++i) {\n            if (!map[dependencies[i]]) {\n              const node = new GlslLibRoutineNode(dependencies[i]);\n              map[dependencies[i]] = node;\n              currentNode.addDependency(node);\n            } else {\n              currentNode.addDependency(map[dependencies[i]]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  preprocess(): string {\n    const programInfo = this.context.programInfo;\n    let source = programInfo.shaderSource;\n\n    // append main() function\n    if (!this.context.programInfo.hasMain) {\n      source = `${source}\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\n    }\n    // replace inlines\n    source = replaceInlines(source);\n\n    // concat final source string\n    return `${getFragShaderPreamble(this.context.glContext.version)}\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\n    ${this.getImports(source)}\n    ${source}`;\n  }\n\n  protected getImports(script: string): string {\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\n\n    if (routinesIncluded.length === 0) {\n      return '';\n    }\n\n    let routines = '';\n    for (let i = 0; i < routinesIncluded.length; ++i) {\n      if (routinesIncluded[i].routineBody) {\n        routines += routinesIncluded[i].routineBody + '\\n';\n      } else {\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\n      }\n    }\n\n    return routines;\n  }\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\n    const nodes: GlslLibRoutineNode[] = [];\n\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\n      const routine = classAndRoutine.split('.')[1];\n      if (script.indexOf(routine) !== -1) {\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\n      }\n    });\n\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\n  }\n\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\n    const uniformLines: string[] = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLines.push(`uniform sampler2D ${sampler};`);\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLines.push(\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\n      }\n    }\n    return uniformLines.join('\\n');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\nimport {GlslContext, GlslLib} from './glsl-definitions';\nimport {EncodingGlslLib} from './glsl-encoding-lib';\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\nimport {VecGlslLib} from './glsl-vec-lib';\n\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\n  'encoding': EncodingGlslLib,\n  'fragcolor': FragColorGlslLib,\n  'vec': VecGlslLib,\n  'shapeUtils': ShapeUtilsGlslLib,\n  'coordinates': CoordsGlslLib,\n  //  'arrays': ArrayGlslSLib\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class ShapeUtilsGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.bcastIndex(),\n      ...this.bcastMatmulIndex(),\n      ...this.offsetToIndices(),\n      ...this.indicesToOffset(),\n      ...this.incrementIndices()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\n      if (shape.length <= outputRank) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      if (!(shape.length < 2 || shape.length > outputRank)) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastMatmulIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank - 2; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `indicesToOffset_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\n      funcName = `indicesToOffset_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\n    let block = '';\n    for (let i = rank - 1; i >= 0; --i) {\n      block += `\n        offset += indices[${i}] * ${strides[i]};\n        `;\n    }\n    return `\n      int ${name}(int indices[${rank}]) {\n        int offset = 0;\n        ${block}\n        return offset;\n      }\n      `;\n  }\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `offsetToIndices_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\n      funcName = `offsetToIndices_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n      indices[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= indices[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n      indices[${rank - 1}] = offset;`);\n    return `\n      void ${name}(int offset, out int indices[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n      `;\n  }\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const rank = shape.length;\n      const funcName = `incrementIndices_${name}`;\n      let shapeInit = '';\n      for (let i = 0; i < rank; ++i) {\n        shapeInit += `\n        shape[${i}] = ${shape[i]};`;\n      }\n      const body = `\n        void ${funcName}(int axis, out int indices[${rank}]) {\n          int shape[${rank}];\n          ${shapeInit};\n          for(int i = ${rank} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;\n      result[funcName] = new GlslLibRoutine(body);\n    });\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * represent a version irrelevant abstraction of for GLSL source code\n */\nexport interface Glsl {\n  readonly version: string;\n  readonly attribute: string;\n  readonly varyingVertex: string;\n  readonly varyingFrag: string;\n  readonly texture2D: string;\n  readonly output: string;\n  readonly outputDeclaration: string;\n}\n\nconst GLSL_ES_2_0: Glsl = {\n  version: '',\n  attribute: 'attribute',\n  varyingVertex: 'varying',\n  varyingFrag: 'varying',\n  texture2D: 'texture2D',\n  output: 'gl_FragColor',\n  outputDeclaration: '',\n};\nconst GLSL_ES_3_0: Glsl = {\n  version: '#version 300 es',\n  attribute: 'in',\n  varyingVertex: 'out',\n  varyingFrag: 'in',\n  texture2D: 'texture',\n  output: 'outputColor',\n  outputDeclaration: 'out vec4 outputColor;',\n};\n\nexport function getGlsl(version: 1|2) {\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\n}\n\nexport function getVertexShaderSource(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n      precision highp float;\n      ${glsl.attribute} vec3 position;\n      ${glsl.attribute} vec2 textureCoord;\n\n      ${glsl.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`;\n}\n\nexport function getFragShaderPreamble(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFrag} vec2 TexCoords;\n    ${glsl.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `;\n}\n\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\n  const glsl = getGlsl(version);\n  return `\n  void main() {\n    int indices[${outputShapeLength}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${glsl.output} = result;\n  }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for vec routines\n * Vec is an varible length int array. The length is fixed at the time of\n * generating the library functions from the dimensions of the output.\n */\nexport class VecGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\n  }\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\n    const result: {[name: string]: GlslLibRoutine} = {};\n    for (const name in nameOp) {\n      const fname = `${name}Vec`;\n      let assignmentBlock = '';\n      for (let i = 0; i < rank; ++i) {\n        assignmentBlock += `\n          dest[${i}] ${nameOp[name]} src[${i}];\n          `;\n      }\n      const body = `\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\n          ${assignmentBlock}\n        }\n        `;\n      result[fname] = new GlslLibRoutine(body);\n    }\n\n    return result;\n  }\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let assignmentBlock = '';\n    for (let i = 0; i < rank; ++i) {\n      assignmentBlock += `\n        dest[${i}] = src[${i}];\n        `;\n    }\n    const body = `\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\n        ${assignmentBlock}\n      }\n      `;\n    return {copyVec: new GlslLibRoutine(body)};\n  }\n\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index =${rank} + index;\n        if (index == 0)\n            m[0] = value;\n        `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            m[${i}] = value;\n            `;\n    }\n    block += `\n        else\n            m[${rank - 1}] = value;\n        `;\n    const body = `\n      void setVecItem(out int m[${rank}], int index, int value) {\n        ${block}\n      }\n        `;\n    return {setVecItem: new GlslLibRoutine(body)};\n  }\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index = ${rank} + index;\n        if (index == 0)\n            return m[0];\n      `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            return m[${i}];\n      `;\n    }\n    block += `\n        else\n            return m[${rank - 1}];\n        `;\n    const body = `\n      int getVecItem(int m[${rank}], int index) {\n        ${block}\n      }\n    `;\n    return {getVecItem: new GlslLibRoutine(body)};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from '../../backend';\nimport {Logger} from '../../instrument';\nimport {Tensor} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {createPackProgramInfoLoader} from './ops/pack';\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\n\nimport {encodeAsUint8} from './ops/uint8-encode';\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\nimport {WebGLSessionHandler} from './session-handler';\nimport {Encoder} from './texture-data-encoder';\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\n\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\n      const inputs =\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\n              .join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputs;\n      return key;\n    };\n\nexport class WebGLInferenceHandler implements InferenceHandler {\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  constructor(public session: WebGLSessionHandler) {\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  /**\n   * @returns [width, height]\n   */\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\n  }\n\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\n    if (inputs.length < program.inputNames.length) {\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\n    }\n    if (program.inputNames.length !== program.inputTypes.length) {\n      throw new Error('input names size does not match input types');\n    }\n\n    // create texture info for input\n    const inputTextureDatas: TextureData[] = [];\n    for (let i = 0; i < program.inputNames.length; ++i) {\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\n    let artifact = this.session.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // create texture info for output\n    const outputTextureLayout = createTextureLayoutFromTextureType(\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\n\n    if (!artifact) {\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\n      this.session.programManager.setArtifact(key, artifact);\n    }\n\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\n    return outputTextureData;\n  }\n\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\n    const outputTextureData = this.executeProgram(program, inputs);\n    return outputTextureData.tensor;\n  }\n\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    // input should match\n    for (let i = 0; i < inputs.length; ++i) {\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\n        throw new Error(`input[${i}] property packed inconsistent`);\n      }\n    }\n\n    // output should match\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\n      throw new Error('output property packed inconsistent');\n    }\n\n    this.session.programManager.run(artifact, inputs, output);\n  }\n\n  /**\n   * Create a TextureData object from a tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * If a related texture data is found in cache, returns it;\n   * Otherwise:\n   *   Creates a new texture layout if not provided;\n   *   Creates WebGLTexture with the layout;\n   *   Upload tensor data to the texture;\n   *   Creates a texture data object associated with the given tensor.\n   * @param tensor the tensor with data to upload\n   */\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\n\n    if (!td) {\n      // check if we have texture data in different type\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\n      if (td) {\n        if (textureType === TextureType.packed) {\n          return this.pack(td);\n        } else {\n          return this.unpack(td);\n        }\n      }\n    }\n\n    if (!td) {\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\n\n      if (textureType === TextureType.packedLastDimension) {\n        const group = 1;\n        const channels = 4;\n        const shape = tensor.dims;\n        if (shape.length === 4) {\n          // pre-processing for kernel data of Conv.\n          //\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\n          // 1. implement texture based const-folding\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\n          // 3. run the program before dotProduct.\n          //\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\n          const adjustedLayout =\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\n          let buffer = tensor.numberData;\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\n            const numFeatureMaps = shape[0];\n            const oldRowSize = shape[1] * shape[2] * shape[3];\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\n            const newSize = numFeatureMaps * newRowSize;\n            buffer = new Float32Array(newSize);\n            for (let f = 0; f < numFeatureMaps; ++f) {\n              const oldOffset = f * oldRowSize;\n              const newOffset = f * newRowSize + f % group * oldRowSize;\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\n            }\n          }\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\n        }\n      }\n\n      if (textureType === TextureType.packed) {\n        const unpackedTextureLayout =\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\n        const unpackedTextureData = this.createTextureData(\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n        td = this.pack(unpackedTextureData);\n      } else {\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n      }\n    }\n    return td;\n  }\n\n  /**\n   * Create a TextureData object using the given data and bind to the given tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\n   * implementation by Graph.Transformer\n   * @param dataType the tensor data type\n   * @param data the actual data to upload\n   * @param tensor the tensor to bind. tensor's data is ignored.\n   */\n  createTextureDataFromLayoutBindTensor(\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\n  }\n\n  private createTextureData(\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\n      usage?: Encoder.Usage): TextureData {\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\n  }\n\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureLayout: TextureLayout = {\n      channels: inputTD.channels,\n      height: inputTD.height,\n      width: inputTD.width,\n      // handle reshaping into scalar Tensors\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n      strides: ShapeUtil.computeStrides(reshapedDims),\n      unpackedShape: reshapedDims,\n    };\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\n\n    // check if the reshape is 'cheap'\n    if (isReshapeCheap(input.dims, reshapedDims)) {\n      const newTextureLayout: TextureLayout = {\n        channels: inputTD.channels,\n        height: inputTD.height,\n        width: inputTD.width,\n        // handle reshaping into scalar Tensors\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n        strides: ShapeUtil.computeStrides(reshapedDims),\n        unpackedShape: reshapedDims,\n        isPacked: true\n      };\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n      return newTextureData.tensor;\n    }\n\n    const squeezedInputShape = processDims3D(input.dims);\n    const squeezedOutputShape = processDims3D(reshapedDims);\n\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\n    const squeezedOutputTensor = this.run(\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\n    return outputTensor;\n  }\n\n  private createTextureDataFromTexture(\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\n    const textureData: TextureData = {\n      ...layout,\n      tensor: tensor ||\n          new Tensor(\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\n      texture\n    };\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\n    return textureData;\n  }\n\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\n    return this.session.isInitializer(tensorId) ?\n        this.session.getTextureData(tensorId, isPacked) :\n        isPacked ? this.packedTextureDataCache.get(tensorId) : this.unpackedTextureDataCache.get(tensorId);\n  }\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\n    if (this.session.isInitializer(tensorId)) {\n      this.session.setTextureData(tensorId, td, isPacked);\n    } else {\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\n    }\n  }\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\n    return !!this.getTextureData(tensor.dataId, isPacked);\n  }\n\n  dispose(): void {\n    this.session.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  readTexture(textureData: TextureData): Tensor.NumberType {\n    if (textureData.isPacked) {\n      return this.readTexture(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\n    if (textureData.isPacked) {\n      return this.readTextureAsync(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  pack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n\n  unpack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OpSet} from '../../opset';\n\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\nimport * as binaryOps from './ops/binary-op';\nimport {concat, parseConcatAttributes} from './ops/concat';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\nimport {gather, parseGatherAttributes} from './ops/gather';\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\nimport {pad, parsePadAttributes} from './ops/pad';\nimport {averagePool, parseAveragePoolAttributes} from './ops/pool';\nimport {globalAveragePool, parseGlobalAveragePoolAttributes} from './ops/pool';\nimport {maxPool, parseMaxPoolAttributes} from './ops/pool';\nimport {globalMaxPool} from './ops/pool';\nimport {reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\nimport {parseReduceAttributes} from './ops/reduce';\nimport {reshape} from './ops/reshape';\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\nimport {shape} from './ops/shape';\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\nimport {parseSoftmaxAttributes, softmax} from './ops/softmax';\nimport {parseSplitAttributes, split} from './ops/split';\nimport {parseSqueezeAttributes, squeeze} from './ops/squeeze';\nimport {sum} from './ops/sum';\nimport {tile} from './ops/tile';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {parseUnsqueezeAttributes, unsqueeze} from './ops/unsqueeze';\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\n\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\n  ['Abs', '', '6+', unaryOps.abs],\n  ['Acos', '', '7+', unaryOps.acos],\n  ['Add', '', '7+', binaryOps.add],\n  ['And', '', '7+', binaryOps.and],\n  ['Asin', '', '7+', unaryOps.asin],\n  ['Atan', '', '7+', unaryOps.atan],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', '', '7-10', averagePool, parseAveragePoolAttributes],\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\n  ['Ceil', '', '6+', unaryOps.ceil],\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\n  ['Concat', '', '4+', concat, parseConcatAttributes],\n  ['Conv', '', '1+', conv, parseConvAttributes],\n  ['Cos', '', '7+', unaryOps.cos],\n  ['Div', '', '7+', binaryOps.div],\n  ['Dropout', '', '7+', unaryOps.identity],\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\n  ['Equal', '', '7+', binaryOps.equal],\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\n  ['Exp', '', '6+', unaryOps.exp],\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\n  ['Floor', '', '6+', unaryOps.floor],\n  ['Gather', '', '1+', gather, parseGatherAttributes],\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\n  ['Greater', '', '7+', binaryOps.greater],\n  ['Identity', '', '1+', unaryOps.identity],\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\n  ['Less', '', '7+', binaryOps.less],\n  ['Log', '', '6+', unaryOps.log],\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', '', '1-9', maxPool, parseMaxPoolAttributes],\n  ['Mul', '', '7+', binaryOps.mul],\n  ['Neg', '', '6+', unaryOps.neg],\n  ['Not', '', '1+', unaryOps.not],\n  ['Or', '', '7+', binaryOps.or],\n  ['Pad', '', '2-10', pad, parsePadAttributes],\n  ['Pow', '', '7+', binaryOps.pow],\n  ['PRelu', '', '7+', binaryOps.pRelu],\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\n  ['ReduceSum', '', '1+', reduceSum, parseReduceAttributes],\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\n  ['Relu', '', '6+', unaryOps.relu],\n  ['Reshape', '', '5+', reshape],\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\n  ['Shape', '', '1+', shape],\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\n  ['Sin', '', '7+', unaryOps.sin],\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\n  ['Softmax', '', '1+', softmax, parseSoftmaxAttributes],\n  // 'Split' operator has an optional attribute 'split'\n  // this attribute determines how the specified axis of input data is split.\n  // When the attribute is missing, we need the count of number of outputs\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\n  ['Split', '', '2+', split, parseSplitAttributes],\n  ['Sqrt', '', '6+', unaryOps.sqrt],\n  ['Squeeze', '', '1+', squeeze, parseSqueezeAttributes],\n  ['Sub', '', '7+', binaryOps.sub],\n  ['Sum', '', '6+', sum],\n  ['Tan', '', '7+', unaryOps.tan],\n  ['Tanh', '', '6+', unaryOps.tanh],\n  ['Tile', '', '6+', tile],\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\n  ['Unsqueeze', '', '1+', unsqueeze, parseUnsqueezeAttributes],\n  ['Xor', '', '7+', binaryOps.xor],\n];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\n  epsilon: number;\n  momentum: number;\n  spatial: number;\n}\n\nconst batchNormalizationProgramMetadata = {\n  name: 'BatchNormalization',\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\n  inputTypes:\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\n};\n\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...batchNormalizationProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\n    (node: Graph.Node): BatchNormalizationAttributes => {\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\n      const momentum = node.attributes.getFloat('momentum', 0.9);\n      const spatial = node.attributes.getInt('spatial', 1);\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\n    };\n\nconst createBatchNormalizationProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\n        ProgramInfo => {\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const rank = inputs[0].dims.length;\n          const [scaleWidth, scaleHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\n          const shaderSource = `\n  float process(int[${rank}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\n  }`;\n          return {\n            ...batchNormalizationProgramMetadata,\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 5) {\n    throw new Error('BatchNormalization requires 5 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n  const mean = inputs[3];\n  const var_ = inputs[4];\n\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\n      var_.dims.length !== 1) {\n    throw new Error('invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\n      var_.dims[0] !== X.dims[1]) {\n    throw new Error('invalid input shape.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport function glslAdd(): GlslValueFunction {\n  const name = 'add_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslDiv(): GlslValueFunction {\n  const name = 'div_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslMul(): GlslValueFunction {\n  const name = 'mul_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSub(): GlslValueFunction {\n  const name = 'sub_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslEqual(): GlslValueFunction {\n  const name = 'equal_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslGreater(): GlslValueFunction {\n  const name = 'greater_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLess(): GlslValueFunction {\n  const name = 'less_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslAnd(): GlslValueFunction {\n  const name = 'and_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslOr(): GlslValueFunction {\n  const name = 'or_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslXor(): GlslValueFunction {\n  const name = 'xor_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslPow(): GlslValueFunction {\n  return glslBuiltinBinary('pow');\n}\nexport function glslPRelu(): GlslValueFunction {\n  const name = 'prelu_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\n  const name = `${fname}_`;\n  const body = `\n  float ${name}(float a, float b) {\n    return ${fname}(a, b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return ${fname}(v1, v2);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nconst createBinaryProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        cacheHint: cacheKey,\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\n      };\n    };\n\nconst createBinaryProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n      let outputShape = inputs[0].dims;\n\n      const usePackedTexture = handler.session.pack;\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        const outputRank = outputShape.length;\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\n\n        const glsl = getGlsl(handler.session.backend.glContext.version);\n        const shaderSource = usePackedTexture ? `\n      ${glslFunc.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${glslFunc.name}(a, b);\n        ${glsl.output} = result;\n      }` :\n                                                `\n      ${glslFunc.body}\n      float process(int indices[${outputRank}]) {\n        int aindices[${aRank}];\n        int bindices[${bRank}];\n        ${aBcast}\n        ${bBcast}\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\n      }`;\n\n        return {\n          name: glslFunc.name,\n          inputNames: ['A', 'B'],\n          inputTypes: [textureType, textureType],\n          output: {dims: outputShape, type: outputTensorType, textureType},\n          shaderSource,\n          hasMain: usePackedTexture\n        };\n      }\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n      const shaderSource = `\n    ${glslFunc.body}\n    void main() {\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\n      vec4 result = ${glslFunc.name}(v1, v2);\n      ${glsl.output} = result;\n    }\n    `;\n\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\n\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\n\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\n\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\n\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\n\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\n\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\n\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\n\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\n\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\n\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\n\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\nimport {ConcatAttributes} from './concat';\n\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat (packed)',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.packed),\n  cacheHint\n});\n\nconst createPackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n      const coords = getChannels('coords', rank);\n      const dtype = getCoordsDataType(rank);\n      const unpackChannel = unpackFromChannel();\n\n      const shapes = inputs.map(i => i.dims);\n      const channels = getGlChannels(rank);\n      const offsets: number[] = new Array(shapes.length - 1);\n\n      offsets[0] = shapes[0][axis];\n      for (let i = 1; i < offsets.length; i++) {\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\n      }\n\n      const channel = channels[axis];\n      const lastChannels = channels.slice(-2);\n      const allChannels = channels.join();\n\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\n        return getChannel(\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\n        }`;\n      for (let i = 1; i < offsets.length; i++) {\n        const shift = offsets[i - 1];\n        getValueSnippet += `\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\n              return getChannel(\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\n            }`;\n      }\n      const lastIndex = offsets.length;\n      const shift = offsets[offsets.length - 1];\n      getValueSnippet += `\n            return getChannel(\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\n\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n\n      const shaderSource = `\n          ${unpackChannel}\n          float getValue(${channels.map(x => 'int ' + x)}) {\n            ${getValueSnippet}\n          }\n\n          void main() {\n            ${dtype} coords = getOutputCoords();\n            int lastDim = coords.${channels[rank - 1]};\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\n            coords.${channels[rank - 2]} = lastDim;\n\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.g = getValue(${coords});\n            }\n\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\n              result.a = getValue(${coords});\n            }\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.b = getValue(${coords});\n            }\n            ${glsl.output} = result;\n          }\n        `;\n\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createPackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\n  const channelIdx = channels.indexOf(channel);\n  const res = channels.map((c, idx) => {\n    if (idx === channelIdx) {\n      return `${c} - ${shift}`;\n    } else {\n      return c;\n    }\n  });\n  return res.join();\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\n\nexport interface ConcatAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const concat: OperatorImplementation<ConcatAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\n      validateInputs(inputs);\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\n        const output =\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      } else {\n        const output =\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      }\n    };\n\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\n  cacheHint\n});\n\nconst createUnpackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n\n      const sizeInConcatAxis = new Array<number>(inputs.length);\n      let previousSum = 0;\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n        previousSum += inputs[i].dims[axis];\n        sizeInConcatAxis[i] = previousSum;\n      }\n\n      let getTextureIndexWhereDataResidesMethod = '';\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\n      if (inputs.length < 5) {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n      } else {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\n      }\n\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\n      const shaderSource = `\n        ${fetchDataFromCorrectTextureMethod}\n        ${getSizeInConcatAxisValueFromIndexMethod}\n        ${getTextureIndexWhereDataResidesMethod}\n        float process(int indices[${rank}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\n\n          if(textureIndex != 0) {\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n      };\n    };\n\nconst createUnpackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\n`);\n  return `int getTextureWhereDataResides(int index) {\n      ${searchAxis.join('')}\n    }`;\n};\n\n// TODO: Implement BinarySearch in GLSL\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\n  for (let i = 0; i < numberOfTensors; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    } else if (i === numberOfTensors - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return _X${i}(indices); }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    } else if (i === sizeInConcatAxis.length - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return ${sizeInConcatAxis[i]}; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n\n  return codeLines.join('\\n');\n};\n\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n\n  const inputType = inputs[0].type;\n  const inputDimensionality = inputs[0].dims.length;\n\n  // TODO: Support string concat\n  if (inputType === 'string') {\n    throw new Error('string tensor is not supported yet');\n  }\n\n  for (const input of inputs) {\n    // make sure types of all inputs match\n    if (input.type !== inputType) {\n      throw new Error('input tensors should be one type');\n    }\n\n    // make sure the dimensionality of all inputs are the same\n    if (input.dims.length !== inputDimensionality) {\n      throw new Error('input tensors should have the same shape');\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../../instrument';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActicationSnippet} from './fuse-utils';\n\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedGroupedConvProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\n      const xShape = inputs[0].dims.slice();\n      const wShape = inputs[1].dims.slice();\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n      Logger.verbose(\n          'GroupedConv',\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\n      const outputShape =\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${outputChannelsPerGroup};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createUnpackedGroupedConvProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\n        ProgramInfoLoader => {\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const conv2DPackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\n    };\n\nexport const conv2DPacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n\n      // run im2col\n      const im2colOutput = inferenceHandler.run(\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\n          [inputs[0]]);\n\n      // reshape kernel\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\n\n      // run matmul\n      const matmulInputs =\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n\n      // reshape output\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\n      return outputReshaped;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {conv2DPacked} from './conv-pack';\nimport {createDotProductProgramInfoLoader} from './dot-product';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createIm2ColProgramInfoLoader} from './im2col';\nimport {createMatmulProgramInfoLoader} from './matmul';\n\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(2);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputSpatialShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n}\n\nexport const conv: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\n      return conv2d(inferenceHandler, inputs, attributes);\n    };\n\nconst conv2d: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n      const packMode = inferenceHandler.session.pack;\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\n      if (adjustedAttributes.group > 1) {\n        const result = inferenceHandler.run(\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\n        return [result];\n      } else if (isPointwise && packMode) {\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\n      } else {\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n      }\n    };\n\nconst conv2DUnpackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\n    };\n\nconst conv2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const xIm2Col = inferenceHandler.run(\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\n\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\n      const output = inferenceHandler.run(\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\n      return output;\n    };\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\n  const attributes = node.attributes;\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\n  const dilations = attributes.getInts('dilations', [1, 1]);\n  const group = attributes.getInt('group', 1);\n  const kernelShape = attributes.getInts('kernel_shape', []);\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n  const strides = attributes.getInts('strides', [1, 1]);\n\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\n};\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface DepthToSpaceAttributes {\n  mode: 'DCR'|'CRD';\n  blocksize: number;\n}\n\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const blocksize = attributes.blocksize;\n      const blocksizeSqr = blocksize * blocksize;\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\n      const firstReshapeShape = attributes.mode === 'DCR' ?\n          [\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ] :\n          [\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ];\n\n      // const transpose = new WebGLTranspose();\n      // const attributes = new Attribute(undefined);\n      // attributes.set('perm', 'ints', transposePerm);\n      // transpose.initialize(attributes);\n\n      // First reshape\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\n\n      // transpose\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\n\n      // Second reshape\n      const secondReshapeShape = [\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\n        inputs[0].dims[3] * blocksize\n      ];\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\n      return [result];\n    };\n\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\n    (node: Graph.Node): DepthToSpaceAttributes => {\n      // processing node attributes\n      const blocksize = node.attributes.getInt('blocksize');\n      if (blocksize < 1) {\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\n      }\n      const mode = node.attributes.getString('mode', 'DCR');\n      if (mode !== 'DCR' && mode !== 'CRD') {\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\n      }\n      return {mode, blocksize};\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (inputs.length !== 1) {\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\n  }\n\n  // Input has to be a 4-D tensor\n  // TODO: Support string depth-to-space.\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {calculateIm2ColDims} from './im2col';\n\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\n  name: 'ConvDotProduct',\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.packedLastDimension],\n  cacheKey: attributes.activationCacheKey\n});\n\nconst createDotProductProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\n      const [kWidth, kHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\n\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\n      const [im2colWidth, im2colHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\n      const rank = outputShape.length;\n\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n${activationFunction}\nfloat process(int indices[${rank}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\n          im2colStrides[2]};\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\n  float value = ${initValue};\n  for (int i = 0; i < ${sharedDim}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${applyActivation}\n  return value;\n}`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nexport const createDotProductProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\n      return {\n        ...metadata,\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const flatten: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\n      validateInputs(inputs, axis);\n\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\n    };\n\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getInt('axis', 1);  // default axis is 1\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Flatten requires 1 input.');\n  }\n\n  const r = inputs[0].dims.length;\n  if (r === 0) {\n    throw new Error('scalar tensor is not supported.');\n  }\n\n  if (axis < -r || axis > r) {\n    throw new Error('Invalid axis');\n  }\n\n  // TODO: Support string type\n  if (inputs[0].type === 'string') {\n    throw new Error('string tensor is not supported.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Attribute} from '../../../attribute';\nimport {GlslValueFunction} from '../glsl-definitions';\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport function getActicationSnippet(attributes: InternalActivationAttributes) {\n  let func: GlslValueFunction;\n  switch (attributes.activation) {\n    case 'Relu':\n      func = glslRelu();\n      break;\n    case 'Sigmoid':\n      func = glslSigmoid();\n      break;\n    case 'Clip':\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\n      break;\n    // TODO: adding other activations that can be fused.\n    default:\n      return {activationFunction: '', applyActivation: ''};\n  }\n\n  const activationName = func.name;\n  const activationFunction = func.body;\n  const applyActivation = `value = ${activationName}_(value);`;\n  return {activationFunction, applyActivation};\n}\n\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\n  const activation = attributes.getString('__internal_activation', '');\n\n  if (activation === 'Clip') {\n    const clipMax = attributes.getFloat('__clip_max', 3.402823e+38);\n    const clipMin = attributes.getFloat('__clip_min', -3.402823e+38);\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n  }\n  return {activation, activationCacheKey: activation};\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\ninterface GatherAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const gather: OperatorImplementation<GatherAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\n      validateInputs(inputs, attributes.axis);\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\n\nconst gatherProgramMetadata = {\n  name: 'Gather',\n  inputNames: ['A', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createGatherProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const indexDataShape = inputs[1].dims.slice();\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\n\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\n      const indexCopyOps: string[] = [];\n      for (let i = 0; i < outputShape.length; i++) {\n        // outputShape is divided into three parts: A, B, C\n        // |0        axis|  axis + indexDataShape.length |          end|\n        // |     A       |             B                 |      C      |\n        //\n        // inputIdx: [A, inputs[1][B], C]\n        if (i < axis) {  // A\n          outputShape[i] = inputShape[i];\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\n        } else {\n          if (i < axis + indexDataShape.length) {  // B\n            outputShape[i] = indexDataShape[i - axis];\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\n          } else {                                                       // C\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\n          }\n        }\n      }\n\n      const orank = outputShape.length || 1;\n      const irank = inputShape.length;\n      const iDrank = indexDataShape.length || 1;\n      const shaderSource = `\n      float process(int outputIdx[${orank}]) {\n        int inputIdx[${irank}];\n        int indexDataIdx[${iDrank}];\n        indexDataIdx[0] = 0;\n        ${indexCopyOps.join('\\n        ')}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\n        return _A(inputIdx);\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createGatherProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Gather requires 2 inputs.');\n  }\n  const tensorRank = inputs[0].dims.length;\n  if (tensorRank < 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (axis < -tensorRank || axis > tensorRank - 1) {\n    throw new Error('Invalid axis.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invaid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invaid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {GemmUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n  isOptionalC: boolean;  // in opset 11, C becomes optional\n}\n\nexport const gemm: OperatorImplementation<GemmAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\n      return [output];\n    };\n\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\n  const transA = node.attributes.getInt('transA', 0) !== 0;\n  const transB = node.attributes.getInt('transB', 0) !== 0;\n  const alpha = node.attributes.getFloat('alpha', 1.0);\n  const beta = node.attributes.getFloat('beta', 1.0);\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\n};\n\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, false);\n\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, true);\n\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                                      [TextureType.unpacked, TextureType.unpacked],\n    key: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      let sharedDim = aShape[aShape.length - 1];\n      let line = '';\n      if (attributes.transA) {\n        sharedDim = aShape[0];\n      }\n      if (attributes.transA && attributes.transB) {\n        line = 'value += _A_T(a) * _B_T(b);';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += _A_T(a) * _B(b);';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += _A(a) * _B_T(b);';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += _A(a) * _B(b);';\n      }\n      const rank = outputShape.length;\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\n      const shaderSource = `\n      float process(int indices[${rank}]) {\n          int a[${rank}];\n          int b[${rank}];\n          ${declareC}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${broadcastC}\n\n          float value = 0.0;\n          for (int k=0; k<${sharedDim}; ++k) {\n              a[${rank - 1}] = k;\n              b[${rank - 2}] = k;\n              ${line}\n          }\n\n          value = value * alpha;\n          ${calculateC}\n          return value;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        variables: [\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\n        ],\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\n    throw new Error('Invaid input shape.');\n  }\n  if (!attributes.isOptionalC && inputs.length !== 3) {\n    throw new Error('Gemm requires 3 inputs');\n  }\n\n  // 'C' can be of dimensionality 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {ConvAttributes} from './conv';\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col (packed)',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed],\n  cacheHint,\n});\n\nconst createPackedIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n      const rowDim = 2;\n      const colDim = 3;\n      const rank = outputShape.length;\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\n      const kernelSize = wshape[2] * wshape[3];\n      const unpackChannel = unpackFromChannel();\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      let unrolled = '';\n\n      for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n          unrolled += `\n            blockIndex = rc.x + ${col};\n            pos = rc.y + ${row};\n\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} - ${\n              attributes.pads[0]};\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\n\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} - ${\n              attributes.pads[1]};\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\n\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${kernelSize}.);\n                    innerDims = vec2(d0, d1);\n                    result[${row * 2 + col}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;\n        }\n      }\n\n      const shaderSource = `\n      ${unpackChannel}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${unrolled}\n          ${glsl.output} = result;\n      }\n            `;\n      return {\n        ...metadata,\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {ConvAttributes} from './conv';\n\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n  cacheHint,\n});\n\nconst createIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n\n      const rank = outputShape.length;\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\n\n      const shaderSource = `\n        const int XC = ${xshape[1]};\n        const int XH = ${xshape[2]};\n        const int XW = ${xshape[3]};\n        const int KH = ${attributes.kernelShape[0]};\n        const int KW = ${attributes.kernelShape[1]};\n        const int dilationH = ${attributes.dilations[0]};\n        const int dilationW = ${attributes.dilations[1]};\n        const int strideH = ${attributes.strides[0]};\n        const int strideW = ${attributes.strides[1]};\n        const int padH = ${attributes.pads[0]};\n        const int padW = ${attributes.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${rank}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${xshape.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;\n      return {\n        ...metadata,\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\n        shaderSource\n      };\n    };\n\nexport const createIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n\n\nexport const calculateIm2ColDims =\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\n        number[] =>\n            [outputShape[0], outputShape[2], outputShape[3],\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\n  scale: number;\n  bias: number[];\n}\n\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output =\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\n    (node: Graph.Node): ImageScalerAttributes => {\n      const scale = node.attributes.getFloat('scale');\n      const bias = node.attributes.getFloats('bias');\n      return createAttributeWithCacheKey({scale, bias});\n    };\n\nconst imageScalerProgramMetadata = {\n  name: 'ImageScaler',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createImageScalerProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\n        ProgramInfo => {\n          const outputShape = inputs[0].dims.slice();\n          const rank = outputShape.length;\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\n          const shaderSource = `\n      ${getBiasMethod}\n      float process(int indices[${rank}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            variables: [\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\n              {name: 'scale', type: 'float', data: attributes.scale}\n            ],\n            shaderSource\n          };\n        };\n\nconst createImageScalerProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\n    };\n\nconst createGetBiasMethod = (numChannels: number): string => {\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\n  for (let i = 0; i < numChannels; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (channel == ${i}) { return bias[${i}]; }`);\n    } else if (i === numChannels - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return bias[${i}]; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (channel == ${i}) { return bias[${i}]; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('ImageScaler requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Invalid input shape.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport const instanceNormalization: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\n      validateInputs(inputs);\n\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\n      const output = inferenceHandler.run(\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\n      return [output];\n    };\n\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getFloat('epsilon', 1e-5);\n\nconst meanAndVarianceProgramMetadata = {\n  name: 'InstanceNormalization_MeanAndVariance',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\n  const xDims = input.dims.slice();\n  const channel = xDims[1];\n  const channelSize = xDims[2] * xDims[3];\n  const outputShape = [xDims[0], channel];\n\n  const shaderSource = `\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${channelSize});\n        temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${channelSize});\n\n        return v;\n      }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\n    shaderSource\n  };\n};\n\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\n  ...meanAndVarianceProgramMetadata,\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\n});\n\nconst computeOutputProgramMetadata = {\n  name: 'InstanceNormalization_ComputeOutput',\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createComputeOutputProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\n      const shaderSource = `\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\n        return ${glsl.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\n        shaderSource\n      };\n    };\n\nconst createComputeOutputProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\n        ProgramInfoLoader => {\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\n          return {\n            ...metadata,\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 3) {\n    throw new Error('InstanceNormalization requires 3 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n\n  // input should at least have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\n    throw new Error('Input shapes are mismatched.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Only support 4-D input shape.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil} from '../../../util';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {getBiasForMatmul} from './matmul';\n\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul (packed)',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\n                        [TextureType.packed, TextureType.packed],\n  cacheHint\n});\n\nconst createPackedMatmulProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n      const aShape = inputs[0].dims;\n      const bShape = inputs[1].dims;\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n\n      if (!outputShape) {\n        throw new Error('Can\\'t use matmul on the given tensors');\n      }\n      const sharedDim = aShape[aShape.length - 1];\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\n      const aRank = aShape.length;\n      const bRank = bShape.length;\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const coordsDataType = getCoordsDataType(outputShape.length);\n      const outRank = outputShape.length;\n      const allGlChannels = getGlChannels();\n      const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n      const getBiasForMatmulSnippet =\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\n\n      const getBcastedSamplerForMatmulSnippet =\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\n\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\n      `;\n      const shaderSource = `\n            ${getBcastedSamplerForMatmulSnippet}\n            ${getBiasForMatmulSnippet}\n            ${activationFunction}\n            void main() {\n              ${getOutputCoordsSnippet}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\n                vec4 a = ${getSamplerAInLoopSnippet};\n                vec4 b = ${getSamplerBInLoopSnippet};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${processBias}\n              ${applyActivation}\n              ${glsl.output} = value;\n            }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedMatmulProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\n      };\n    };\n\nfunction getBcastSamplerForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\n  let unpackedACoordsSnippet = [];\n  let unpackedBCoordsSnippet = [];\n\n  const inAShape = inputs[0].dims;\n  const inBShape = inputs[1].dims;\n\n  const inARank = inAShape.length;\n  const inBRank = inBShape.length;\n\n  const outRank = outShape.length;\n  const rankADiff = outRank - inARank;\n  const rankBDiff = outRank - inBRank;\n\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\n  unpackedACoordsSnippet.join(', ');\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\n  unpackedBCoordsSnippet.join(', ');\n\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\n\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\n\n  const getBcastSamplerMatmulSource = `\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsASnippet}\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsBSnippet}\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\n  return outputValue;\n}`;\n\n  return getBcastSamplerMatmulSource;\n}\n\nfunction getA(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += `rc.${allGlChannels[rank - 2]}, ` +\n      'i*2';\n  return res;\n}\n\nfunction getB(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += 'i*2, ' +\n      `rc.${allGlChannels[rank - 1]}`;\n  return res;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\nimport {getActicationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      if (inferenceHandler.session.pack) {\n        return [inferenceHandler.run(\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\n      } else {\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\n      }\n    };\n\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nfunction createMatmulProgramInfo(\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\n  const aShape = inputs[0].dims;\n  const bShape = inputs[1].dims;\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n  if (!outputShape) {\n    throw new Error('Can\\'t use matmul on the given tensors');\n  }\n  const coordsDataType = getCoordsDataType(outputShape.length);\n  const allGlChannels = getGlChannels();\n  const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n  const hasBias = inputs.length > 2;\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n  const getBiasForMatmulSnippet =\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\n\n  const rank = outputShape.length;\n  const arank = aShape.length;\n  const brank = bShape.length;\n  const sharedDim = aShape[aShape.length - 1];\n  const shaderSource = `\n    ${activationFunction}\n    ${getBiasForMatmulSnippet}\n    float process(int indices[${rank}]) {\n        int a[${arank}];\n        int b[${brank}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${sharedDim}; ++k) {\n            a[${arank - 1}] = k;\n            b[${brank - 2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${processBias}\n        ${applyActivation}\n        return value;\n    }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createMatmulProgramInfoLoader(\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\n    throw new Error('inputs should be float type');\n  }\n\n  if (inputs[0].type !== inputs[1].type) {\n    throw new Error('inputs types should match');\n  }\n};\n\nexport function getBiasForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\n    isPacked: boolean): string {\n  let unpackedCoordsSnippet = '';\n  const inRank = inShape.length;\n  const outRank = outShape.length;\n  const rankDiff = outRank - inRank;\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\n  }\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\n  const inSize = ShapeUtil.size(inShape);\n  const isInputScalar = inSize === 1;\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\n  if (isInputScalar) {\n    output = 'vec4(outputValue.x)';\n  }\n  const getBiasForMatmulSource = isPacked ? `\nvec4 getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\n  return ${output};\n}` :\n                                            `\nfloat getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  return getBias(coords.x);\n}`;\n\n  return getBiasForMatmulSource;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels} from './packing-utils';\n\nconst packProgramMetadata = {\n  name: 'pack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpackedReversed]\n};\n\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const inputShape = input.dims;\n\n  const inputRank = inputShape.length;\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\n  const outputRank = input.dims.length;\n\n  const coordsDataType = getCoordsDataType(outputRank);\n  const channels = getChannels('rc', outputRank);\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\n\n  let reversedInputWH;\n  if (inputRank === 0) {\n    reversedInputWH = [1, 1];\n  } else if (inputRank === 1) {\n    reversedInputWH = [inputShape[0], 1];\n  } else {\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\n  }\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\n  const output = getOutput(inputShape, channels);\n\n  const shaderSource = `\n        void main() {\n          ${coordsDataType} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            ${glsl.output} = vec4(0);\n          } else {\n            ${setup}\n\n            ${glsl.output} = vec4(${output});\n          }\n        }\n      `;\n  return {\n    ...packProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\n    shaderSource\n  };\n};\n\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\n\n/**\n * check output coordinate location and return false if it is outside input's width/height boundary\n */\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\n  if (rank === 0) {\n    return 'false';\n  }\n  if (rank === 1) {\n    return `rc > ${shape[0]}`;\n  }\n\n  let cond = '';\n  for (let i = rank - 2; i < rank; i++) {\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\n/**\n * code snippet to sample input texture with output coordiantes\n */\nfunction getOutput(shape: readonly number[], dims: string[]): string {\n  const rank = shape.length;\n\n  if (rank === 0) {\n    return 'getA(), 0, 0, 0';\n  }\n\n  if (rank === 1) {\n    return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n  }\n\n  const coord00 = 'r, c';\n  const coord01 = 'r, cp1';\n  const coord10 = 'rp1, c';\n  const coord11 = 'rp1, cp1';\n  let D = '';\n  if (rank > 2) {\n    for (let i = 0; i < rank - 2; ++i) {\n      D = D + `${dims[i]},`;\n    }\n  }\n  return `getA(${D}${coord00}),\n          rEdge ? 0. : getA(${D}${coord10}),\n          cEdge ? 0. : getA(${D}${coord01}),\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\n}\n\n/**\n * code snippet to setup 4 coordinates and edge conditions\n */\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\n  if (rank === 0 || rank === 1) {\n    return '';\n  }\n  // rank >= 2 for width+height pack.\n  else {\n    const setup = `\n    int r = ${dims[rank - 2]};\n    int c = ${dims[rank - 1]};\n    int rp1 = ${dims[rank - 2]} + 1;\n    int cp1 = ${dims[rank - 1]} + 1;\n    bool rEdge = rp1 >= ${cols};\n    bool cEdge = cp1 >= ${rows};\n    `;\n    return setup;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlChannels} from '../utils';\n\nexport function getVecChannels(name: string, rank: number): string[] {\n  return getGlChannels(rank).map(d => `${name}.${d}`);\n}\n\nexport function getChannels(name: string, rank: number): string[] {\n  if (rank === 1) {\n    return [name];\n  }\n  return getVecChannels(name, rank);\n}\n\nexport function unpackFromChannel(): string {\n  return `\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl, Glsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface PadAttributes extends AttributeWithCacheKey {\n  readonly mode: string;\n  readonly pads: number[];\n  readonly value: number;\n}\n\nconst padProgramMetadata = {\n  name: 'Pad',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const pad: OperatorImplementation<PadAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...padProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPadProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parsePadAttributes: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\n  const mode = node.attributes.getString('mode', 'constant');\n  const value = node.attributes.getFloat('value', 0.0);\n  const pads = node.attributes.getInts('pads');\n  return createAttributeWithCacheKey({mode, value, pads});\n};\n\nconst createPadProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): ProgramInfo => {\n      const outputShape = ShapeUtil.padShape(inputs[0].dims.slice(), attributes.pads);\n      const rank = outputShape.length;\n      const padFunction = getPadFunction(inferenceHandler, inputs[0], attributes);\n      const shaderSource = `\n      ${padFunction}\n      float process(int[${rank}] indices) {\n          return padA(indices);\n      }`;\n      return {\n        name: 'Pad',\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pad requires 1 input');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n  const strides = ShapeUtil.computeStrides(input.dims);\n\n  switch (attributes.mode) {\n    case 'constant':\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\n    case 'reflect':\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\n    case 'edge':\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\n    default:\n      throw new Error('Invalid mode');\n  }\n};\n\nconst getPadConstant =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\n     value: number): string => {\n      const rank = shape.length;\n      let block = '';\n      for (let i = rank - 1; i >= 0; --i) {\n        block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  return constant;\n        if (k >= ${shape[i]}) return constant;\n        offset += k * ${strides[i]};\n        `;\n      }\n      return `\n      float padA(int m[${rank}]) {\n        const float constant = float(${value});\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n    };\n\nconst getPadReflect =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2 * (shape[i] - 1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${strides[i]};\n        `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n\nconst getPadEdge =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  k = 0;\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\n        offset += k * ${strides[i]};\n      `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly countIncludePad: boolean;\n  readonly kernelShape: number[];\n  readonly strides: number[];\n  readonly pads: number[];\n}\n\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n\n      // TODO: support attribute 'ceil_mode'\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n      }\n\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\n    };\n\nconst createAveragePoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\n        ProgramInfo => {\n          const inputShape = inputs[0].dims.slice();\n          PoolConvUtil.adjustPoolAttributes(\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\n              attributes.autoPad);\n          const kernelSize = ShapeUtil.size(attributes.kernelShape);\n          const op1 = 'value += _X(x);';\n          let op2 = '';\n          if (attributes.countIncludePad) {\n            op2 += `value /= float(${kernelSize});`;\n          } else {\n            op2 += `value /= float(${kernelSize} - pad);`;\n          }\n          const poolingCode = generatePoolingCode(inputs[0].dims, attributes, op1, op2, '0.0');\n          const shaderSource = `\n        ${poolingCode}\n      `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata = {\n        name: 'GlobalAveragePool',\n        inputNames: ['X'],\n        inputTypes: [TextureType.unpacked],\n        cacheHint: `${attributes.countIncludePad}`\n      };\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      return createAttributeWithCacheKey(\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\n    };\n\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\n  readonly storageOrder: number;\n}\n\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\n    (node: Graph.Node): MaxPoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n      const storageOrder = node.attributes.getInt('storage_order', 0);\n\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\n      if (storageOrder !== 0) {\n        throw new Error('column major storage order is not yet supported for MaxPool');\n      }\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n      }\n\n      return createAttributeWithCacheKey(\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder});\n    };\n\nconst createMaxPoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\n        ProgramInfo => {\n          const inputShape = inputs[0].dims.slice();\n          PoolConvUtil.adjustPoolAttributes(\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\n              attributes.autoPad);\n          const op1 = `\n      value = max(_X(x), value);\n    `;\n          const op2 = '';\n          const poolingCode = generatePoolingCode(inputShape, attributes, op1, op2, '-1e5');\n          const shaderSource = `\n      ${poolingCode}\n    `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst globalMaxPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  cacheKey: ''\n};\n\nconst globalMaxPoolMetadata = {\n  name: 'GlobalMaxPool',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  const output = inferenceHandler.run(\n      {\n        ...globalMaxPoolMetadata,\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\n      },\n      inputs);\n  return [output];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst generatePoolingCode =\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\n        string => {\n          const rank = inputDims.length;\n          if (attributes.kernelShape.length <= 2) {\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n            const sw = attributes.strides[attributes.strides.length - 1];\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\n            const dimW = inputDims[rank - 1];\n            let codeW = '';\n            let codeH = '';\n            let codeHEnd = '';\n            if (pwStart + pwEnd !== 0) {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\n              pad++;\n              continue;\n            }\n            ${op1}\n          }`;\n            } else {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            ${op1}\n          }`;\n            }\n\n            if (attributes.kernelShape.length === 2) {\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n              const sh = attributes.strides[attributes.strides.length - 2];\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n              const phEnd = attributes.pads[attributes.pads.length - 2];\n              const dimH = inputDims[rank - 2];\n              if (phStart + phEnd !== 0) {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\n                pad+= ${kw};\n                continue;\n              }\n          `;\n              } else {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n            `;\n              }\n              codeHEnd = `\n          }\n        `;\n            }\n\n            const poolingCode = `\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n\n          float value = ${start};\n          int pad = 0;\n          ${codeH}\n          ${codeW}\n          ${codeHEnd}\n          ${op2}\n          return value;\n        }\n      `;\n            return poolingCode;\n          } else {\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n            const stridesRank = kernelStrides.length;\n            const padsRank = attributes.pads.length;\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\n            const copyInputDims = copyArray(inputDims, 'inputDims');\n            const copyPads = copyArray(attributes.pads, 'pads');\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\n            const copyStrides = copyArray(attributes.strides, 'strides');\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n            let padCode = '';\n            if (hasPads) {\n              padCode = `\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${op1}\n          }`;\n            } else {\n              padCode = `\n          }\n          ${op1}\n        `;\n            }\n            const poolingCode = `\n        ${offsetToIndicesFunction}\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n          int offset[${stridesRank}];\n          int pads[${padsRank}];\n          int inputDims[${rank}];\n          int kernelStrides[${stridesRank}];\n          int strides[${stridesRank}];\n          ${copyPads}\n          ${copyInputDims}\n          ${copyStrides}\n          ${copyKernelStrides}\n\n          float value = ${start};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${kernelSize}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\n              ${padCode}\n          }\n          ${op2}\n\n          return value;\n        }\n      `;\n            return poolingCode;\n          }\n        };\n\nconst copyArray = (array: readonly number[], arrayName: string): string => {\n  let block = '';\n  for (let i = 0; i < array.length; i++) {\n    block += `\n      ${arrayName}[${i}] = ${array[i]};\n    `;\n  }\n  return block;\n};\n\nconst offsetToIndices = (rank: number): string => `\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\n    if (${rank} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${rank} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${rank} - 1] = offset;\n  }`;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface ReduceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly keepDims: boolean;\n}\n\n// return [init ops, reduce ops, final ops]\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\n\nconst reduce =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\n     reduceOp: ReduceOp): Tensor[] => {\n      validateInputs(inputs);\n\n      const reduceProgramMetadata = {\n        name,\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n      };\n\n      const output = inferenceHandler.run(\n          {\n            ...reduceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () =>\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\n  const axes = node.attributes.getInts('axes', []);\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\n  return createAttributeWithCacheKey({axes, keepDims});\n};\n\nconst createReduceProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const outputShape: number[] = [];\n      const iRank = inputs[0].dims.length || 1;\n\n      const idxCopy = [];  // copy output indexes to input indexes\n\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\n      const ops = reduceOp(inputs, axes);\n      let reduceOps = ops[1];\n\n      for (let k = 0; k < inputs[0].dims.length; k++) {\n        // if this axis is reduced\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\n          if (attributes.keepDims) {\n            outputShape.push(1);\n          }  // else { remove the axis from outputShape; }\n\n          // loop over the d-th axis\n          reduceOps = `\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\n            inputIdx[${k}] = j${k};\n            ${reduceOps}\n          }`;\n        } else {\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\n\n          outputShape.push(inputs[0].dims[k]);\n        }\n      }\n\n      const oRank = outputShape.length || 1;\n\n      const shaderSource = `\n      float process(int outputIdx[${oRank}]) {\n        float value;                 // final result\n        int inputIdx[${iRank}];      // addressing input data\n        ${idxCopy.join('\\n')}\n        ${ops[0]}       // init ops for reduce max/min\n        ${reduceOps}\n        ${ops[2]}       // final computation for reduce mean\n        return value;\n      }`;\n\n      return {\n        ...reduceProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Reduce op requires 1 input.');\n  }\n\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\n    };\n\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        let size = 1.0;\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            size *= inputs[0].dims[k];\n          }\n        }\n\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\n    };\n\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\n    };\n\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\n    };\n\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\n    };\n\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\n    };\n\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\n    };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\n\nconst createPackedReshape3DProgramInfo =\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\n        ProgramInfo => {\n          const inputShape3D = input3D.dims as [number, number, number];\n          const squeezedOutputShape = outputShape3D as [number, number, number];\n\n          let mainLoop = '';\n          for (let i = 0; i < 4; i++) {\n            let outputCoords = '';\n            switch (i) {\n              case 0:\n                outputCoords = 'outputCoords = rc;';\n                break;\n              case 1:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\n                break;\n              case 2:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\n                break;\n              case 3:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\n                break;\n              default:\n                throw new Error();\n            }\n\n            mainLoop += `\n        ${outputCoords}\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${i > 0 ? '}' : ''}\n      `;\n          }\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n\n          const shaderSource = `\n      ${getReshapedInputCoords(inputShape3D)}\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\n      ${unpackFromChannel()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${squeezedOutputShape[2]};\n        int cols = ${squeezedOutputShape[1]};\n\n        ${mainLoop}\n        ${glsl.output} = result;\n      }\n    `;\n\n          return {\n            ...metadata,\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\n            shaderSource,\n            hasMain: true\n          };\n        };\n\nexport const createPackedReshape3DProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\n    };\n\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\n  if (shape.length === 0) {\n    return [1, 1, 1];\n  }\n  // TODO: squeeze other shapes to 2D case\n  let batch = 1;\n  for (let i = 0; i < shape.length - 2; ++i) {\n    batch *= shape[i];\n  }\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\n\n// For packed reshape, we need to re-arrange texel data for output shape.\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\n// for the reshaped new tensor, we just need to re-arrange the last h and\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\n// first convert it to 3D by collapsing other dimension to batch dim, then\n// process with the last two dimensions.\n// Note: we only need the shape tensor to calculate output shape, so the\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\n// the same between input shape and output shape, the packed reshape can be\n// treated as no-op.\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\n  let isCheapReshape = false;\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\n    isCheapReshape = true;\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\n  } else {  // 2D +\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\n  }\n\n  return isCheapReshape;\n}\n\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n  const coords = ['b', 'r', 'c'];\n  const index = 'index';\n  const coordsFromIndexSnippet = strides\n                                     .map((stride, i) => {\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n                                       const line2 = i === strides.length - 1 ?\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n                                           `index -= ${coords[i]} * ${stride}`;\n                                       return `${line1}; ${line2};`;\n                                     })\n                                     .join('');\n\n  return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(b, r, c);\n    }\n  `;\n}\n\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n\n  return `\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\n  }\n`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\n  if (handler.session.pack) {\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\n  } else {\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {unpackFromChannel} from './packing-utils';\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\n\nconst resizeProgramMetadata = {\n  name: 'Resize',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const resize: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...resizeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\n\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\n\nconst createPackedResizeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\n\n      const isSame =\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\n      if (isSame) {\n        return {\n          ...resizeProgramMetadata,\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n          hasMain: true,\n          shaderSource: `void main() {\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\n                    ${glsl.output} = v;\n                }`\n        };\n      }\n\n      const dim = outputShape.length;\n      if (dim < 2) {\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\n      }\n\n      const outputHeight = outputShape[dim - 2];\n      const outputWidth = outputShape[dim - 1];\n\n      const inputShape = inputs[0].dims;\n      if (dim !== inputShape.length) {\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\n      }\n      const inputHeight = inputShape[dim - 2];\n      const inputWidth = inputShape[dim - 1];\n\n      const scalesHeight = scales[dim - 2];\n      const scalesWidth = scales[dim - 1];\n\n      let getSourceFracIndex = '';\n\n      if (attributes.mode !== 'linear') {\n        // TODO: support other modes\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\n      }\n      switch (attributes.coordinateTransformMode) {\n        case 'asymmetric':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                `;\n          break;\n        case 'half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                `;\n          break;\n        case 'align_corners':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\n                            ${outputHeight}.0 - 1.0);\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\n                            ${inputHeight}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;\n          break;\n        default:\n          // TODO:supporting other coordinateTransformModes\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\n                                '${attributes.coordinateTransformMode}'`);\n      }\n\n      const coordsDataType = getCoordsDataType(dim);\n      const unpackChannel = unpackFromChannel();\n      const shaderSource = `\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\n            const vec4 scaleWHWH = vec4(${scalesHeight}.0, ${scalesWidth}.0, ${scalesHeight}.0, ${scalesWidth}.0);\n            ${unpackChannel}\n            ${getSourceFracIndex}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${coordsDataType} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${outputHeight - 1};\n                bool hasNextCol = rc.z < ${outputWidth - 1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${glsl.output} = vec4(newValue);\n            }\n        `;\n      return {\n        ...resizeProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\n\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\n  const x = inputs[0];\n  const xDims = x.dims;\n\n  let scales = attributes.scales;\n  let outputSizes: number[]|undefined;\n  if (scales.length === 0) {\n    const scalesTensor = inputs[attributes.scalesInputIdx];\n    if (scalesTensor && scalesTensor.size !== 0) {\n      if (inputs[attributes.sizesInputIdx]) {\n        throw new Error('Only one of scales or sizes must be provided as input.');\n      }\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\n    } else {\n      const sizesTensor = inputs[attributes.sizesInputIdx];\n      if (!sizesTensor || sizesTensor.size === 0) {\n        throw new Error('Either scales or sizes MUST be provided as input.');\n      }\n\n      outputSizes = Array.from(sizesTensor.integerData);\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\n    }\n  } else {\n    if (inputs[attributes.sizesInputIdx]) {\n      throw new Error('Only one of scales or sizes must be provided as input.');\n    }\n  }\n\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\n\n  return [scales, yDims];\n};\n\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\n  const scales = Array.from(scale.floatData);\n  scalesValidation(scales, mode, isResize);\n  return scales;\n};\n\nconst parseScalesDataFromOutputSize =\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\n      const length = xDims.length;\n      const scales = new Array<number>(length);\n\n      for (let i = 0, end = length; i < end; i++) {\n        if (xDims[i] === 0) {\n          if (yDims[i] !== 0) {\n            throw new Error('Input dim is zero but required output dim is non-zero.');\n          }\n          scales[i] = 1;\n        } else {\n          scales[i] = yDims[i] / xDims[i];\n        }\n      }\n      scalesValidation(scales, mode, isResize);\n      return scales;\n    };\n\n// roi data is not used yet. but leave here for future usage.\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\n//     let roi: number[] = [];\n//     if (attributes.needRoiInput) {\n//         if (attributes.roiInputIdx <= 0) {\n//             throw new Error('Invalid roi input index.');\n//         }\n//         const roiTensor = inputs[attributes.roiInputIdx];\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\n//     } else {\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\n//     }\n//     return roi;\n// };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Shape requires 1 input.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SliceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly ends: number[];\n  readonly starts: number[];\n}\n\nconst sliceProgramMetadata = {\n  name: 'Slice',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const slice: OperatorImplementation<SliceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...sliceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\n  const starts = node.attributes.getInts('starts');\n  const ends = node.attributes.getInts('ends');\n  const axes = node.attributes.getInts('axes', []);\n  return createAttributeWithCacheKey({starts, ends, axes});\n};\n\nconst createSliceProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\n      const starts = attributes.starts.map((start, i) => {\n        if (start > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\n      });\n      const ends = attributes.ends.map((end, i) => {\n        if (end > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\n      });\n\n      const outputShape = input.dims.slice();\n\n      const sliceOps: string[] = [];\n      for (let i = 0; i < normalizedAxes.length; i++) {\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\n        if (starts[i] > 0) {\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        ${sliceOps.join('\\n      ')}\n        return _A(outputIdx);\n      }`;\n      return {\n        ...sliceProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Slice requires 1 input.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV10(inputs);\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\n  const output = inferenceHandler.run(\n      {\n        ...sliceProgramMetadata,\n        cacheHint: attributes.cacheKey,\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n      },\n      [inputs[0]]);\n  return [output];\n};\n\nconst generateSliceAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\n        throw new Error('dynamic slice attributes are not allowed');\n      }\n\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\n        throw new Error('currently non-1 steps is not supported for Slice');\n      }\n\n      const starts = Array.from(inputs[1].integerData);\n      const ends = Array.from(inputs[2].integerData);\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\n      const cacheKey = `${axes};${starts};${ends}`;\n      return {starts, ends, axes, cacheKey};\n    };\n\nconst validateInputsV10 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\n    throw new Error('Invalid input number.');\n  }\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nconst softmaxComputeMaxProgramMetadata = {\n  name: 'SoftmaxComputeMax',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst softmaxComputeScaleProgramMetadata = {\n  name: 'SoftmaxComputeScale',\n  inputNames: ['A', 'Max'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst softmaxProgramMetadata = {\n  name: 'SoftMax',\n  inputNames: ['A', 'Max', 'Norm'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\n};\n\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const N = ShapeUtil.sizeToDimension(inputShape, axis);\n      const D = ShapeUtil.sizeFromDimension(inputShape, axis);\n\n      const computeMaxProgramInfo = createComputeMaxProgramInfo(inferenceHandler, inputs[0], N, D, [N]);\n      const max = inferenceHandler.run(\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\n          inputs);\n\n      const computeScaleProgramInfo =\n          createComputScaleProgramInfo(inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, [N]);\n      const scale = inferenceHandler.run(\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\n          [inputs[0], max]);\n\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\n          inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, computeScaleProgramInfo.output.dims);\n      const output = inferenceHandler.run(\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\n          [inputs[0], max, scale]);\n      return [output];\n    };\n\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\n\n/**\n * Create a texture that contains the maximum value of each of the 'N' rows\n */\nconst createComputeMaxProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number, outputShape: number[]):\n        ProgramInfo => {\n          const [textureWidth, textureHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n          const rank = outputShape.length;\n\n          if (N < 1 || D < 1) {\n            throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n          }\n\n          if (outputShape.length !== 1) {\n            throw new Error('Dimensionality of the output should be 1');\n          }\n\n          if (outputShape[0] !== N) {\n            throw new Error('Shape of the output should be equal to logical row count');\n          }\n\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${D};\n\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\n        ${textureHeight} )));\n        for(int i=1; i<${D}; ++i)\n        {\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;\n          return {\n            ...softmaxComputeMaxProgramMetadata,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\n/**\n * Create a texture that contains the normalization factor for each of the 'N' rows\n */\nconst createComputScaleProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (N < 1 || D < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== N) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== N) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${D};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${D}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight}))) - max);\n        }\n\n        return norm_factor;\n      }`;\n      return {\n        ...softmaxComputeScaleProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createSoftMaxProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = input.dims.length;\n\n      if (N < 1 || D < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== N || normalizationPerLogicalRow[0] !== N) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${D};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;\n      return {\n        ...softmaxProgramMetadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Softmax requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil, SplitUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SplitAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n  readonly split: number[];\n  readonly numOutputs: number;\n}\n\nconst splitProgramMetadata = {\n  name: 'Split',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const split: OperatorImplementation<SplitAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\n      const output: Tensor[] = [];\n      for (let i = 0; i < count; ++i) {\n        output.push(inferenceHandler.run(\n            {\n              ...splitProgramMetadata,\n              cacheHint: `${attributes.cacheKey};${i}`,\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\n            },\n            inputs));\n      }\n\n      return output;\n    };\n\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\n  const axis = node.attributes.getInt('axis', 0);\n  const split = node.attributes.getInts('split', []);\n  const numOutputs = node.outputs.length;\n  return createAttributeWithCacheKey({axis, split, numOutputs});\n};\n\nconst getProgramCount =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\n      return offsets.length;\n    };\n\nconst createSplitProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\n        ProgramInfo => {\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\n          const offset = offsets[index];\n          const outputShape = shapes[index];\n          const rank = outputShape.length;\n          const shaderSource = `\n      float process(int indices[${rank}]) {\n        indices[${axis}] += ${offset};\n        return _A(indices);\n      }\n    `;\n          return {\n            ...splitProgramMetadata,\n            cacheHint: `${attributes.cacheKey}:${index}`,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Split requires one input.');\n  }\n\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const squeeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Squeeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const sumProgramMetadata = {\n    name: 'Sum',\n    inputNames: inputs.map((v, i) => `X${i}`),\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\n  };\n\n  const output = inferenceHandler.run(\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\n  return [output];\n};\n\nconst createSumProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const outputShape = inputs[0].dims.slice();\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\n      const shaderSource = `\n      void main() {\n        vec4 result = ${sumLine};\n        ${glsl.output} = result;\n      }\n    `;\n      return {\n        ...sumProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length === 0) {\n    throw new Error('Sum requires inputs.');\n  }\n\n  const length = inputs[0].dims.length;\n  for (let i = 1; i < inputs.length; i++) {\n    if (length !== inputs[i].dims.length) {\n      throw new Error('Input shapes are mismatched.');\n    }\n\n    for (let j = 0; j < length; j++) {\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\n        throw new Error('Input shapes are not matched.');\n      }\n    }\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n  for (let i = 1; i < inputs.length; i++) {\n    if (inputs[0].type !== inputs[i].type) {\n      throw new Error('Input types are not matched.');\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {NUMBER_TYPES} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const tileProgramMetadata = {\n    name: 'Tile',\n    inputNames: ['A'],\n    inputTypes: [TextureType.unpacked],\n  };\n\n  const output = inferenceHandler.run(\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\n      inputs);\n  return [output];\n};\n\nconst createTileProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const outputShape = new Array(inputShape.length);\n\n      const tileOps: string[] = [];\n      for (let i = 0; i < inputShape.length; i++) {\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        int inputIdx[${rank}];\n        ${tileOps.join('\\n')}\n        return _A(inputIdx);\n      }\n    `;\n      return {\n        ...tileProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Tile requires 2 input.');\n  }\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('The second input shape must 1 dimension.');\n  }\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\n    throw new Error('Invalid input shape.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invalid repeat type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nconst transposeProgramMetadata = {\n  name: 'Transpose',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const transpose: OperatorImplementation<TransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\n\nconst createTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\n      const inputShape = input.dims;\n      perm = getAdjustedPerm(inputShape, perm);\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\n      const rank = inputShape.length;\n      // A dims=[${inputs[0].dims.toString()}]\n      // out Dims=[${unpackedOutputShape.toString()}]\n      // based on perm=[${perm.toString()}]\n      const shaderSource = `\n      ${getPermFunctionBody('perm', perm, rank)}\n      float process(int indices[${rank}]) {\n        int a[${rank}];\n        perm(a, indices);\n        return _A(a);\n      }`;\n      return {\n        ...transposeProgramMetadata,\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\n  if (perm && perm.length !== inputShape.length) {\n    perm = [...(inputShape.keys())].reverse();\n  }\n  return perm;\n};\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\n  perm = getAdjustedPerm(inputShape, perm);\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\n};\n\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('input should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {TextureData, TextureType} from '../types';\n\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\n  const outputShape = input.shape;\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  /**\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\n   */\n  const shaderSource = `\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${glsl.texture2D}(X,TexCoords).r;\n      ${glsl.output} = encodeAsUint8(value);\n    }`;\n  const programInfo = {\n    name: 'Uint8Encode',\n    inputTypes: [TextureType.unpacked],\n    inputNames: ['X'],\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\n    shaderSource,\n    hasMain: true\n  };\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {Tensor} from '../../../tensor';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport function glslAbs(): GlslValueFunction {\n  return glslBuiltinUnary('abs');\n}\nexport function glslAcos(): GlslValueFunction {\n  return glslBuiltinUnary('acos');\n}\nexport function glslAsin(): GlslValueFunction {\n  return glslBuiltinUnary('asin');\n}\nexport function glslAtan(): GlslValueFunction {\n  return glslBuiltinUnary('atan');\n}\nexport function glslCeil(): GlslValueFunction {\n  return glslBuiltinUnary('ceil');\n}\nexport function glslCos(): GlslValueFunction {\n  return glslBuiltinUnary('cos');\n}\nexport function glslElu(alpha: number): GlslValueFunction {\n  const name = 'elu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslExp(): GlslValueFunction {\n  return glslBuiltinUnary('exp');\n}\nexport function glslFloor(): GlslValueFunction {\n  return glslBuiltinUnary('floor');\n}\nexport function glslClip(min: number, max: number): GlslValueFunction {\n  const name = 'clip';\n  const body = `\n  const float min = float(${min});\n  const float max = float(${max});\n\n  float ${name}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${name}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslIdentity(): GlslValueFunction {\n  const name = 'indentity';\n  const body = `\n  float ${name}_(float a) {\n    return a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\n  const name = 'leakyRelu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLog(): GlslValueFunction {\n  return glslBuiltinUnary('log');\n}\nexport function glslNeg(): GlslValueFunction {\n  const name = 'neg';\n  const body = `\n  float ${name}_(float a) {\n    return -a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return -v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslNot(): GlslValueFunction {\n  const name = 'not';\n  const body = `\n  float ${name}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${name}_(bool a) {\n    return !a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${name}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSin(): GlslValueFunction {\n  return glslBuiltinUnary('sin');\n}\nexport function glslRelu(): GlslValueFunction {\n  const name = 'relu';\n  const body = `\n  float ${name}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${name}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSigmoid(): GlslValueFunction {\n  const name = 'sigmoid';\n  const body = `\n  float ${name}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${name}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSqrt(): GlslValueFunction {\n  return glslBuiltinUnary('sqrt');\n}\nexport function glslTan(): GlslValueFunction {\n  return glslBuiltinUnary('tan');\n}\nexport function glslTanh(): GlslValueFunction {\n  const name = 'tanh';\n  const body = `\n  float ${name}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${name}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\n  const body = `\n  float ${name}_(float a) {\n    return ${name}(a);\n  }\n  vec4 ${name}_(vec4 v) {\n    return ${name}(v);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\n/////\n/////\n/////\n\nconst createElementwiseProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\n        ProgramInfo => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n          return {\n            ...metadata,\n            output: {dims: input.dims, type: input.type, textureType},\n            shaderSource: `\n     ${glslFunc.body}\n     void main() {\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\n       v = ${glslFunc.name}_(v);\n       ${glsl.output} = v;\n     }\n     `,\n            hasMain: true\n          };\n        };\n\nconst createElementwiseProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\n        ProgramInfoLoader => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\n        };\n\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\n\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\n\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\n\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clip =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\n        inputs)];\n\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey({\n  min: node.attributes.getFloat('min', -3.4028234663852886e+38),\n  max: node.attributes.getFloat('max', 3.4028234663852886e+38)\n});\n\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\n\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\n\nexport interface EluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const elu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\n\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\n\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\n\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\n\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const leakyRelu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\n\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\n\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\n\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\n\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\n\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\n\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\n\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\n\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\n\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst unpackProgramMetadata = {\n  name: 'unpack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const rank = input.dims.length;\n\n  const channels = getChannels('rc', rank);\n  const innerDims = channels.slice(-2);\n  const coordsDataType = getCoordsDataType(rank);\n  const unpackChannel = unpackFromChannel();\n  const isScalar = (input.dims.length === 0);\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const shaderSource = `\n    ${unpackChannel}\n    void main() {\n      ${coordsDataType} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${sourceCoords});\n\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\n     }\n   `;\n\n  return {\n    ...unpackProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n    shaderSource\n  };\n};\n\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\n\nfunction getSourceCoords(rank: number, dims: string[]): string {\n  if (rank === 1) {\n    return 'rc';\n  }\n\n  let coords = '';\n  for (let i = 0; i < rank; i++) {\n    coords += dims[i];\n    if (i < rank - 1) {\n      coords += ',';\n    }\n  }\n  return coords;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const unsqueeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Unsqueeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\n  readonly opset: number;\n  readonly isResize: boolean;\n  readonly mode: string;\n  readonly scales: number[];\n  readonly extrapolationValue: number;\n  readonly coordinateTransformMode: string;\n  readonly useExtrapolation: boolean;\n  readonly needRoiInput: boolean;\n  readonly nearestMode: string;\n  readonly cubicCoefficientA: number;\n  readonly excludeOutside: boolean;\n  readonly useNearest2xOptimization: boolean;\n  readonly roiInputIdx: number;\n  readonly scalesInputIdx: number;\n  readonly sizesInputIdx: number;\n}\n\nconst upsampleProgramMetadata = {\n  name: 'Upsample',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...upsampleProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\n\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\n\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\n  const isResize = (opset >= 10);\n\n  // processing node attributes\n  const mode = node.attributes.getString('mode', 'nearest');\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\n    throw new Error(`unrecognized mode: ${mode}`);\n  }\n\n  let scales: number[] = [];\n  if (opset < 9) {\n    scales = node.attributes.getFloats('scales');\n    scalesValidation(scales, mode, isResize);\n  }\n\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\n\n  const coordinateTransformMode =\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\n  if ([\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\n      ].indexOf(coordinateTransformMode) === -1) {\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\n  }\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\n  const useExtrapolation = needRoiInput;\n\n  const nearestMode =\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\n  }\n\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\n  if (excludeOutside && mode !== 'cubic') {\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\n  }\n\n  const useNearest2xOptimization =\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\n\n  let roiInputIdx = 0;\n  let scalesInputIdx = 0;\n  let sizesInputIdx = 0;\n\n  if (opset > 10) {\n    roiInputIdx = 1;\n    scalesInputIdx = 2;\n    sizesInputIdx = 3;\n  } else if (opset === 9) {\n    scalesInputIdx = 1;\n  }\n\n  return createAttributeWithCacheKey({\n    opset,\n    isResize,\n    mode,\n    scales,\n    extrapolationValue,\n    coordinateTransformMode,\n    useExtrapolation,\n    needRoiInput,\n    nearestMode,\n    cubicCoefficientA,\n    excludeOutside,\n    useNearest2xOptimization,\n    roiInputIdx,\n    scalesInputIdx,\n    sizesInputIdx\n  });\n};\n\nconst createUpsampleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [inputWidth, inputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\n\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\n      const [outputWidth, outputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\n      const dim = outputShape.length;\n\n      const outputPitches = new Array<number>(dim);\n      const inputPitches = new Array<number>(dim);\n      let precalculatedPitches = `\n      int output_pitches[${dim}];\n      int input_pitches[${dim}];\n      `;\n      for (let d = dim - 1; d >= 0; d--) {\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\n\n        precalculatedPitches += `\n        output_pitches[${d}] = ${outputPitches[d]};\n        input_pitches[${d}] = ${inputPitches[d]};\n        `;\n      }\n      const getInputFloatFunction = `\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\n        return value;\n      }\n      `;\n\n      const shaderSource = attributes.mode === 'nearest' ?\n          // nearest\n          `\n    ${getInputFloatFunction}\n    float process(int indices[${dim}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int d, m;\n      for (int dim = 0; dim < ${dim}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }` :\n          dim === 4 ?\n          // bilinear 4D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }` :\n              // bilinear 2D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;\n      return {\n        ...upsampleProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        variables: [{\n          name: 'scales',\n          type: 'int',\n          arrayLength: attributes.scales.length,\n          data: attributes.scales.map(x => Math.ceil(x))\n        }]\n      };\n    };\n\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\n      (attribute.opset >= 11 && inputs.length !== 3 && inputs.length !== 4)) {\n    throw new Error('invalid inputs.');\n  }\n\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\n    throw new Error('Invalid input shape.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input tensor types.');\n  }\n};\n\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\n  if (!isResize) {\n    for (const scale of scales) {\n      if (scale < 1) {\n        throw new Error('Scale value should be greater than or equal to 1.');\n      }\n    }\n  } else {\n    for (const scale of scales) {\n      if (scale <= 0) {\n        throw new Error('Scale value should be greater than 0.');\n      }\n    }\n  }\n  if (mode === 'linear' || mode === 'cubic') {\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\nimport {Logger, Profiler} from '../../instrument';\n\nimport {GlslPreprocessor} from './glsl-preprocessor';\nimport {getVertexShaderSource} from './glsl-source';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  vertexShader: WebGLShader;\n  attributesBound: boolean;\n\n  constructor(\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\n      public textureLayoutStrategy: TextureLayoutStrategy) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\n      const gl = this.glContext.gl;\n      const program = buildArtifact.program;\n      gl.useProgram(program);\n      try {\n        this.bindOutput(output);\n        if (!this.attributesBound) {\n          this.bindAttributes(buildArtifact.attribLocations);\n        }\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\n      } catch (err) {\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\n        throw err;\n      }\n      this.profiler.event('backend', 'GlContext.draw()', () => {\n        this.glContext.draw();\n      });\n    }, this.glContext);\n  }\n  dispose(): void {\n    if (this.vertexShader) {\n      this.glContext.deleteShader(this.vertexShader);\n    }\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n      const fragScript = preprocessor.preprocess();\n      const program = this.compile(fragScript);\n      const artifact = {\n        programInfo,\n        program,\n        uniformLocations: this.getUniformLocations(\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\n        attribLocations: this.getAttribLocations(program)\n      };\n      return artifact;\n    });\n  }\n  protected compile(fragShaderScript: string): WebGLProgram {\n    if (!this.vertexShader) {\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\n    }\n    if (env.debug) {\n      Logger.verbose('ProrgramManager', `FragShader:\n${fragShaderScript}\n`);\n    }\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\n    this.glContext.deleteShader(fragShader);\n    return program;\n  }\n  bindOutput(td: TextureData): void {\n    const width = td.width;\n    const height = td.height;\n    Logger.verbose(\n        'ProrgramManager',\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\n    this.glContext.attachFramebuffer(td.texture, width, height);\n  }\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\n    const positionHandle = attribLocations.position;\n    const textureCoordHandle = attribLocations.textureCoord;\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\n    this.attributesBound = true;\n  }\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\n      void {\n    const gl = this.glContext.gl;\n    let texturePosition = 0;\n    for (const {name, type, location, arrayLength} of uniformLocations) {\n      const value = variables.find(v => v.name === name)?.data;\n      if (type !== 'sampler2D' && !value) {\n        throw new Error(`variable '${name}' does not have data defined in program info`);\n      }\n      switch (type) {\n        case 'sampler2D':\n          this.bindTexture(textures[texturePosition], location, texturePosition);\n          texturePosition++;\n          break;\n        case 'float':\n          if (arrayLength) {\n            gl.uniform1fv(location, value as number[]);\n          } else {\n            gl.uniform1f(location, value as number);\n          }\n          break;\n        case 'int':\n          if (arrayLength) {\n            gl.uniform1iv(location, value as number[]);\n          } else {\n            gl.uniform1i(location, value as number);\n          }\n          break;\n        default:\n          throw new Error(`Uniform not implemented: ${type}`);\n      }\n    }\n  }\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\n  }\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\n    return {\n      position: this.getAttribLocation(program, 'position'),\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\n    };\n  }\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\n      Artifact.UniformLocations {\n    const uniformLocations: Artifact.UniformLocations = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\n      }\n    }\n    return uniformLocations;\n  }\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\n    const gl = this.glContext.gl;\n    const reference = gl.getUniformLocation(program, name);\n    if (reference === null) {\n      throw new Error(`Uniform ${name} not found.`);\n    }\n    return reference;\n  }\n  getAttribLocation(program: WebGLProgram, name: string): number {\n    const gl = this.glContext.gl;\n    const attributeLocation: number = gl.getAttribLocation(program, name);\n    return attributeLocation;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from '../../backend';\nimport {Graph} from '../../graph';\nimport {Logger} from '../../instrument';\nimport {Operator} from '../../operators';\nimport {OpSet, resolveOperator} from '../../opset';\nimport {Session} from '../../session';\nimport {Tensor} from '../../tensor';\nimport {WebGLBackend} from '../backend-webgl';\n\nimport {WebGLInferenceHandler} from './inference-handler';\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\nimport {ProgramManager} from './program-manager';\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureManager} from './texture-manager';\nimport {TextureData} from './types';\n\nexport class WebGLSessionHandler implements SessionHandler {\n  programManager: ProgramManager;\n  textureManager: TextureManager;\n  layoutStrategy: TextureLayoutStrategy;\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\n  initializers: Set<Tensor.Id>;\n  pack?: boolean;\n\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\n    this.textureManager = new TextureManager(\n        backend.glContext, this.layoutStrategy, this.context.profiler,\n        {reuseTextures: backend.textureCacheMode === 'full'});\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n    this.pack = backend.pack;\n    this.pack2unpackMap = new Map();\n    this.unpack2packMap = new Map();\n  }\n\n  createInferenceHandler() {\n    return new WebGLInferenceHandler(this);\n  }\n  onGraphInitialized(graph: Graph): void {\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\n    this.initializers = new Set(initializers);\n  }\n  isInitializer(tensorId: Tensor.Id): boolean {\n    return this.initializers ? this.initializers.has(tensorId) : false;\n  }\n  addInitializer(tensorId: Tensor.Id): void {\n    this.initializers.add(tensorId);\n  }\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\n    if (isPacked) {\n      return this.packedTextureDataCache.get(tensorId);\n    } else {\n      return this.unpackedTextureDataCache.get(tensorId);\n    }\n  }\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\n    if (isPacked) {\n      this.packedTextureDataCache.set(tensorId, textureData);\n    } else {\n      this.unpackedTextureDataCache.set(tensorId, textureData);\n    }\n  }\n  dispose(): void {\n    this.programManager.dispose();\n    this.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.unpackedTextureDataCache = new Map();\n  }\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nexport declare namespace Encoder {\n  export interface DataTypeMap {\n    float: Float32Array;\n    byte: Uint8Array;\n    int: Uint32Array;\n  }\n  export type DataType = keyof DataTypeMap;\n  type DataArrayType = DataTypeMap[DataType];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  export const enum Usage {\n    Default = 0,\n    UploadOnly,\n    Download4BytesAsFloat32,\n  }\n}\n\n/**\n * Abstraction for mapping data types to texture texlets\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\n * Decoding means how a texlet's channels are mapped to a resulting Float32\n */\nexport interface DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\n  allocate(size: number): Encoder.DataArrayType;\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\n}\n/**\n * WebGL2 data encoder\n * Uses R32F as the format for texlet\n */\nexport class RedFloat32DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.R32F;\n      this.format = gl.RED;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA32F;\n      this.format = gl.RGBA;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\n    let result: Float32Array;\n    let source: Float32Array;\n    if (src.constructor !== Float32Array) {\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\n      source = new Float32Array(src);\n    }\n    if (textureSize * this.channelSize > src.length) {\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\n      source = src as Float32Array;\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\n      source.forEach((v, i) => result[i] = v);\n    } else {\n      source = src as Float32Array;\n      result = source;\n    }\n    return result;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n/**\n * Data encoder for WebGL 1 with support for floating point texture\n */\nexport class RGBAFloatDataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\n    if (channels !== 1 && channels !== 4) {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n    this.internalFormat = gl.RGBA;\n    this.format = gl.RGBA;\n    this.channelSize = channels;\n    this.textureType = textureType || gl.FLOAT;\n  }\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\n    let dest = src;\n    if (this.channelSize === 1) {\n      Logger.verbose('Encoder', 'Exploding into a larger array');\n      dest = this.allocate(textureSize) as Float32Array;\n      src.forEach((v, i) => dest[i * 4] = v);\n    }\n    return dest;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n\nexport class Uint8DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize = 4;\n  constructor(gl: WebGLRenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.ALPHA;\n      this.format = gl.ALPHA;  // not tested\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA;\n      this.format = gl.RGBA;\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Uint8Array(size * this.channelSize);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\n    if (buffer instanceof Uint8Array) {\n      return buffer.subarray(0, dataSize);\n    }\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\nimport {assert} from '../../util';\n/** Layout preferences */\nexport interface WidthHeightPrefs {\n  breakAxis?: number;\n  isPacked?: boolean;\n  reverseWH?: boolean;\n}\n/**\n * TextureLayoutStrategy is an abstraction for different plans\n * for mapping n-dimensional arrays to 2D textures (and back)\n */\nexport interface TextureLayoutStrategy {\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\n}\n\n/**\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\n */\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    // scalar tensor\n    if (shape.length === 0) {\n      return [1, 1];\n    }\n    const maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    const totalSize = shape.reduce((a, b) => a * b);\n\n    let width = Math.floor(Math.sqrt(totalSize));\n\n    for (; width < maxTextureSize && width < totalSize; width++) {\n      if (totalSize % width === 0) {\n        break;\n      }\n    }\n\n    if (width >= maxTextureSize || totalSize % width !== 0) {\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\n    }\n    return [width, totalSize / width];\n  }\n}\n\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const wh = this.computeTexture(shape, prefs);\n    if (prefs && prefs.isPacked) {\n      wh[0] /= 2;\n      wh[1] /= 2;\n    }\n    if (prefs && prefs.reverseWH) {\n      return [wh[1], wh[0]];\n    }\n    return wh;\n  }\n\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const isPacked = prefs && prefs.isPacked;\n    // scalar tensor\n    if (shape.length === 0) {\n      return isPacked ? [2, 2] : [1, 1];\n    }\n    let maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    let logShape = shape.slice(0);\n    if (isPacked) {\n      maxTextureSize = maxTextureSize * 2;\n\n      // This logic ensures we accurately count the number of packed texels needed\n      // to accommodate the tensor. We can only pack values in the same texel if\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n      // fact that the texels containing the third row are half empty.\n      logShape = logShape.map(\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\n\n      // Packed texture height is at least 2 (the channel height of a single\n      // texel).\n      if (logShape.length === 1) {\n        logShape = [2, logShape[0]];\n      }\n    }\n\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n      const squeezeResult = squeezeShape(logShape);\n      logShape = squeezeResult.newShape;\n    }\n\n    const size = sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTextureSize) {\n      return [1, size];\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\n      return logShape as [number, number];\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\n      return [logShape[0] * logShape[1], logShape[2]];\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2]];\n    } else if (\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\n        logShape[3] <= maxTextureSize) {\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    } else if (\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    } else {\n      if (isPacked) {\n        // For packed textures size equals the number of channels required to\n        // accommodate the texture data. However in order to squarify such that\n        // inner dimensions stay even, we rewrite size to equal the number of\n        // texels. Then in the return statement we rehydrate the squarified\n        // dimensions to channel units.\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\n      }\n      return sizeToSquarishShape(size);\n    }\n  }\n}\n\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(isInt),\n      () => 'All values in axis param must be integers but ' +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\nexport function getRowsCols(shape: number[]): [number, number] {\n  if (shape.length === 0) {\n    throw Error('Cannot get rows and columns of an empty shape array.');\n  }\n\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\nimport {TextureLayout, TextureType} from './types';\n\nexport const createTextureLayoutFromTextureType =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\n     textureType: TextureType): TextureLayout => {\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\n      const isPacked = textureType === TextureType.packed;\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\n          undefined;\n      return createTextureLayoutFromShape(\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\n    };\n\nexport const calculateTextureWidthAndHeight =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\n        [number, number] => {\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\n          return [layout.width, layout.height];\n        };\n\n/**\n * Create a TextureLayout object from shape.\n */\nexport const createTextureLayoutFromShape =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\n      const isPacked = !!(prefs && prefs.isPacked);\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\n      const rank = shape.length;\n      let inferredDims = shape.slice(0);\n      if (rank === 0) {\n        inferredDims = [1];\n      }\n      if (channels === 1) {\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\n        unpackedShape = shape;\n      } else if (isPacked) {\n        if (channels !== 4) {\n          throw new Error('a packed texture must be 4-channel');\n        }\n        unpackedShape = shape;\n        if (rank > 0) {\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\n        }\n        if (rank > 1) {\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\n        }\n      } else if (!unpackedShape) {\n        throw new Error('Unpacked shape is needed when using channels > 1');\n      }\n      return {\n        width,\n        height,\n        channels,\n        isPacked,\n        shape: inferredDims,\n        strides: ShapeUtil.computeStrides(inferredDims),\n        unpackedShape,\n        reversedWH: (prefs && prefs.reverseWH)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger, Profiler} from '../../instrument';\nimport {Tensor} from '../../tensor';\n\nimport {Encoder} from './texture-data-encoder';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureData, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\nexport interface TextureManagerConfig {\n  reuseTextures?: boolean;\n}\n\n/**\n * TextureManager is the mainly responsible for caching Textures\n * Textures are cached in 2 levels:\n *   1. the texures which are associated with a dataId (from Tensor)\n *    Caching these is crucial to performance. These are In-use Textures\n *   2. textures which are not in use by any current ProgramInfo/Tensor\n *     These are called Free Textures\n * TextureManager is also used to help creating textures. For this it\n * uses WebGLContext and TextureLayoutStrategy\n */\nexport class TextureManager {\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\n  private readonly textureLookup: Map<WebGLTexture, string>;\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\n\n  constructor(\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\n      private config: TextureManagerConfig) {\n    if (config.reuseTextures) {\n      this.inUseTextures = new Map();\n      this.idleTextures = new Map();\n      this.textureLookup = new Map();\n    }\n  }\n  createTextureFromLayout(\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\n    const textureDataType = this.toEncoderType(dataType);\n\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\n      throw new Error('not implemented');\n    }\n    const width = layout.width;\n    const height = layout.height;\n\n    let key: string|undefined;\n    let inUseTextures: WebGLTexture[]|undefined;\n    if (this.config.reuseTextures) {\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\n      inUseTextures = this.inUseTextures.get(key);\n      if (!inUseTextures) {\n        inUseTextures = [];\n        this.inUseTextures.set(key, inUseTextures);\n      }\n\n      const idleTextures = this.idleTextures.get(key);\n      if (idleTextures && idleTextures.length > 0) {\n        const texture = idleTextures.pop()!;\n        inUseTextures.push(texture);\n        if (usage === Encoder.Usage.UploadOnly) {\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\n        }\n        return texture;\n      }\n    }\n\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\n\n    if (this.config.reuseTextures) {\n      inUseTextures!.push(texture);\n      this.textureLookup.set(texture, key!);\n    }\n    return texture;\n  }\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\n    if (!channels) {\n      channels = 1;\n    }\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      return this.toTensorData(dataType, data);\n    });\n  }\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\n    const dataId = td.tensor.dataId;\n    if (!channels) {\n      channels = 1;\n    }\n    if (this.pendingRead.has(dataId)) {\n      const subscribers = this.pendingRead.get(dataId);\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\n    }\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\n      this.pendingRead.set(dataId, []);\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      // add a fence waiting for the data to be ready\n      await this.glContext.createAndWaitForFence();\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      const tensorData = this.toTensorData(dataType, data);\n      const subscribers = this.pendingRead.get(dataId);\n      this.pendingRead.delete(dataId);\n      subscribers?.forEach(resolve => resolve(tensorData));\n      return tensorData;\n    });\n  }\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b);\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\n    });\n  }\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\n    let key: string|undefined;\n    if (this.config.reuseTextures) {\n      key = this.textureLookup.get(textureData.texture);\n      if (key) {\n        if (deleteTexture) {\n          this.textureLookup.delete(key);\n        }\n        const inUseTextures = this.inUseTextures.get(key);\n        if (inUseTextures) {\n          const index = inUseTextures.indexOf(textureData.texture);\n          if (index !== -1) {\n            inUseTextures.splice(index, 1);\n            let idleTextures = this.idleTextures.get(key);\n            if (!idleTextures) {\n              idleTextures = [];\n              this.idleTextures.set(key, idleTextures);\n            }\n            idleTextures.push(textureData.texture);\n          }\n        }\n      }\n    }\n\n    if (!key || deleteTexture) {\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\n      this.glContext.deleteTexture(textureData.texture);\n    }\n  }\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\n    switch (dataType) {\n      case 'int16':\n        return data instanceof Int16Array ? data : Int16Array.from(data);\n      case 'int32':\n        return data instanceof Int32Array ? data : Int32Array.from(data);\n      case 'int8':\n        return data instanceof Int8Array ? data : Int8Array.from(data);\n      case 'uint16':\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\n      case 'uint32':\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\n      case 'uint8':\n      case 'bool':\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\n      case 'float32':\n        return data instanceof Float32Array ? data : Float32Array.from(data);\n      case 'float64':\n        return data instanceof Float64Array ? data : Float64Array.from(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n  }\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\n    if (!data) {\n      return undefined;\n    }\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\n    /*\n    switch (dataType) {\n      case 'int16':\n      case 'int32':\n      case 'uint16':\n      case 'uint32':\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\n      case 'int8':\n      case 'uint8':\n      case 'bool':\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\n      case 'float32':\n      case 'float64':\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n    */\n  }\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\n    return 'float';\n    // switch (dataType) {\n    //   case 'int16':\n    //   case 'int32':\n    //   case 'uint16':\n    //   case 'uint32':\n    //     return 'int';\n    //   case 'uint8':\n    //   case 'bool':\n    //     return 'byte';\n    //   case 'float32':\n    //   case 'float64':\n    //     return 'float';\n    //   default:\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\n    // }\n  }\n  clearActiveTextures(): void {\n    this.glContext.clearActiveTextures();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../tensor';\n\n/**\n * Layout info is used for mapping n-dimensional array to 2D textures\n * The layout is created by the TextureLayoutStrategy based on\n * the Tensor's dimensions and strides\n */\nexport interface TextureLayout {\n  width: number;\n  height: number;\n  /**\n   * specify the number of value that encoded in a single pixel\n   */\n  channels: 1|2|3|4;\n  /**\n   * whether in packed mode or not\n   */\n  isPacked?: boolean;\n  /**\n   * the normalized shape\n   */\n  shape: readonly number[];\n  /**\n   * the stride of each dimensions, calculated according to shape\n   */\n  strides: readonly number[];\n  /**\n   * the original shape(dims) of the corresponding tensor\n   */\n  unpackedShape: readonly number[];\n\n  reversedWH?: boolean;\n}\nexport interface TextureData extends TextureLayout {\n  tensor: Tensor;\n  texture: WebGLTexture;\n}\n\nexport enum TextureType {\n  unpacked,              // <-- normal unpacked texture\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\n  packed,                // <-- normal packed texture\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  type: Tensor.DataType;\n  textureType: TextureType;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * A set of metadata of a shader program.\n */\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n  /**\n   * texture types for each input\n   */\n  inputTypes: TextureType[];\n  /**\n   * names of each input\n   */\n  inputNames: string[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for output\n   */\n  output: TensorInfo;\n  /**\n   * the shader's processing source code\n   */\n  shaderSource: string;\n  /**\n   * whether the shader source contains a customized main function implementation\n   */\n  hasMain?: boolean;\n}\n\nexport interface VariableInfo {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * Information of uniforms that shader uses\n */\nexport interface UniformInfo {\n  type: 'sampler2D'|VariableInfo['type'];\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface UniformLocation extends UniformInfo {\n  location: WebGLUniformLocation;\n}\n\n/**\n * Artifact is the result of compilation\n * It does not contain input of output data\n * However anything that could be run as a \"program\"\n */\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  program: WebGLProgram;\n  uniformLocations: UniformLocation[];\n  attribLocations: {position: number; textureCoord: number};\n}\nexport declare namespace Artifact {\n  type UniformLocations = Artifact['uniformLocations'];\n  type AttribLocations = Artifact['attribLocations'];\n}\n\nexport interface UniformData {\n  [name: string]: number|number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {assert} from '../../util';\n/**\n * Given a non RGBA shape calculate the R version\n * It is assumed that the dimensions are multiples of given channels\n * NOTE: it is always the last dim that gets packed.\n * @param unpackedShape original shape to create a packed version from\n */\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\n  const len = unpackedShape.length;\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\n}\n\nexport async function repeatedTry(\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Generates the function name from an input sampler name.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\n}\n\n/**\n * Generates the function name from an input sampler name at output coordinates.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\n}\n\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\n  // Deep copy.\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\n  newInputShape = squeezedShape;\n  return newInputShape;\n}\n\n/** Returns a list of squeezed parameters for shader functions */\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\n  return keptDims.map(d => params[d]).join(', ');\n}\n\n/** Returns the data type for different ranks. */\nexport function getCoordsDataType(rank: number): string {\n  if (rank <= 1) {\n    return 'int';\n  } else if (rank === 2) {\n    return 'ivec2';\n  } else if (rank === 3) {\n    return 'ivec3';\n  } else if (rank === 4) {\n    return 'ivec4';\n  } else if (rank === 5) {\n    return 'ivec5';\n  } else if (rank === 6) {\n    return 'ivec6';\n  } else {\n    throw Error(`GPU for rank ${rank} is not yet supported`);\n  }\n}\n\nexport function getGlChannels(rank = 6): string[] {\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nimport {WebGLContext} from './webgl-context';\n\nconst cache: {[contextId: string]: WebGLContext} = {};\n\n/**\n * This factory function creates proper WebGLRenderingContext based on\n * the current browsers capabilities\n * The order is from higher/most recent versions to most basic\n */\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  let context: WebGLContext|undefined;\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\n    context = cache.webgl2;\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\n    context = cache.webgl;\n  }\n\n  context = context || createNewWebGLContext(contextId);\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\n  const gl = context.gl;\n\n  cache[contextId] = context;\n\n  if (gl.isContextLost()) {\n    delete cache[contextId];\n    return createWebGLContext(contextId);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n\n  return context;\n}\n\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  const canvas = createCanvas();\n  const contextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    depth: false,\n    antialias: false,\n    stencil: false,\n    preserveDrawingBuffer: false,\n    premultipliedAlpha: false,\n    failIfMajorPerformanceCaveat: false\n  };\n  let gl: WebGLRenderingContext|null;\n  const ca = contextAttributes;\n  if (!contextId || contextId === 'webgl2') {\n    gl = canvas.getContext('webgl2', ca);\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 2);\n      } catch (err) {\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\n      }\n    }\n  }\n  if (!contextId || contextId === 'webgl') {\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 1);\n      } catch (err) {\n        Logger.warning(\n            'GlContextFactory',\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\n      }\n    }\n  }\n\n  throw new Error('WebGL is not supported');\n}\n\nfunction createCanvas(): HTMLCanvasElement {\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  return canvas;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport * as DataEncoders from './texture-data-encoder';\nimport {DataEncoder, Encoder} from './texture-data-encoder';\nimport {repeatedTry} from './utils';\n\nexport interface FenceContext {\n  query: WebGLSync|null;\n  isFencePassed(): boolean;\n}\n\ntype PollItem = {\n  isDoneFn: () => boolean; resolveFn: () => void;\n};\n\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\n  let i = 0;\n  for (; i < arr.length; ++i) {\n    const isDone = arr[i]();\n    if (!isDone) {\n      break;\n    }\n  }\n  return i - 1;\n}\n\n/**\n * Abstraction and wrapper around WebGLRenderingContext and its operations\n */\nexport class WebGLContext {\n  gl: WebGLRenderingContext;\n  version: 1|2;\n\n  private vertexbuffer: WebGLBuffer;\n  private framebuffer: WebGLFramebuffer;\n\n  // WebGL flags and vital parameters\n  private isFloatTextureAttachableToFrameBuffer: boolean;\n  isFloat32DownloadSupported: boolean;\n  isRenderFloat32Supported: boolean;\n  isBlendSupported: boolean;\n  maxTextureSize: number;\n  // private maxCombinedTextureImageUnits: number;\n  private maxTextureImageUnits: number;\n  // private maxCubeMapTextureSize: number;\n  // private shadingLanguageVersion: string;\n  // private webglVendor: string;\n  // private webglVersion: string;\n\n  // WebGL2 flags and vital parameters\n  // private max3DTextureSize: number;\n  // private maxArrayTextureLayers: number;\n  // private maxColorAttachments: number;\n  // private maxDrawBuffers: number;\n\n  // WebGL extensions\n  // eslint-disable-next-line camelcase\n  textureFloatExtension: OES_texture_float|null;\n  // eslint-disable-next-line camelcase\n  textureHalfFloatExtension: OES_texture_half_float|null;\n\n  // WebGL2 extensions\n  colorBufferFloatExtension: unknown|null;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\n\n  private disposed: boolean;\n  private frameBufferBound = false;\n\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\n    this.gl = gl;\n    this.version = version;\n\n    this.getExtensions();\n    this.vertexbuffer = this.createVertexbuffer();\n    this.framebuffer = this.createFramebuffer();\n    this.queryVitalParameters();\n  }\n\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\n    const gl = this.gl;\n    // create the texture\n    const texture = gl.createTexture();\n    // bind the texture so the following methods effect this texture.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    const buffer = data ? encoder.encode(data, width * height) : null;\n    gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,  // Level of detail.\n        encoder.internalFormat, width, height,\n        0,  // Always 0 in OpenGL ES.\n        encoder.format, encoder.textureType, buffer);\n    this.checkError();\n    return texture as WebGLTexture;\n  }\n  updateTexture(\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\n    const gl = this.gl;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const buffer = encoder.encode(data, width * height);\n    gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,  // level\n        0,  // xoffset\n        0,  // yoffset\n        width, height, encoder.format, encoder.textureType, buffer);\n    this.checkError();\n  }\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\n    const gl = this.gl;\n    // Make it the target for framebuffer operations - including rendering.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    this.checkError();\n    gl.viewport(0, 0, width, height);\n    gl.scissor(0, 0, width, height);\n  }\n  readTexture(\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\n      channels: number): Encoder.DataArrayType {\n    const gl = this.gl;\n    if (!channels) {\n      channels = 1;\n    }\n    if (!this.frameBufferBound) {\n      this.attachFramebuffer(texture, width, height);\n    }\n    const encoder = this.getEncoder(dataType, channels);\n    const buffer = encoder.allocate(width * height);\n    // bind texture to framebuffer\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    // TODO: Check if framebuffer is ready\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\n    this.checkError();\n    // unbind FB\n    return encoder.decode(buffer, dataSize);\n  }\n\n  isFramebufferReady(): boolean {\n    // TODO: Implement logic to check if the framebuffer is ready\n    return true;\n  }\n  getActiveTexture(): string {\n    const gl = this.gl;\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\n  }\n  getTextureBinding(): WebGLTexture {\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n  }\n  getFramebufferBinding(): WebGLFramebuffer {\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n  }\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\n    const gl = this.gl;\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\n    gl.enableVertexAttribArray(positionHandle);\n    if (textureCoordHandle !== -1) {\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\n      gl.enableVertexAttribArray(textureCoordHandle);\n    }\n    this.checkError();\n  }\n  createProgram(\n      vertexShader: WebGLShader,\n      fragShader: WebGLShader,\n      ): WebGLProgram {\n    const gl = this.gl;\n    const program = gl.createProgram()!;\n\n    // the program consists of our shaders\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    return program;\n  }\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\n    const gl = this.gl;\n    const shader = gl.createShader(shaderType);\n    if (!shader) {\n      throw new Error(`createShader() returned null with type ${shaderType}`);\n    }\n\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\nShader source:\n${shaderSource}`);\n    }\n    return shader;\n  }\n  deleteShader(shader: WebGLShader): void {\n    this.gl.deleteShader(shader);\n  }\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\n    const gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0 + position);\n    this.checkError();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    this.checkError();\n    gl.uniform1i(uniformHandle, position);\n    this.checkError();\n  }\n  draw(): void {\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n    this.checkError();\n  }\n  checkError(): void {\n    if (env.debug) {\n      const gl = this.gl;\n      const error = gl.getError();\n      let label = '';\n      switch (error) {\n        case (gl.NO_ERROR):\n          return;\n        case (gl.INVALID_ENUM):\n          label = 'INVALID_ENUM';\n          break;\n        case (gl.INVALID_VALUE):\n          label = 'INVALID_VALUE';\n          break;\n        case (gl.INVALID_OPERATION):\n          label = 'INVALID_OPERATION';\n          break;\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\n          break;\n        case (gl.OUT_OF_MEMORY):\n          label = 'OUT_OF_MEMORY';\n          break;\n        case (gl.CONTEXT_LOST_WEBGL):\n          label = 'CONTEXT_LOST_WEBGL';\n          break;\n        default:\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\n      }\n      throw new Error(label);\n    }\n  }\n  deleteTexture(texture: WebGLTexture): void {\n    this.gl.deleteTexture(texture);\n  }\n  deleteProgram(program: WebGLProgram): void {\n    this.gl.deleteProgram(program);\n  }\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\n    if (this.version === 2) {\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\n    }\n\n    switch (dataType) {\n      case 'float':\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\n        } else {\n          return new DataEncoders.RGBAFloatDataEncoder(\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\n        }\n      case 'int':\n        throw new Error('not implemented');\n      case 'byte':\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\n      default:\n        throw new Error(`Invalid dataType: ${dataType}`);\n    }\n  }\n  clearActiveTextures(): void {\n    const gl = this.gl;\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n  }\n  dispose(): void {\n    if (this.disposed) {\n      return;\n    }\n    const gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteFramebuffer(this.framebuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.deleteBuffer(this.vertexbuffer);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.finish();\n    this.disposed = true;\n  }\n\n  private createDefaultGeometry(): Float32Array {\n    // Sets of x,y,z(=0),s,t coordinates.\n    return new Float32Array([\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\n    ]);\n  }\n  private createVertexbuffer(): WebGLBuffer {\n    const gl = this.gl;\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n      throw new Error('createBuffer() returned null');\n    }\n    const geometry = this.createDefaultGeometry();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\n    this.checkError();\n    return buffer;\n  }\n  private createFramebuffer(): WebGLFramebuffer {\n    const fb = this.gl.createFramebuffer();\n    if (!fb) {\n      throw new Error('createFramebuffer returned null');\n    }\n    return fb;\n  }\n\n  private queryVitalParameters(): void {\n    const gl = this.gl;\n\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\n\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\n      throw new Error('both float32 and float16 TextureType are not supported');\n    }\n\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\n\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\n    // this.webglVersion = gl.getParameter(gl.VERSION);\n\n    if (this.version === 2) {\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\n    }\n  }\n  private getExtensions(): void {\n    if (this.version === 2) {\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n    } else {\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\n    }\n  }\n\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\n    // test whether Float32 texture is supported:\n    // STEP.1 create a float texture\n    const gl = this.gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    // STEP.2 bind a frame buffer\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    // STEP.3 attach texture to framebuffer\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    // STEP.4 test whether framebuffer is complete\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isComplete;\n  }\n\n  private checkRenderFloat32(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  private checkFloat32Download(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  /**\n   * Check whether GL_BLEND is supported\n   */\n  private checkFloat32Blend(): boolean {\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\n    // https://github.com/microsoft/onnxjs/issues/145\n\n    const gl = this.gl;\n\n    let texture: WebGLTexture|null|undefined;\n    let frameBuffer: WebGLFramebuffer|null|undefined;\n    let vertexShader: WebGLShader|null|undefined;\n    let fragmentShader: WebGLShader|null|undefined;\n    let program: WebGLProgram|null|undefined;\n\n    try {\n      texture = gl.createTexture();\n      frameBuffer = gl.createFramebuffer();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n      gl.enable(gl.BLEND);\n\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      if (!vertexShader) {\n        return false;\n      }\n      gl.shaderSource(vertexShader, 'void main(){}');\n      gl.compileShader(vertexShader);\n\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      if (!fragmentShader) {\n        return false;\n      }\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\n      gl.compileShader(fragmentShader);\n\n      program = gl.createProgram();\n      if (!program) {\n        return false;\n      }\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      gl.useProgram(program);\n\n      gl.drawArrays(gl.POINTS, 0, 1);\n      return gl.getError() === gl.NO_ERROR;\n\n    } finally {\n      gl.disable(gl.BLEND);\n\n      if (program) {\n        gl.deleteProgram(program);\n      }\n      if (vertexShader) {\n        gl.deleteShader(vertexShader);\n      }\n      if (fragmentShader) {\n        gl.deleteShader(fragmentShader);\n      }\n      if (frameBuffer) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.deleteFramebuffer(frameBuffer);\n      }\n      if (texture) {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.deleteTexture(texture);\n      }\n    }\n  }\n\n  beginTimer(): WebGLQuery {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      const query = gl2.createQuery() as WebGLQuery;\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n      return query;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported.');\n    }\n  }\n\n  endTimer() {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\n      return;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n  }\n\n  isTimerResultAvailable(query: WebGLQuery): boolean {\n    let available = false, disjoint = false;\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n\n    return available && !disjoint;\n  }\n\n  getTimerResult(query: WebGLQuery): number {\n    let timeElapsed = 0;\n    if (this.version === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n      gl2.deleteQuery(query);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n    // return miliseconds\n    return timeElapsed / 1000000;\n  }\n\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\n    await repeatedTry(() => this.isTimerResultAvailable(query));\n    return this.getTimerResult(query);\n  }\n\n  public async createAndWaitForFence(): Promise<void> {\n    const fenceContext = this.createFence(this.gl);\n    return this.pollFence(fenceContext);\n  }\n\n  private createFence(gl: WebGLRenderingContext): FenceContext {\n    let isFencePassed: () => boolean;\n    const gl2 = gl as WebGL2RenderingContext;\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    gl.flush();\n    if (query === null) {\n      isFencePassed = () => true;\n    } else {\n      isFencePassed = () => {\n        const status = gl2.clientWaitSync(query, 0, 0);\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\n      };\n    }\n    return {query, isFencePassed};\n  }\n\n  async pollFence(fenceContext: FenceContext) {\n    return new Promise<void>(resolve => {\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n    });\n  }\n\n  private itemsToPoll: PollItem[] = [];\n\n  pollItems(): void {\n    // Find the last query that has finished.\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n    for (let i = 0; i <= index; ++i) {\n      const {resolveFn} = this.itemsToPoll[i];\n      resolveFn();\n    }\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n  }\n\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\n    this.itemsToPoll.push({isDoneFn, resolveFn});\n    if (this.itemsToPoll.length > 1) {\n      // We already have a running loop that polls.\n      return;\n    }\n    // Start a new loop that polls.\n    await repeatedTry(() => {\n      this.pollItems();\n      // End the loop if no more items to poll.\n      return this.itemsToPoll.length === 0;\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from './backend';\nimport {Graph} from './graph';\nimport {Logger, Profiler} from './instrument';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nclass KernelOp {\n  constructor(public op: Operator, public node: Graph.Node) {}\n}\n\nexport class ExecutionPlan {\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\n    this.initialize(ops);\n  }\n\n  initialize(ops: Operator[]) {\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\n      const graphNodes = this.graph.getNodes();\n      if (graphNodes.length !== ops.length) {\n        throw new Error('The size of nodes and OPs do not match.');\n      }\n\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\n      this.reset();\n\n      // look for starter node(s)\n      this._starter = [];\n      this._ops.forEach((op, i) => {\n        let resolved = true;\n        for (const input of op.node.inputs) {\n          if (\n              !this._values[input]                                   // not an initialized input\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\n          ) {\n            resolved = false;\n            break;\n          }\n        }\n        if (resolved) {\n          this._starter.push(i);\n        }\n      });\n    });\n  }\n\n  reset() {\n    this._values = this.graph.getValues().map(i => i.tensor);\n  }\n\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\n      // reset mediem result\n      this.reset();\n\n      // create inference handler\n      const inferenceHandler = sessionHandler.createInferenceHandler();\n\n      // populate inputs value\n      const graphInputs = this.graph.getInputIndices();\n      if (modelInputs.length !== graphInputs.length) {\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\n            modelInputs.length} expected: ${graphInputs.length}`);\n      }\n\n      modelInputs.forEach((input, i) => {\n        const index = graphInputs[i];\n        this._values[index] = input;\n      });\n\n      // prepare running sequence\n      const sequence: number[] = this._starter.slice(0);\n\n      // execution iterations\n      const graphValues = this.graph.getValues();\n      const graphNodes = this.graph.getNodes();\n\n      let rear = 0;\n      while (rear < sequence.length) {\n        const thisOpIndex = sequence[rear++];\n        const thisOp = this._ops[thisOpIndex];\n\n        // check input\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\n        if (inputList.indexOf(undefined) !== -1) {\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\n        }\n\n        // run\n        const inputTensors = inputList as Tensor[];\n        Logger.verbose(\n            'ExecPlan',\n            `Runing op:${thisOp.node.name} (${\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\n\n        const outputList = await this.profiler.event(\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\n\n        // check output\n        if (outputList.length !== thisOp.node.outputs.length) {\n          throw new Error('the size of output does not match model definition.');\n        }\n\n        // fill value\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          if (this._values[j]) {\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\n          }\n          this._values[j] = output;\n        });\n\n        // resolve downstream nodes\n        const downstreamNodes = new Set<number>();\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\n            let resolved = true;\n            for (const k of currentDownstreamNode.inputs) {\n              if (!this._values[k]) {\n                resolved = false;\n                break;\n              }\n            }\n            if (resolved) {\n              downstreamNodes.add(currentDownstreamNodeIndex);\n            }\n          }\n        });\n        sequence.push(...downstreamNodes);\n      }\n\n      const output: Tensor[] = [];\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\n        const outputIndex = this.graph.getOutputIndices()[i];\n        const outputTensor = this._values[outputIndex];\n        if (outputTensor === undefined) {\n          throw new Error(`required output [${outputIndex}] does not have value`);\n        }\n        if (outputIndex === 0) {\n          await outputTensor.getData();\n        } else {\n          // eslint-disable-next-line no-unused-expressions\n          outputTensor.data;\n        }\n        output.push(outputTensor);\n      }\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\n      inferenceHandler.dispose();\n      return output;\n    });\n  }\n\n  _values: Array<Tensor|undefined>;\n  _ops: KernelOp[];\n  _starter: number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {onnx} from 'onnx-proto';\n\nimport {Attribute} from './attribute';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\nimport {Tensor} from './tensor';\nimport {LongUtil, ProtoUtil} from './util';\n\nexport declare namespace Graph {\n  export interface Shape {\n    readonly dims: readonly number[];\n  }\n  export interface ValueType {\n    readonly tensorType: Tensor.DataType;\n    readonly shape: Shape;\n  }\n  export interface Value {\n    // the tensor data. empty for non-initialized inputs\n    readonly tensor?: Tensor;\n\n    // index to the Node where the value comes from. -1 for initializer.\n    readonly from: number;\n\n    // indices to the Nodes where the values go to.\n    readonly to: readonly number[];\n\n    // value type specification. empty for non-input values.\n    readonly type?: ValueType;\n  }\n  export interface Node {\n    // name of the node\n    readonly name: string;\n\n    // the operator type\n    readonly opType: string;\n\n    // indices to the Values where the inputs come from.\n    readonly inputs: readonly number[];\n\n    // indices to the Values where the outpus go to.\n    readonly outputs: readonly number[];\n\n    // the attributes that used by the operator\n    readonly attributes: Attribute;\n  }\n\n  /**\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\n   */\n  export interface Transformer {\n    removeAllIdentityNodes(): void;\n    removeAllDropoutNodes(): void;\n    fuseConvActivationNodes(): void;\n    // TODO: add generic functions to manipulate the graph\n  }\n\n  // an initializer can use transformer to transform the graph\n  export interface Initializer {\n    transformGraph(transformer: Transformer): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Graph {\n  getInputIndices(): readonly number[];\n  getInputNames(): readonly string[];\n  getOutputIndices(): readonly number[];\n  getOutputNames(): readonly string[];\n  getValues(): readonly Graph.Value[];\n  getNodes(): readonly Graph.Node[];\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\nexport const Graph = {\n  /**\n   * construct a graph from a graph protobuf type\n   */\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\n      new GraphImpl(graphProto, initializer),\n};\n\nclass Value implements Graph.Value {\n  constructor(valueInfo?: onnx.IValueInfoProto) {\n    this._from = undefined;\n    this._to = [];\n    this.tensor = undefined;\n    this.type = undefined;\n\n    if (valueInfo) {\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\n    }\n  }\n\n  _from?: number;  // -1 represent from initializer\n  get from() {\n    return this._from!;\n  }\n  _to: number[];\n  get to() {\n    return this._to;\n  }\n  type?: Graph.ValueType;\n  tensor?: Tensor;\n}\n\nclass Node implements Graph.Node {\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\n    if (_nodeProto instanceof onnx.NodeProto) {\n      this.name = _nodeProto.name;\n      this.opType = _nodeProto.opType;\n      this.attributes = new Attribute(_nodeProto.attribute);\n    } else if (_nodeProto instanceof ortFbs.Node) {\n      this.name = name ?? _nodeProto.name()!;\n      this.opType = _nodeProto.opType()!;\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\n    }\n\n    this.inputs = [];\n    this.outputs = [];\n    this.executeNode = true;\n  }\n\n  name: string;\n  opType: string;\n  inputs: number[];\n  outputs: number[];\n  attributes: Attribute;\n  executeNode: boolean;\n}\n\nclass GraphImpl implements Graph, Graph.Transformer {\n  private _allData: Value[];\n\n  private _allInputIndices: number[];\n  private _allInputNames: string[];\n\n  private _allOutputIndices: number[];\n  private _allOutputNames: string[];\n\n  private _nodes: Node[];\n\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\n    if (!graph) {\n      throw new TypeError('graph is empty');\n    }\n\n    // build the graph - will throw exceptions if something fatal is detected\n    this.buildGraph(graph);\n\n    // execute any transformation logic for the graph (if applicable)\n    this.transformGraph(graphInitializer);\n\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\n    this.checkIsAcyclic();\n  }\n\n  getInputIndices(): readonly number[] {\n    return this._allInputIndices;\n  }\n\n  getInputNames(): readonly string[] {\n    return this._allInputNames;\n  }\n\n  getOutputIndices(): readonly number[] {\n    return this._allOutputIndices;\n  }\n\n  getOutputNames(): readonly string[] {\n    return this._allOutputNames;\n  }\n\n  getValues(): readonly Graph.Value[] {\n    return this._allData;\n  }\n\n  getNodes(): readonly Graph.Node[] {\n    return this._nodes;\n  }\n\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\n    // build the graph - will throw exceptions if something fatal is detected\n    if (graph instanceof onnx.GraphProto) {\n      this.buildGraphFromOnnxFormat(graph);\n    } else if (graph instanceof ortFbs.Graph) {\n      this.buildGraphFromOrtFormat(graph);\n    } else {\n      throw new TypeError('Graph type is not supported.');\n    }\n  }\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    if (!graph.input) {\n      throw new Error('missing information in graph: input');\n    }\n    const inputValueNames = [];\n    for (const i of graph.input) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated input name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      inputValueNames.push(i.name!);\n    }\n\n    // scan all initializers\n    if (!graph.initializer) {\n      throw new Error('missing information in graph: initializer');\n    }\n    for (const i of graph.initializer) {\n      let index = dataIndices.get(i.name!);\n      if (index === undefined) {\n        const value = new Value();\n        value.type = {\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\n        };\n        index = this._allData.push(value) - 1;\n        dataIndices.set(i.name!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromProto(i);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    if (!graph.output) {\n      throw new Error('missing information in graph: output');\n    }\n    for (const i of graph.output) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated output name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(i.name!);\n    }\n\n    // scan all nodes\n    if (!graph.node) {\n      throw new Error('missing information in graph: node');\n    }\n    for (const nodeProto of graph.node) {\n      if (!nodeProto.name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            nodeProto.name = name;\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(nodeProto.name)) {\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\n      nodesIndices.set(nodeProto.name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n      if (!nodeProto.output) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (const output of nodeProto.output) {\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType === 'Constant') {\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n\n      if (!nodeProto.input) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (const input of nodeProto.input) {\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n\n    return true;\n  }\n\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    const inputValueNames = [];\n    for (let i = 0; i < graph.inputsLength(); i++) {\n      const inputName = graph.inputs(i);\n      if (dataIndices.has(inputName)) {\n        throw new Error(`duplicated input name: ${inputName}`);\n      }\n      // Find the input typeInfo from nodeargs\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\n        if (graph.nodeArgs(j)?.name() === inputName) {\n          const value = new Value();\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\n            throw new Error('Unexpected value type for the nodeArg.');\n          }\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\n          const shape = valueInfo.shape()!;\n          const dims = [];\n          for (let k = 0; k < shape.dimLength()!; k++) {\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\n          }\n          value.type = {shape: {dims}, tensorType: type};\n          const currentIndex = this._allData.push(value) - 1;\n          dataIndices.set(inputName, currentIndex);\n          inputValueNames.push(inputName);\n        }\n      }\n    }\n    // check initializers\n    for (let i = 0; i < graph.initializersLength(); i++) {\n      const initializer = graph.initializers(i)!;\n      let index = dataIndices.get(initializer.name()!);\n      if (index === undefined) {\n        const value = new Value();\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\n        value.type = {shape: {dims}, tensorType: type};\n        index = this._allData.push(value) - 1;\n        dataIndices.set(initializer.name()!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    for (let i = 0; i < graph.outputsLength(); i++) {\n      const outputName = graph.outputs(i);\n      if (dataIndices.has(outputName)) {\n        throw new Error(`duplicated output name: ${outputName}`);\n      }\n      const currentIndex = this._allData.push(new Value()) - 1;\n      dataIndices.set(outputName, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(outputName);\n    }\n\n    // scan all nodes\n    if (!graph.nodes) {\n      throw new Error('missing information in graph: node');\n    }\n    for (let i = 0; i < graph.nodesLength(); i++) {\n      const nodeProto = graph.nodes(i);\n      let name = nodeProto!.name();\n      if (!name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            // an unique name is found. break.\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(name)) {\n        throw new Error(`duplicated node name: ${name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\n      nodesIndices.set(name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i);\n      if (nodeProto == null) {\n        throw new Error(`No node exists at index ${i}`);\n      }\n      if (nodeProto?.outputsLength() === 0) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\n        const output = nodeProto?.outputs(j);\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType() === 'Constant') {\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (nodeProto.outputsLength() !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i)!;\n\n      if (nodeProto.inputsLength() === 0) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\n        const input = nodeProto.inputs(j)!;\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n  }\n\n  private checkIsAcyclic() {\n    // go through the graph and check for cycles or other fatal inconsistencies\n    const starters: Set<number> = new Set<number>();\n    this._allInputIndices.forEach(i => {\n      const data = this._allData[i];\n      data._to.forEach(j => {\n        starters.add(j);\n      });\n    });\n\n    // Iterative DFS to check for cycles\n    const nodesStack = Array.from(starters);\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\n\n    while (nodesStack.length > 0) {\n      const nodeIndex = nodesStack.pop()!;\n      // this node has now been processed completely. Mark this node 'black' to denote this.\n      if (nodesState[nodeIndex] === 'gray') {\n        nodesState[nodeIndex] = 'black';\n      } else {\n        // this node is under processing stage. mark this node 'gray' to denote this.\n        nodesStack.push(nodeIndex);\n        nodesState[nodeIndex] = 'gray';\n\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\n          const data = this._allData[outgoingEdgeIndex];\n          if (typeof data.tensor !== 'undefined') {\n            throw new Error('node outputs should not be initialized');\n          }\n          if (data._from !== nodeIndex) {\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\n          }\n          data._to.forEach((downstreamNodeIndex) => {\n            // back edge found - cyclic\n            if (nodesState[downstreamNodeIndex] === 'gray') {\n              throw new Error('model graph is cyclic');\n            }\n            // tree edge found - continue processing by adding it to stack\n            else if (nodesState[downstreamNodeIndex] === 'white') {\n              nodesStack.push(downstreamNodeIndex);\n            }\n          });\n        });\n      }\n    }\n  }\n\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\n    // apply common transform\n    this.removeAllIdentityNodes();\n    this.removeAllDropoutNodes();\n    this.fuseConvActivationNodes();\n    // apply initializer specific transform\n    if (graphInitializer) {\n      graphInitializer.transformGraph(this);\n    }\n\n    // finalize graph\n    this.finalizeGraph();\n  }\n\n  /**\n   * finalize the graph.\n   *\n   * this function should be called after all the transformation completed.\n   * this function removes all unnecessary nodes and values from the graph\n   */\n  finalizeGraph() {\n    let offset = 0;\n    // delete all nodes that are not being executed\n    for (let i = 0; i < this._nodes.length; i++) {\n      if (!this._nodes[i].executeNode) {\n        // delete this node and shift all subsequent nodes up\n        offset++;\n        // delete all output values\n        this._nodes[i].outputs.forEach(ind => {\n          this._allData[ind]._from = -2;\n        });\n        this._nodes.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        // update the value table\n        this._nodes[i].inputs.forEach(value => {\n          const ind = this._allData[value]._to.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allData[value]._to[ind] = i;\n          }\n        });\n        this._nodes[i].outputs.forEach(value => {\n          if (this._allData[value]._from && this._allData[value]._from! === i + offset) {\n            this._allData[value]._from! = i;\n          }\n        });\n      }\n    }\n    offset = 0;\n    // delete all values that are not being referenced\n    for (let i = 0; i < this._allData.length; i++) {\n      // if current value is neither linked to next node, nor an output value, remove it.\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\n        offset++;\n        this._allData.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        let ind = -1;\n        // if current value is neither an input value nor an initializer, find the node it's\n        // coming from and update the corresponding node output\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[this._allData[i].from].outputs[ind] = i;\n          }\n        } else {\n          // if current value is an input value, update its reference in inputIndices\n          ind = this._allInputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allInputIndices[ind] = i;\n          }\n        }\n\n        // find the node that the current value is linking to and update its input reference\n        this._allData[i].to.forEach(node => {\n          ind = this._nodes[node].inputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[node].inputs[ind] = i;\n          }\n        });\n        if (this._allData[i].to.length === 0) {\n          // if current value is a graph output, update its reference in outputIndices\n          ind = this._allOutputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allOutputIndices[ind] = i;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete the specifed node. Assume the node has only one input and the first output connected to other nodes\n   * @param nodeIndex The index of node to be deleted\n   */\n  private deleteNode(nodeIndex: number) {\n    const node = this._nodes[nodeIndex];\n    if (node.inputs.length > 1) {\n      throw new Error('Node deletion with multiple inputs is not supported. ');\n    }\n    if (node.outputs.length > 1) {\n      for (let i = 1; i < node.outputs.length; i++) {\n        if (this._allData[node.outputs[i]].to.length > 0) {\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\n        }\n      }\n    }\n\n    // this node wil not be executed\n    node.executeNode = false;\n    const inputValueIndex = node.inputs[0];\n    const outputValueIndex = node.outputs[0];\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\n\n    // remove this node from the to property of the input Value\n    const delIndex = this._allData[inputValueIndex].to.indexOf(nodeIndex);\n    // should not happen\n    if (delIndex === -1) {\n      throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\n    }\n    this._allData[inputValueIndex].to.splice(delIndex, 1);\n\n    // clear node indices consuming this output Value\n    this._allData[outputValueIndex]._to = [];\n\n    // if the output of this node is a graph output, adjust the index appropriately\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\n    if (index !== -1) {\n      this._allOutputIndices[index] = inputValueIndex;\n    }\n\n    // override the inputs for nodes consuming this node's output with the input to this node\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\n      for (const nodeIndex of nodesConsumingOutput) {\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\n        // should not happen\n        if (replaceIndex === -1) {\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\n        }\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\n        this._allData[inputValueIndex].to.push(nodeIndex);\n      }\n    }\n  }\n\n  removeAllDropoutNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Dropout' nodes so that no time is wasted in execution\n      if (node.opType === 'Dropout') {\n        // the node should have exactly 1 input and 1 or 2 outputs\n        if (node.inputs.length !== 1) {\n          throw new Error('Dropout nodes should only contain one input. ');\n        }\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\n        }\n        // the second output should not be referenced by any other node\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\n        }\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  removeAllIdentityNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Identity' nodes so that no time is wasted in execution\n      if (node.opType === 'Identity') {\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  isActivation(n: Node): boolean {\n    switch (n.opType) {\n      // TODO: add other activation methods\n      case 'Relu':\n      case 'Sigmoid':\n      case 'Clip':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  fuseConvActivationNodes() {\n    for (const node of this._nodes) {\n      if (node.opType === 'Conv') {\n        const next = this._allData[node.outputs[0]]._to;\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\n          const child = this._nodes[next[0]];\n          node.attributes.set('__internal_activation', 'string', (child.opType));\n          // TODO: need add support for Clip after opset 11, which has min/max as inputs\n          if (child.opType === 'Clip') {\n            node.attributes.set('__clip_min', 'float', child.attributes.getFloat('min'));\n            node.attributes.set('__clip_max', 'float', child.attributes.getFloat('max'));\n          }\n          this.deleteNode(next[0]);\n        }\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {WebGLContext} from './backends/webgl/webgl-context';\n\nexport declare namespace Logger {\n  export interface SeverityTypeMap {\n    verbose: 'v';\n    info: 'i';\n    warning: 'w';\n    error: 'e';\n    fatal: 'f';\n  }\n\n  export type Severity = keyof SeverityTypeMap;\n\n  export type Provider = 'none'|'console';\n\n  /**\n   * Logging config that used to control the behavior of logger\n   */\n  export interface Config {\n    /**\n     * Specify the logging provider. 'console' by default\n     */\n    provider?: Provider;\n    /**\n     * Specify the minimal logger serverity. 'warning' by default\n     */\n    minimalSeverity?: Logger.Severity;\n    /**\n     * Whether to output date time in log. true by default\n     */\n    logDateTime?: boolean;\n    /**\n     * Whether to output source information (Not yet supported). false by default\n     */\n    logSourceLocation?: boolean;\n  }\n\n  export interface CategorizedLogger {\n    verbose(content: string): void;\n    info(content: string): void;\n    warning(content: string): void;\n    error(content: string): void;\n    fatal(content: string): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Logger {\n  (category: string): Logger.CategorizedLogger;\n\n  verbose(content: string): void;\n  verbose(category: string, content: string): void;\n  info(content: string): void;\n  info(category: string, content: string): void;\n  warning(content: string): void;\n  warning(category: string, content: string): void;\n  error(content: string): void;\n  error(category: string, content: string): void;\n  fatal(content: string): void;\n  fatal(category: string, content: string): void;\n\n  /**\n   * Reset the logger configuration.\n   * @param config specify an optional default config\n   */\n  reset(config?: Logger.Config): void;\n  /**\n   * Set the logger's behavior on the given category\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\n   * '' is specified, the default behavior will be updated.\n   * @param config the config object to indicate the logger's behavior\n   */\n  set(category: string, config: Logger.Config): void;\n\n  /**\n   * Set the logger's behavior from ort-common env\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\n   */\n  setWithEnv(env: Env): void;\n}\n\ninterface LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string): void;\n}\nclass NoOpLoggerProvider implements LoggerProvider {\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\n    // do nothing\n  }\n}\nclass ConsoleLoggerProvider implements LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string) {\n    // eslint-disable-next-line no-console\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\n  }\n\n  private color(severity: Logger.Severity) {\n    switch (severity) {\n      case 'verbose':\n        return '\\x1b[34;40mv\\x1b[0m';\n      case 'info':\n        return '\\x1b[32mi\\x1b[0m';\n      case 'warning':\n        return '\\x1b[30;43mw\\x1b[0m';\n      case 'error':\n        return '\\x1b[31;40me\\x1b[0m';\n      case 'fatal':\n        return '\\x1b[101mf\\x1b[0m';\n      default:\n        throw new Error(`unsupported severity: ${severity}`);\n    }\n  }\n}\n\nconst SEVERITY_VALUE = {\n  verbose: 1000,\n  info: 2000,\n  warning: 4000,\n  error: 5000,\n  fatal: 6000\n};\n\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\n  ['none']: new NoOpLoggerProvider(),\n  ['console']: new ConsoleLoggerProvider()\n};\nconst LOGGER_DEFAULT_CONFIG = {\n  provider: 'console',\n  minimalSeverity: 'warning',\n  logDateTime: true,\n  logSourceLocation: false\n};\nlet LOGGER_CONFIG_MAP:\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\n\nfunction log(category: string): Logger.CategorizedLogger;\nfunction log(severity: Logger.Severity, content: string): void;\nfunction log(severity: Logger.Severity, category: string, content: string): void;\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\nfunction log(\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\n  if (arg1 === undefined) {\n    // log(category: string): Logger.CategorizedLogger;\n    return createCategorizedLogger(arg0);\n  } else if (arg2 === undefined) {\n    // log(severity, content);\n    logInternal(arg0 as Logger.Severity, arg1, 1);\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\n    // log(severity, content, stack)\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\n    // log(severity, category, content)\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\n    // log(severity, category, content, stack)\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\n  } else {\n    throw new TypeError('input is valid');\n  }\n}\n\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\n  return {\n    verbose: log.verbose.bind(null, category),\n    info: log.info.bind(null, category),\n    warning: log.warning.bind(null, category),\n    error: log.error.bind(null, category),\n    fatal: log.fatal.bind(null, category)\n  };\n}\n\n// NOTE: argument 'category' is put the last parameter beacause typescript\n// doesn't allow optional argument put in front of required argument. This\n// order is different from a usual logging API.\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\n    return;\n  }\n\n  if (config.logDateTime) {\n    content = `${new Date().toISOString()}|${content}`;\n  }\n\n  if (config.logSourceLocation) {\n    // TODO: calculate source location from 'stack'\n  }\n\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace log {\n  export function verbose(content: string): void;\n  export function verbose(category: string, content: string): void;\n  export function verbose(arg0: string, arg1?: string) {\n    log('verbose', arg0, arg1);\n  }\n  export function info(content: string): void;\n  export function info(category: string, content: string): void;\n  export function info(arg0: string, arg1?: string) {\n    log('info', arg0, arg1);\n  }\n  export function warning(content: string): void;\n  export function warning(category: string, content: string): void;\n  export function warning(arg0: string, arg1?: string) {\n    log('warning', arg0, arg1);\n  }\n  export function error(content: string): void;\n  export function error(category: string, content: string): void;\n  export function error(arg0: string, arg1?: string) {\n    log('error', arg0, arg1);\n  }\n  export function fatal(content: string): void;\n  export function fatal(category: string, content: string): void;\n  export function fatal(arg0: string, arg1?: string) {\n    log('fatal', arg0, arg1);\n  }\n\n  export function reset(config?: Logger.Config): void {\n    LOGGER_CONFIG_MAP = {};\n    set('', config || {});\n  }\n  export function set(category: string, config: Logger.Config): void {\n    if (category === '*') {\n      reset(config);\n    } else {\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\n      LOGGER_CONFIG_MAP[category] = {\n        provider: config.provider || previousConfig.provider,\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\n                                                                      config.logSourceLocation\n      };\n    }\n\n    // TODO: we want to support wildcard or regex?\n  }\n\n  export function setWithEnv(env: Env): void {\n    const config: Logger.Config = {};\n    if (env.logLevel) {\n      config.minimalSeverity = env.logLevel as Logger.Severity;\n    }\n    set('', config);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\nexport const Logger: Logger = log;\n\nexport declare namespace Profiler {\n  export interface Config {\n    maxNumberEvents?: number;\n    flushBatchSize?: number;\n    flushIntervalInMilliseconds?: number;\n  }\n\n  export type EventCategory = 'session'|'node'|'op'|'backend';\n\n  export interface Event {\n    end(): void|Promise<void>;\n  }\n}\n// TODO\n// class WebGLEvent implements Profiler.Event {}\n\nclass Event implements Profiler.Event {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\n\n  end() {\n    return this.endCallback(this);\n  }\n\n  async checkTimer(): Promise<number> {\n    if (this.ctx === undefined || this.timer === undefined) {\n      throw new Error('No webgl timer found');\n    } else {\n      this.ctx.endTimer();\n      return this.ctx.waitForQueryAndGetTime(this.timer);\n    }\n  }\n}\n\nclass EventRecord {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\n}\n\nexport class Profiler {\n  static create(config?: Profiler.Config): Profiler {\n    if (config === undefined) {\n      return new this();\n    }\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\n  }\n\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\n    this._started = false;\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\n  }\n\n  // start profiling\n  start() {\n    this._started = true;\n    this._timingEvents = [];\n    this._flushTime = now();\n    this._flushPointer = 0;\n  }\n\n  // stop profiling\n  stop() {\n    this._started = false;\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\n    }\n  }\n\n  // create an event scope for the specific function\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\n\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\n      |Promise<T> {\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\n    let isPromise = false;\n\n    const res = func();\n\n    // we consider a then-able object is a promise\n    if (res && typeof (res as Promise<T>).then === 'function') {\n      isPromise = true;\n      return new Promise<T>((resolve, reject) => {\n        (res as Promise<T>)\n            .then(\n                async value => {  // fulfilled\n                  if (event) {\n                    await event.end();\n                  }\n                  resolve(value);\n                },\n                async reason => {  // rejected\n                  if (event) {\n                    await event.end();\n                  }\n                  reject(reason);\n                });\n      });\n    }\n    if (!isPromise && event) {\n      const eventRes = event.end();\n      if (eventRes && typeof eventRes.then === 'function') {\n        return new Promise<T>((resolve, reject) => {\n          (eventRes).then(\n              () => {  // fulfilled\n                resolve(res);\n              },\n              (reason) => {  // rejected\n                reject(reason);\n              });\n        });\n      }\n    }\n    return res;\n  }\n\n  // begin an event\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\n    if (!this._started) {\n      throw new Error('profiler is not started yet');\n    }\n    if (ctx === undefined) {\n      const startTime = now();\n      this.flush(startTime);\n      return new Event(category, name, startTime, e => this.endSync(e));\n    } else {\n      const timer: WebGLQuery = ctx.beginTimer();\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\n    }\n  }\n\n  // end the specific event\n  private async end(event: Event): Promise<void> {\n    const endTime: number = await event.checkTimer();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private endSync(event: Event): void {\n    const endTime: number = now();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private logOneEvent(event: EventRecord) {\n    Logger.verbose(\n        `Profiler.${event.category}`,\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\n  }\n\n  private flush(currentTime: number) {\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\n      // should flush when either batch size accumlated or interval elepsed\n\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\n           this._flushPointer < this._timingEvents.length;\n           this._flushPointer++) {\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\n      }\n\n      this._flushTime = now();\n    }\n  }\n\n  get started() {\n    return this._started;\n  }\n  private _started = false;\n  private _timingEvents: EventRecord[];\n\n  private readonly _maxNumberEvents: number;\n\n  private readonly _flushBatchSize: number;\n  private readonly _flushIntervalInMilliseconds: number;\n\n  private _flushTime: number;\n  private _flushPointer = 0;\n}\n\n/**\n * returns a number to represent the current timestamp in a resolution as high as possible.\n */\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {OpSet} from './opset';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\nimport {LongUtil} from './util';\n\nexport class Model {\n  // empty model\n  constructor() {}\n\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\n    if (!isOrtFormat) {\n      // isOrtFormat === false || isOrtFormat === undefined\n      try {\n        this.loadFromOnnxFormat(buf, graphInitializer);\n        return;\n      } catch (e) {\n        if (isOrtFormat !== undefined) {\n          throw e;\n        }\n      }\n    }\n\n    this.loadFromOrtFormat(buf, graphInitializer);\n  }\n\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const modelProto = onnx.ModelProto.decode(buf);\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n\n    this._opsets =\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\n\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\n  }\n\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const fb = new flatbuffers.ByteBuffer(buf);\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n    this._opsets = [];\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\n      const opsetId = ortModel.opsetImport(i)!;\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\n    }\n\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\n  }\n\n  private _graph: Graph;\n  get graph(): Graph {\n    return this._graph;\n  }\n\n  private _opsets: OpSet[];\n  get opsets(): readonly OpSet[] {\n    return this._opsets;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from './backend';\nimport {Graph} from './graph';\nimport {Tensor} from './tensor';\n\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\n\nexport interface Operator {\n  readonly impl: OperatorImplementation<unknown>;\n  readonly context: Graph.Node|unknown;\n}\n\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from './graph';\nimport {OperatorImplementation, OperatorInitialization} from './operators';\n\nexport interface OpSet {\n  domain: string;\n  version: number;\n}\n\nexport declare namespace OpSet {\n  /**\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\n   */\n  type Domain = ''|'ai.onnx.ml';\n\n  /**\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\n   * operatorInitialization (optional)\n   */\n  type ResolveRule = [\n    string, Domain, string, OperatorImplementation<Graph.Node>\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\n}\n\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\n  for (const rule of rules) {\n    const opType = rule[0];\n    const domain = rule[1];\n    const versionSelector = rule[2];\n    const opImpl = rule[3];\n    const opInit = rule[4];\n\n    if (node.opType === opType) {  // operator type matches\n      for (const opset of opsets) {\n        // opset '' and 'ai.onnx' are considered the same.\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\n          if (matchSelector(opset.version, versionSelector)) {\n            return {opImpl, opInit};\n          }\n        }\n      }\n    }\n  }\n\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\n}\n\nfunction matchSelector(version: number, selector: string): boolean {\n  if (selector.endsWith('+')) {\n    // minimum version match ('7+' expects version>=7)\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\n    return !isNaN(rangeStart) && rangeStart <= version;\n  } else if (selector.split('-').length === 2) {\n    // range match ('6-8' expects 6<=version<=8)\n    const pair = selector.split('-');\n    const rangeStart = Number.parseInt(pair[0], 10);\n    const rangeEnd = Number.parseInt(pair[1], 10);\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\n  } else {\n    // exact match ('7' expects version===7)\n    return Number.parseInt(selector, 10) === version;\n  }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n/* eslint-disable */\n\nimport {flatbuffers} from 'flatbuffers';\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum AttributeType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    INT = 2,\n    STRING = 3,\n    TENSOR = 4,\n    GRAPH = 5,\n    FLOATS = 6,\n    INTS = 7,\n    STRINGS = 8,\n    TENSORS = 9,\n    GRAPHS = 10,\n    SPARSE_TENSOR = 11,\n    SPARSE_TENSORS = 12\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TensorDataType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    UINT8 = 2,\n    INT8 = 3,\n    UINT16 = 4,\n    INT16 = 5,\n    INT32 = 6,\n    INT64 = 7,\n    STRING = 8,\n    BOOL = 9,\n    FLOAT16 = 10,\n    DOUBLE = 11,\n    UINT32 = 12,\n    UINT64 = 13,\n    COMPLEX64 = 14,\n    COMPLEX128 = 15,\n    BFLOAT16 = 16\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum NodeType {Primitive = 0, Fused = 1}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\n}\n\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Shape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Shape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Dimension= obj\n     * @returns onnxruntime.experimental.fbs.Dimension\n     */\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    dimLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startShape(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimOffset\n     */\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, dimOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Shape.startShape(builder);\n      Shape.addDim(builder, dimOffset);\n      return Shape.endShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Dimension {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Dimension\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\n     */\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimension(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimension(\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Dimension.startDimension(builder);\n      Dimension.addValue(builder, valueOffset);\n      Dimension.addDenotation(builder, denotationOffset);\n      return Dimension.endDimension(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class DimensionValue {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns DimensionValue\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\n     */\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    dimValue(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    dimParam(): string|null;\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimensionValue(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\n     */\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long dimValue\n     */\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimParamOffset\n     */\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimParamOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimensionValue(\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\n      DimensionValue.startDimensionValue(builder);\n      DimensionValue.addDimType(builder, dimType);\n      DimensionValue.addDimValue(builder, dimValue);\n      DimensionValue.addDimParam(builder, dimParamOffset);\n      return DimensionValue.endDimensionValue(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TensorTypeAndShape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TensorTypeAndShape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\n        TensorTypeAndShape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Shape= obj\n     * @returns onnxruntime.experimental.fbs.Shape|null\n     */\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\n     */\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset shapeOffset\n     */\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, shapeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensorTypeAndShape(\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\n      TensorTypeAndShape.addElemType(builder, elemType);\n      TensorTypeAndShape.addShape(builder, shapeOffset);\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class MapType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns MapType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startMapType(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\n     */\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueTypeOffset\n     */\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, valueTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createMapType(\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      MapType.startMapType(builder);\n      MapType.addKeyType(builder, keyType);\n      MapType.addValueType(builder, valueTypeOffset);\n      return MapType.endMapType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SequenceType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SequenceType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSequenceType(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset elemTypeOffset\n     */\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, elemTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SequenceType.startSequenceType(builder);\n      SequenceType.addElemType(builder, elemTypeOffset);\n      return SequenceType.endSequenceType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class EdgeEnd {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns EdgeEnd\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      return this.bb!.readUint32(this.bb_pos);\n    }\n\n    /**\n     * @returns number\n     */\n    srcArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 4);\n    }\n\n    /**\n     * @returns number\n     */\n    dstArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number node_index\n     * @param number src_arg_index\n     * @param number dst_arg_index\n     * @returns flatbuffers.Offset\n     */\n    static createEdgeEnd(\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\n        dst_arg_index: number): flatbuffers.Offset {\n      builder.prep(4, 12);\n      builder.writeInt32(dst_arg_index);\n      builder.writeInt32(src_arg_index);\n      builder.writeInt32(node_index);\n      return builder.offset();\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class NodeEdge {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns NodeEdge\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNodeEdge(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number nodeIndex\n     */\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\n      builder.addFieldInt32(0, nodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputEdgesOffset\n     */\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputEdgesOffset\n     */\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNodeEdge(\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      NodeEdge.startNodeEdge(builder);\n      NodeEdge.addNodeIndex(builder, nodeIndex);\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\n      return NodeEdge.endNodeEdge(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Node {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Node\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    sinceVersion(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    index(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    opType(): string|null;\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    opType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.NodeType\n     */\n    type(): onnxruntime.experimental.fbs.NodeType {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    executionProviderType(): string|null;\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Attribute= obj\n     * @returns onnxruntime.experimental.fbs.Attribute\n     */\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\n        |null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    attributesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    inputArgCounts(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    inputArgCountsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Int32Array\n     */\n    inputArgCountsArray(): Int32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ?\n          new Int32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    implicitInputs(index: number): string;\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    implicitInputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNode(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number sinceVersion\n     */\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\n      builder.addFieldInt32(3, sinceVersion, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number index\n     */\n    static addIndex(builder: flatbuffers.Builder, index: number) {\n      builder.addFieldInt32(4, index, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opTypeOffset\n     */\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, opTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.NodeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset executionProviderTypeOffset\n     */\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset attributesOffset\n     */\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, attributesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputArgCountsOffset\n     */\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset implicitInputsOffset\n     */\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNode(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Node.startNode(builder);\n      Node.addName(builder, nameOffset);\n      Node.addDocString(builder, docStringOffset);\n      Node.addDomain(builder, domainOffset);\n      Node.addSinceVersion(builder, sinceVersion);\n      Node.addIndex(builder, index);\n      Node.addOpType(builder, opTypeOffset);\n      Node.addType(builder, type);\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\n      Node.addInputs(builder, inputsOffset);\n      Node.addOutputs(builder, outputsOffset);\n      Node.addAttributes(builder, attributesOffset);\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\n      Node.addImplicitInputs(builder, implicitInputsOffset);\n      return Node.endNode(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class ValueInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns ValueInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startValueInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset typeOffset\n     */\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, typeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createValueInfo(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      ValueInfo.startValueInfo(builder);\n      ValueInfo.addName(builder, nameOffset);\n      ValueInfo.addDocString(builder, docStringOffset);\n      ValueInfo.addType(builder, typeOffset);\n      return ValueInfo.endValueInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TypeInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TypeInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\n     */\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\n    }\n\n    /**\n     * @param flatbuffers.Table obj\n     * @returns ?flatbuffers.Table\n     */\n    value<T extends flatbuffers.Table>(obj: T): T|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTypeInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\n     */\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTypeInfo(\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TypeInfo.startTypeInfo(builder);\n      TypeInfo.addDenotation(builder, denotationOffset);\n      TypeInfo.addValueType(builder, valueType);\n      TypeInfo.addValue(builder, valueOffset);\n      return TypeInfo.endTypeInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class OperatorSetId {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns OperatorSetId\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    version(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startOperatorSetId(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long version\n     */\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createOperatorSetId(\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\n      OperatorSetId.startOperatorSetId(builder);\n      OperatorSetId.addDomain(builder, domainOffset);\n      OperatorSetId.addVersion(builder, version);\n      return OperatorSetId.endOperatorSetId(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Tensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Tensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    rawData(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    rawDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint8Array\n     */\n    rawDataArray(): Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ?\n          new Uint8Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    stringData(index: number): string;\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensor(builder: flatbuffers.Builder) {\n      builder.startObject(6);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\n     */\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset rawDataOffset\n     */\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, rawDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(1, data.length, 1);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt8(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(1, numElems, 1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringDataOffset\n     */\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, stringDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensor(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Tensor.startTensor(builder);\n      Tensor.addName(builder, nameOffset);\n      Tensor.addDocString(builder, docStringOffset);\n      Tensor.addDims(builder, dimsOffset);\n      Tensor.addDataType(builder, dataType);\n      Tensor.addRawData(builder, rawDataOffset);\n      Tensor.addStringData(builder, stringDataOffset);\n      return Tensor.endTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SparseTensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SparseTensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSparseTensor(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valuesOffset\n     */\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valuesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset indicesOffset\n     */\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, indicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSparseTensor(\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SparseTensor.startSparseTensor(builder);\n      SparseTensor.addValues(builder, valuesOffset);\n      SparseTensor.addIndices(builder, indicesOffset);\n      SparseTensor.addDims(builder, dimsOffset);\n      return SparseTensor.endSparseTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Attribute {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Attribute\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.AttributeType\n     */\n    type(): onnxruntime.experimental.fbs.AttributeType {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\n    }\n\n    /**\n     * @returns number\n     */\n    f(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    i(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    s(): string|null;\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    s(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    floats(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    floatsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Float32Array\n     */\n    floatsArray(): Float32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ?\n          new Float32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    ints(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    intsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    strings(index: number): string;\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    tensorsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph\n     */\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    graphsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startAttribute(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.AttributeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number f\n     */\n    static addF(builder: flatbuffers.Builder, f: number) {\n      builder.addFieldFloat32(3, f, 0.0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long i\n     */\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sOffset\n     */\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, sOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tOffset\n     */\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, tOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset gOffset\n     */\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, gOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset floatsOffset\n     */\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, floatsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addFloat32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset intsOffset\n     */\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, intsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringsOffset\n     */\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, stringsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tensorsOffset\n     */\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, tensorsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphsOffset\n     */\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, graphsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createAttribute(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Attribute.startAttribute(builder);\n      Attribute.addName(builder, nameOffset);\n      Attribute.addDocString(builder, docStringOffset);\n      Attribute.addType(builder, type);\n      Attribute.addF(builder, f);\n      Attribute.addI(builder, i);\n      Attribute.addS(builder, sOffset);\n      Attribute.addT(builder, tOffset);\n      Attribute.addG(builder, gOffset);\n      Attribute.addFloats(builder, floatsOffset);\n      Attribute.addInts(builder, intsOffset);\n      Attribute.addStrings(builder, stringsOffset);\n      Attribute.addTensors(builder, tensorsOffset);\n      Attribute.addGraphs(builder, graphsOffset);\n      return Attribute.endAttribute(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Graph {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Graph\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    initializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\n     * @returns onnxruntime.experimental.fbs.ValueInfo\n     */\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeArgsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Node= obj\n     * @returns onnxruntime.experimental.fbs.Node\n     */\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    maxNodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\n     * @returns onnxruntime.experimental.fbs.NodeEdge\n     */\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\n     * @returns onnxruntime.experimental.fbs.SparseTensor\n     */\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\n        onnxruntime.experimental.fbs.SparseTensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    sparseInitializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startGraph(builder: flatbuffers.Builder) {\n      builder.startObject(8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset initializersOffset\n     */\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, initializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeArgsOffset\n     */\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodesOffset\n     */\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, nodesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number maxNodeIndex\n     */\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\n      builder.addFieldInt32(3, maxNodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeEdgesOffset\n     */\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sparseInitializersOffset\n     */\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createGraph(\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Graph.startGraph(builder);\n      Graph.addInitializers(builder, initializersOffset);\n      Graph.addNodeArgs(builder, nodeArgsOffset);\n      Graph.addNodes(builder, nodesOffset);\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\n      Graph.addInputs(builder, inputsOffset);\n      Graph.addOutputs(builder, outputsOffset);\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\n      return Graph.endGraph(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Model {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Model\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    irVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\n     */\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\n        onnxruntime.experimental.fbs.OperatorSetId|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    opsetImportLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerName(): string|null;\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerVersion(): string|null;\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    modelVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphDocString(): string|null;\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startModel(builder: flatbuffers.Builder) {\n      builder.startObject(9);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long irVersion\n     */\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opsetImportOffset\n     */\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, opsetImportOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerNameOffset\n     */\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, producerNameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerVersionOffset\n     */\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(3, producerVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long modelVersion\n     */\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphOffset\n     */\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, graphOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphDocStringOffset\n     */\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createModel(\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Model.startModel(builder);\n      Model.addIrVersion(builder, irVersion);\n      Model.addOpsetImport(builder, opsetImportOffset);\n      Model.addProducerName(builder, producerNameOffset);\n      Model.addProducerVersion(builder, producerVersionOffset);\n      Model.addDomain(builder, domainOffset);\n      Model.addModelVersion(builder, modelVersion);\n      Model.addDocString(builder, docStringOffset);\n      Model.addGraph(builder, graphOffset);\n      Model.addGraphDocString(builder, graphDocStringOffset);\n      return Model.endModel(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class KernelCreateInfos {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns KernelCreateInfos\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\n        KernelCreateInfos {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    nodeIndices(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndicesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint32Array\n     */\n    nodeIndicesArray(): Uint32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ?\n          new Uint32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    kernelDefHashes(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    kernelDefHashesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeIndicesOffset\n     */\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelDefHashesOffset\n     */\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createKernelCreateInfos(\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      KernelCreateInfos.startKernelCreateInfos(builder);\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\n      return KernelCreateInfos.endKernelCreateInfos(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SubGraphSessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SubGraphSessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\n        SubGraphSessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphId(): string|null;\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphIdOffset\n     */\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, graphIdOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      builder.requiredField(offset, 4);  // graph_id\n      return offset;\n    }\n\n    static createSubGraphSessionState(\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SubGraphSessionState.startSubGraphSessionState(builder);\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\n      return SubGraphSessionState.endSubGraphSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\n     */\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\n     */\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    subGraphSessionStatesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelsOffset\n     */\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, kernelsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\n     */\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSessionState(\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SessionState.startSessionState(builder);\n      SessionState.addKernels(builder, kernelsOffset);\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\n      return SessionState.endSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class InferenceSession {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns InferenceSession\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @returns boolean\n     */\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\n      return bb.__has_identifier('ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    ortVersion(): string|null;\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Model= obj\n     * @returns onnxruntime.experimental.fbs.Model|null\n     */\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startInferenceSession(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset ortVersionOffset\n     */\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, ortVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset modelOffset\n     */\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, modelOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM', true);\n    }\n\n    static createInferenceSession(\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      InferenceSession.startInferenceSession(builder);\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\n      InferenceSession.addModel(builder, modelOffset);\n      InferenceSession.addSessionState(builder, sessionStateOffset);\n      return InferenceSession.endInferenceSession(builder);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {Session} from './session';\nimport {Tensor as OnnxjsTensor} from './tensor';\n\nexport class OnnxjsSessionHandler implements SessionHandler {\n  constructor(private session: Session) {\n    this.inputNames = this.session.inputNames;\n    this.outputNames = this.session.outputNames;\n  }\n\n  async dispose(): Promise<void> {}\n  inputNames: readonly string[];\n  outputNames: readonly string[];\n  async run(\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const inputMap = new Map<string, OnnxjsTensor>();\n    for (const name in feeds) {\n      if (Object.hasOwnProperty.call(feeds, name)) {\n        const feed = feeds[name];\n        inputMap.set(\n            name,\n            new OnnxjsTensor(\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\n                feed.data as OnnxjsTensor.NumberType));\n      }\n    }\n    const outputMap = await this.session.run(inputMap);\n    const output: SessionHandler.ReturnType = {};\n    outputMap.forEach((tensor, name) => {\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\n    });\n    return output;\n  }\n  startProfiling(): void {\n    this.session.startProfiling();\n  }\n  endProfiling(): void {\n    this.session.endProfiling();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {promisify} from 'util';\n\nimport {resolveBackend, SessionHandlerType} from './backend';\nimport {ExecutionPlan} from './execution-plan';\nimport {Graph} from './graph';\nimport {Profiler} from './instrument';\nimport {Model} from './model';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nexport declare namespace Session {\n  export interface Config {\n    backendHint?: string;\n    profiler?: Profiler.Config;\n  }\n\n  export interface Context {\n    profiler: Readonly<Profiler>;\n    graphInputTypes?: Tensor.DataType[];\n    graphInputDims?: Array<readonly number[]>;\n  }\n}\n\nexport class Session {\n  constructor(config: Session.Config = {}) {\n    this._initialized = false;\n    this.backendHint = config.backendHint;\n    this.profiler = Profiler.create(config.profiler);\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\n  }\n\n  get inputNames(): readonly string[] {\n    return this._model.graph.getInputNames();\n  }\n  get outputNames(): readonly string[] {\n    return this._model.graph.getOutputNames();\n  }\n\n  startProfiling() {\n    this.profiler.start();\n  }\n\n  endProfiling() {\n    this.profiler.stop();\n  }\n\n  async loadModel(uri: string): Promise<void>;\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\n  async loadModel(buffer: Uint8Array): Promise<void>;\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\n    await this.profiler.event('session', 'Session.loadModel', async () => {\n      // resolve backend and session handler\n      const backend = await resolveBackend(this.backendHint);\n      this.sessionHandler = backend.createSessionHandler(this.context);\n\n      this._model = new Model();\n      if (typeof arg === 'string') {\n        const isOrtFormat = arg.endsWith('.ort');\n        if (typeof fetch === 'undefined') {\n          // node\n          const buf = await promisify(readFile)(arg);\n          this.initialize(Buffer.from(buf), isOrtFormat);\n        } else {\n          // browser\n          const response = await fetch(arg);\n          const buf = await response.arrayBuffer();\n          this.initialize(new Uint8Array(buf), isOrtFormat);\n        }\n      } else if (!ArrayBuffer.isView(arg)) {\n        // load model from ArrayBuffer\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\n        this.initialize(arr);\n      } else {\n        // load model from Uint8array\n        this.initialize(arg);\n      }\n    });\n  }\n\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\n    if (this._initialized) {\n      throw new Error('already initialized');\n    }\n\n    this.profiler.event('session', 'Session.initialize', () => {\n      // load graph\n      const graphInitializer =\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\n\n      // graph is completely initialzied at this stage , let the interested handlers know\n      if (this.sessionHandler.onGraphInitialized) {\n        this.sessionHandler.onGraphInitialized(this._model.graph);\n      }\n      // initialize each operator in the graph\n      this.initializeOps(this._model.graph);\n\n      // instantiate an ExecutionPlan object to be used by the Session object\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\n    });\n\n    this._initialized = true;\n  }\n\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\n    if (!this._initialized) {\n      throw new Error('session not initialized yet');\n    }\n\n    return this.profiler.event('session', 'Session.run', async () => {\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\n\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\n\n      return this.createOutput(outputTensors);\n    });\n  }\n\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\n    const modelInputNames = this._model.graph.getInputNames();\n\n    // normalize inputs\n    // inputs: Tensor[]\n    if (Array.isArray(inputs)) {\n      if (inputs.length !== modelInputNames.length) {\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\n      }\n    }\n    // convert map to array\n    // inputs: Map<string, Tensor>\n    else {\n      if (inputs.size !== modelInputNames.length) {\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\n      }\n\n      const sortedInputs = new Array<Tensor>(inputs.size);\n      let sortedInputsIndex = 0;\n      for (let i = 0; i < modelInputNames.length; ++i) {\n        const tensor = inputs.get(modelInputNames[i]);\n        if (!tensor) {\n          throw new Error(`missing input tensor for: '${name}'`);\n        }\n        sortedInputs[sortedInputsIndex++] = tensor;\n      }\n\n      inputs = sortedInputs;\n    }\n\n    // validate dims requirements\n    // First session run - graph input data is not cached for the session\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\n        this.context.graphInputDims.length === 0) {\n      const modelInputIndices = this._model.graph.getInputIndices();\n      const modelValues = this._model.graph.getValues();\n\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\n\n      for (let i = 0; i < modelInputIndices.length; ++i) {\n        const graphInput = modelValues[modelInputIndices[i]];\n        graphInputDims[i] = graphInput.type!.shape.dims;\n\n        // cached for second and subsequent runs.\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\n        this.context.graphInputDims!.push(inputs[i].dims);\n      }\n\n      this.validateInputTensorDims(graphInputDims, inputs, true);\n    }\n\n    // Second and subsequent session runs - graph input data is cached for the session\n    else {\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\n    }\n\n    // validate types requirement\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\n\n    return inputs;\n  }\n\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedType = graphInputTypes[i];\n      const actualType = givenInputs[i].type;\n      if (expectedType !== actualType) {\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\n      }\n    }\n  }\n\n  private validateInputTensorDims(\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedDims = graphInputDims[i];\n      const actualDims = givenInputs[i].dims;\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\n            actualDims.join(',')}]`);\n      }\n    }\n  }\n\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\n      boolean {\n    if (expectedDims.length !== actualDims.length) {\n      return false;\n    }\n\n    for (let i = 0; i < expectedDims.length; ++i) {\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\n        // data shape mis-match AND not a 'None' dimension.\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\n    const modelOutputNames = this._model.graph.getOutputNames();\n    if (outputTensors.length !== modelOutputNames.length) {\n      throw new Error('expected number of outputs do not match number of generated outputs');\n    }\n\n    const output = new Map<string, Tensor>();\n    for (let i = 0; i < modelOutputNames.length; ++i) {\n      output.set(modelOutputNames[i], outputTensors[i]);\n    }\n\n    return output;\n  }\n\n  private initializeOps(graph: Graph): void {\n    const nodes = graph.getNodes();\n    this._ops = new Array(nodes.length);\n\n    for (let i = 0; i < nodes.length; i++) {\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\n    }\n  }\n\n  private _model: Model;\n  private _initialized: boolean;\n\n  private _ops: Operator[];\n  private _executionPlan: ExecutionPlan;\n\n  private backendHint?: string;\n\n  private sessionHandler: SessionHandlerType;\n  private context: Session.Context;\n  private profiler: Readonly<Profiler>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Guid} from 'guid-typescript';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nimport {ProtoUtil, ShapeUtil} from './util';\n\nexport declare namespace Tensor {\n  export interface DataTypeMap {\n    bool: Uint8Array;\n    float32: Float32Array;\n    float64: Float64Array;\n    string: string[];\n    int8: Int8Array;\n    uint8: Uint8Array;\n    int16: Int16Array;\n    uint16: Uint16Array;\n    int32: Int32Array;\n    uint32: Uint32Array;\n  }\n\n  export type DataType = keyof DataTypeMap;\n\n  export type StringType = Tensor.DataTypeMap['string'];\n  export type BooleanType = Tensor.DataTypeMap['bool'];\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\n  export type NumberType = BooleanType|IntegerType|FloatType;\n\n  export type Id = Guid;\n}\n\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\n\ntype DataProvider = (id: Tensor.Id) => TensorData;\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\n\nexport class Tensor {\n  /**\n   * get the underlying tensor data\n   */\n  get data(): TensorData {\n    if (this.cache === undefined) {\n      const data = this.dataProvider!(this.dataId);\n      if (data.length !== this.size) {\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\n      }\n      this.cache = data;\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the underlying string tensor data. Should only use when type is STRING\n   */\n  get stringData() {\n    if (this.type !== 'string') {\n      throw new TypeError('data type is not string');\n    }\n\n    return this.data as Tensor.StringType;\n  }\n\n  /**\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL)\n   */\n  get integerData() {\n    switch (this.type) {\n      case 'uint8':\n      case 'int8':\n      case 'uint16':\n      case 'int16':\n      case 'int32':\n      case 'uint32':\n      case 'bool':\n        return this.data as Tensor.IntegerType;\n\n      default:\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\n    }\n  }\n\n  /**\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\n   */\n  get floatData() {\n    switch (this.type) {\n      case 'float32':\n      case 'float64':\n        return this.data as Tensor.FloatType;\n\n      default:\n        throw new TypeError('data type is not float (float32, float64)');\n    }\n  }\n\n  /**\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\n   */\n  get numberData() {\n    if (this.type !== 'string') {\n      return this.data as Tensor.NumberType;\n    }\n    throw new TypeError('type cannot be non-number (string)');\n  }\n\n  /**\n   * get value of an element at the given indices\n   */\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\n  }\n\n  /**\n   * set value of an element at the given indices\n   */\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\n  }\n\n  /**\n   * get the underlying tensor data asynchronously\n   */\n  async getData(): Promise<TensorData> {\n    if (this.cache === undefined) {\n      this.cache = await this.asyncDataProvider!(this.dataId);\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the number of elements in the tensor\n   */\n  public readonly size: number;\n\n  private _strides: readonly number[];\n  /**\n   * get the strides for each dimension\n   */\n  get strides(): readonly number[] {\n    if (!this._strides) {\n      this._strides = ShapeUtil.computeStrides(this.dims);\n    }\n    return this._strides;\n  }\n\n  constructor(\n      /**\n       * get the dimensions of the tensor\n       */\n      public readonly dims: readonly number[],\n      /**\n       * get the type of the tensor\n       */\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\n      /**\n       * get the data ID that used to map to a tensor data\n       */\n      public readonly dataId: Guid = Guid.create()) {\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\n    const size = this.size;\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\n\n    if (cache !== undefined) {\n      if (cache.length !== size) {\n        throw new RangeError('Input dims doesn\\'t match data length.');\n      }\n    }\n\n    if (type === 'string') {\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\n        throw new TypeError('cache should be a string array');\n      }\n\n      if (empty) {\n        this.cache = new Array<string>(size);\n      }\n    } else {\n      if (cache !== undefined) {\n        const constructor = dataviewConstructor(type);\n        if (!(cache instanceof constructor)) {\n          throw new TypeError(`cache should be type ${constructor.name}`);\n        }\n      }\n\n      if (empty) {\n        const buf = new ArrayBuffer(size * sizeof(type));\n        this.cache = createView(buf, type);\n      }\n    }\n  }\n\n  /**\n   * Construct new Tensor from a ONNX Tensor object\n   * @param tensorProto the ONNX Tensor\n   */\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\n    if (!tensorProto) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      tensorProto.stringData!.forEach((str, i) => {\n        const buf = Buffer.from(str.buffer, str.byteOffset, str.byteLength);\n        value.data[i] = buf.toString();\n      });\n\n    } else if (\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\n        tensorProto.rawData.byteLength > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource =\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\n      const elementSize = sizeofProto(tensorProto.dataType!);\n      const length = tensorProto.rawData.byteLength / elementSize;\n\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\n        dataDest[i] = n;\n      }\n    } else {\n      // populate value from array\n      let array: Array<number|Long>;\n      switch (tensorProto.dataType) {\n        case onnx.TensorProto.DataType.FLOAT:\n          array = tensorProto.floatData!;\n          break;\n        case onnx.TensorProto.DataType.INT32:\n        case onnx.TensorProto.DataType.INT16:\n        case onnx.TensorProto.DataType.UINT16:\n        case onnx.TensorProto.DataType.INT8:\n        case onnx.TensorProto.DataType.UINT8:\n        case onnx.TensorProto.DataType.BOOL:\n          array = tensorProto.int32Data!;\n          break;\n        case onnx.TensorProto.DataType.INT64:\n          array = tensorProto.int64Data!;\n          break;\n        case onnx.TensorProto.DataType.DOUBLE:\n          array = tensorProto.doubleData!;\n          break;\n        case onnx.TensorProto.DataType.UINT32:\n        case onnx.TensorProto.DataType.UINT64:\n          array = tensorProto.uint64Data!;\n          break;\n        default:\n          // should never run here\n          throw new Error('unspecific error');\n      }\n\n      if (array === null || array === undefined) {\n        throw new Error('failed to populate data from a tensorproto value');\n      }\n\n      const data = value.data;\n      if (data.length !== array.length) {\n        throw new Error('array length mismatch');\n      }\n\n      for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (Long.isLong(element)) {\n          data[i] = longToNumber(element, tensorProto.dataType);\n        } else {\n          data[i] = element;\n        }\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Construct new Tensor from raw data\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\n   * for other types of tensor.\n   * @param dims the dimensions of the tensor\n   * @param type the type of the tensor\n   */\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\n    return new Tensor(dims, type, undefined, undefined, data);\n  }\n\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\n    if (!ortTensor) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\n        value.data[i] = ortTensor.stringData(i);\n      }\n\n    } else if (\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource = new DataView(\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\n      const elementSize = sizeofProto(ortTensor.dataType());\n      const length = ortTensor.rawDataLength() / elementSize;\n\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\n        dataDest[i] = n;\n      }\n    }\n    return value;\n  }\n}\n\nfunction sizeof(type: Tensor.DataType): number {\n  switch (type) {\n    case 'bool':\n    case 'int8':\n    case 'uint8':\n      return 1;\n    case 'int16':\n    case 'uint16':\n      return 2;\n    case 'int32':\n    case 'uint32':\n    case 'float32':\n      return 4;\n    case 'float64':\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\n  }\n}\n\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.UINT8:\n    case onnx.TensorProto.DataType.INT8:\n    case onnx.TensorProto.DataType.BOOL:\n      return 1;\n    case onnx.TensorProto.DataType.UINT16:\n    case onnx.TensorProto.DataType.INT16:\n      return 2;\n    case onnx.TensorProto.DataType.FLOAT:\n    case onnx.TensorProto.DataType.INT32:\n    case onnx.TensorProto.DataType.UINT32:\n      return 4;\n    case onnx.TensorProto.DataType.INT64:\n    case onnx.TensorProto.DataType.DOUBLE:\n    case onnx.TensorProto.DataType.UINT64:\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\n  return new (dataviewConstructor(type))(dataBuffer);\n}\n\nfunction dataviewConstructor(type: Tensor.DataType) {\n  switch (type) {\n    case 'bool':\n    case 'uint8':\n      return Uint8Array;\n    case 'int8':\n      return Int8Array;\n    case 'int16':\n      return Int16Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'int32':\n      return Int32Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'float32':\n      return Float32Array;\n    case 'float64':\n      return Float64Array;\n    default:\n      // should never run to here\n      throw new Error('unspecified error');\n  }\n}\n\n// convert a long number to a 32-bit integer (cast-down)\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  // INT64, UINT32, UINT64\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\n      throw new TypeError('int64 is not supported');\n    }\n  } else if (\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\n      throw new TypeError('uint64 is not supported');\n    }\n  } else {\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\n  }\n\n  return i.toNumber();\n}\n\n// read one value from TensorProto\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.BOOL:\n    case onnx.TensorProto.DataType.UINT8:\n      return view.getUint8(byteOffset);\n    case onnx.TensorProto.DataType.INT8:\n      return view.getInt8(byteOffset);\n    case onnx.TensorProto.DataType.UINT16:\n      return view.getUint16(byteOffset, true);\n    case onnx.TensorProto.DataType.INT16:\n      return view.getInt16(byteOffset, true);\n    case onnx.TensorProto.DataType.FLOAT:\n      return view.getFloat32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT32:\n      return view.getInt32(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT32:\n      return view.getUint32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\n    case onnx.TensorProto.DataType.DOUBLE:\n      return view.getFloat64(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\n    default:\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\n\n// check the inputs shape before running an OP.\n// return true when the inputs pass the check\n// return false when the inputs do not fit the requirement\n// throw exception when fatal error or not implemented\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\n  if (!inputs || inputs.length !== expectedDimensions.length) {\n    return false;\n  }\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Evaluates the given expression and asserts error message if condition is unmet.\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport class ArrayUtil {\n  /**\n   * Verifies if 2 input arrays contain the same elements.\n   * @param n1 Array 1\n   * @param n2 Array 2\n   * @returns Whether these 2 are equal\n   */\n  static arraysEqual(\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array,\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport class MatMulUtil {\n  /**\n   * Fix the input shapes for MatMul operation if they need fixing\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\n   */\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\n      [readonly number[], readonly number[]] {\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\n    // removed.\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\n\n    // If the second argument is 1-D, it is promoted to a matrix by appending\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\n    // removed.\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\n\n    return [a, b];\n  }\n\n  /**\n   * Fix the output shape computed for MatMul operation if it needs fixing\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\n   * This will be mutated.\n   * @param aRank The rank of tensor A.\n   * @param bRank The rank of tensor B.\n   */\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\n    // Remove prepended dimension if first input is 1d\n    if (aRank === 1) {\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\n      outputShape.splice(outputShape.length - 2, 1);\n    }\n    // Remove appended dimension if second input is 1d\n    if (bRank === 1) {\n      outputShape.pop();\n    }\n  }\n\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcas\n   * @returns The calculated indices that maps to the original tensor.\n   */\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\n    // length as the broadcasted shape, and for each dimension the index should\n    // not be out of range.\n    const originalIndices = new Array(originalShape.length);\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\n    return originalIndices;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcast\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\n   *     mutated).\n   */\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\n    // broadcasted shape, and for each dimension the index should not be out of range.\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\n    const dimOffset = broadcastedIndices.length - originalShape.length;\n    for (let i = 0; i < originalShape.length; i++) {\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\n    }\n  }\n\n  /**\n   * Perform the broadcasting operation on the specific operator\n   * @param a The input tensor A\n   * @param b The input tensor B\n   * @param op The operator lambda function\n   * @param inplace Whether to write the result back to A.\n   * @returns The result tensor, or undefined if input not broadcastable.\n   */\n  static calc(\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\n      resultType?: Tensor.DataType): Tensor|undefined {\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\n\n    if (outputShape) {\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\n        // B is not broadcastable to A, failed to calculate inplace.\n        return undefined;\n      }\n\n      const size = ShapeUtil.size(outputShape);\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\n\n      // both inputs are scalars\n      if (outputShape.length === 0) {\n        c.set([], op(a.get([]), b.get([])));\n      }\n\n      // atleast one input is a non-scalar\n      else {\n        const outputIndices = new Array<number>(outputShape.length);\n        const originalIndicesA = new Array(a.dims.length);\n        const originalIndicesB = new Array(b.dims.length);\n        let valA: string|number = 0;\n        let valB: string|number = 0;\n        let isAScalar = false;\n        let isBScalar = false;\n        if (a.dims.length === 0) {\n          valA = a.get([]);\n          isAScalar = true;\n        }\n        if (b.dims.length === 0) {\n          valB = b.get([]);\n          isBScalar = true;\n        }\n        let rest: number;\n        for (let i = 0; i < size; i++) {\n          // traversal indices\n          rest = i;\n          for (let j = outputShape.length - 1; j >= 0; j--) {\n            outputIndices[j] = rest % outputShape[j];\n            rest = Math.floor(rest / outputShape[j]);\n          }\n\n          if (!isAScalar) {\n            // map outputIndices (which is actually broadcasted) to the originalIndices\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\n            valA = a.get(originalIndicesA);\n          }\n          if (!isBScalar) {\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\n            valB = b.get(originalIndicesB);\n          }\n\n          c.set(outputIndices, op(valA, valB));\n        }\n      }\n\n      return c;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determine the broadcasted dims in input shape based on the given output shape.\n   * Note that this function only returns the broadcasted dims.\n   * @param inputShape The input shape\n   * @param outputShape The output shape\n   * @returns The broadcasted dims in input shape.\n   */\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\n    const inRank = inputShape.length;\n    const dims: number[] = [];\n    for (let i = 0; i < inRank; i++) {\n      const dim = inRank - 1 - i;\n      const a = inputShape[dim] || 1;\n      const b = outputShape[outputShape.length - 1 - i] || 1;\n      if (b > 1 && a === 1) {\n        dims.unshift(dim);\n      }\n    }\n    return dims;\n  }\n}\n\n// copy array helper\n// mimics memcpy as much as possible\nexport function arrayCopyHelper(\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n    blockSize: number) {\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\n    throw new Error('sourceIndex out of bounds');\n  }\n  if (targetIndex < 0 || targetIndex >= target.length) {\n    throw new Error('targetIndex out of bounds');\n  }\n  if (sourceIndex + blockSize > source.length) {\n    throw new Error('source indices to be copied are outside bounds');\n  }\n  if (targetIndex + blockSize > target.length) {\n    throw new Error('target array is too small to hold result');\n  }\n\n  for (let offset = 0; offset < blockSize; offset++) {\n    target[targetIndex + offset] = source[sourceIndex + offset];\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\nexport class ProtoUtil {\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\n    switch (typeProto) {\n      case onnx.TensorProto.DataType.INT8:\n        return 'int8';\n      case onnx.TensorProto.DataType.UINT8:\n        return 'uint8';\n      case onnx.TensorProto.DataType.BOOL:\n        return 'bool';\n      case onnx.TensorProto.DataType.INT16:\n        return 'int16';\n      case onnx.TensorProto.DataType.UINT16:\n        return 'uint16';\n      case onnx.TensorProto.DataType.INT32:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT32:\n        return 'uint32';\n      case onnx.TensorProto.DataType.FLOAT:\n        return 'float32';\n      case onnx.TensorProto.DataType.DOUBLE:\n        return 'float64';\n      case onnx.TensorProto.DataType.STRING:\n        return 'string';\n\n      // For INT64/UINT64, reduce their value to 32-bits.\n      // Should throw exception when overflow\n      case onnx.TensorProto.DataType.INT64:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT64:\n        return 'uint32';\n\n      default:\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\n    }\n  }\n\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\n    switch (type) {\n      case 'int8':\n        return onnx.TensorProto.DataType.INT8;\n      case 'uint8':\n        return onnx.TensorProto.DataType.UINT8;\n      case 'bool':\n        return onnx.TensorProto.DataType.BOOL;\n      case 'int16':\n        return onnx.TensorProto.DataType.INT16;\n      case 'uint16':\n        return onnx.TensorProto.DataType.UINT16;\n      case 'int32':\n        return onnx.TensorProto.DataType.INT32;\n      case 'uint32':\n        return onnx.TensorProto.DataType.UINT32;\n      case 'float32':\n        return onnx.TensorProto.DataType.FLOAT;\n      case 'float64':\n        return onnx.TensorProto.DataType.DOUBLE;\n      case 'string':\n        return onnx.TensorProto.DataType.STRING;\n      case 'int64':\n        return onnx.TensorProto.DataType.INT64;\n      case 'uint64':\n        return onnx.TensorProto.DataType.UINT64;\n\n      default:\n        throw new Error(`unsupported data type: ${type}`);\n    }\n  }\n\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\n    // get rid of Long type for dims\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\n  }\n\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\n    return {\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\n    };\n  }\n\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\n    const dims = [];\n    for (let i = 0; i < tensor.dimsLength(); i++) {\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\n    }\n    return dims;\n  }\n\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\n    const attributes = [];\n    for (let i = 0; i < node.attributesLength(); i++) {\n      attributes.push(node.attributes(i)!);\n    }\n    return attributes;\n  }\n}\n\nexport class LongUtil {\n  static longToNumber(n: Long|flatbuffers.Long|number) {\n    if (Long.isLong(n)) {\n      return n.toNumber();\n    } else if (n instanceof flatbuffers.Long) {\n      return Long.fromValue({low: n.low, high: n.high, unsigned: true}).toNumber();\n    }\n    return n;\n  }\n  static isLong(n: unknown) {\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\n  }\n}\n\nexport class ShapeUtil {\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  // `axis` inclusive\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  // `axis` exclusive\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  static transpose(dims: readonly number[]): readonly number[] {\n    const copy = dims.slice();\n    return copy.reverse();\n  }\n\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\n    if (axis === undefined) {\n      axis = indices.length;\n    }\n    let offset = 0;\n    for (let i = 0; i < axis; ++i) {\n      offset += strides[i] * indices[i];\n    }\n    return offset;\n  }\n\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\n    const rank = strides.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [offset * strides[0]];\n    }\n    const indices: number[] = new Array(strides.length);\n    for (let i = 0; i < indices.length - 1; ++i) {\n      indices[i] = Math.floor(offset / strides[i]);\n      offset -= indices[i] * strides[i];\n    }\n    indices[indices.length - 1] = offset;\n    return indices;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\n  }\n\n  // Increment an index into a tensor (in lexicographic\n  // ordering), wrapping around the specified upper_bound.\n  /**\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\n   * @param index Given index to increment (Will be mutated)\n   * @param dims The dimensions of the tensor for which the given index corresponds to\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\n   */\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\n    if (dims.length === 0 || index.length === 0) {\n      throw new Error('Index incrementing unsupported for scalar Tensor');\n    }\n    if (axisToIncrementOn === undefined) {\n      axisToIncrementOn = dims.length;\n    } else {\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\n        throw new Error('Incorrect axis to increment on');\n      }\n    }\n\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\n      index[k]++;\n      if (index[k] < dims[k]) {\n        break;\n      }\n      index[k] = 0;\n    }\n  }\n\n  /**\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\n   * Used in Reshape\n   * @param originalDims Original Shape array\n   * @param shapeHints array containing values to compute the new dimensions\n   * For example:\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\n   * https://github.com/onnx/onnx/blob/master/docs/Operators.md#Reshape\n   */\n\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\n    // reshape to a Scalar Tensor\n    if (shapeHints.length === 0) {\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\n        return [];\n      } else {\n        throw new Error('cannot reshape to a scalar Tensor');\n      }\n    }\n\n    const nDims = shapeHints.length;\n    const reshapedDims = new Array<number>(nDims);\n    let unknownDimension = -1;\n    let newTensorSize = 1;\n    for (let i = 0; i < nDims; i++) {\n      if (shapeHints[i] < -1) {\n        throw new Error('a dimension in shape hints cannot be less than -1');\n      }\n      if (shapeHints[i] === -1) {\n        if (unknownDimension !== -1) {\n          throw new Error('at most one dimension in shape hints can be -1');\n        }\n        unknownDimension = i;\n      } else {\n        if (shapeHints[i] === 0) {\n          if (i >= originalDims.length) {\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\n          }\n          reshapedDims[i] = originalDims[i];\n        } else {\n          reshapedDims[i] = shapeHints[i];\n        }\n        newTensorSize *= reshapedDims[i];\n      }\n    }\n\n    const oldTensorSize = ShapeUtil.size(originalDims);\n    if (unknownDimension !== -1) {\n      if (oldTensorSize % newTensorSize !== 0) {\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\n            originalDims}] Output shape: [${shapeHints}]`);\n      }\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\n    }\n    // validate sizes from originalDims and reshapedDims match\n    else {\n      if (newTensorSize !== oldTensorSize) {\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\n      }\n    }\n    return reshapedDims;\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n\n  /**\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\n   * @param dims - input `dims` that needs to be checked\n   */\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\n    if (dims.length > 6) {\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\n    }\n    let size = 1;\n    for (const n of dims) {\n      if (!Number.isInteger(n)) {\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\n      }\n      if (n < 0 || n > 2147483647) {\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\n      }\n      size *= n;\n    }\n    return size;\n  }\n\n  /**\n   * Determines the shape of output tensor y = flatten(x, axis)\n   * @param dims - shape of input tensor\n   * @param axis - flatten axis, in the range [-r, r]\n   */\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\n    if (axis < 0) {\n      axis += dims.length;\n    }\n    const total = dims.reduce((x, y) => x * y, 1);\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\n    const outputDims = [total / right, right];\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = squeeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - squeeze axes\n   */\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>();\n\n    // sanity check\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\n\n    for (let i = 0; i < dims.length; i++) {\n      const inSqueezeList = axes.indexOf(i) >= 0;\n      if (inSqueezeList && dims[i] !== 1) {\n        throw new Error('squeeze an axis of size different than 1');\n      }\n\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\n        outputDims.push(dims[i]);\n      }\n    }\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - unsqueeze axes\n   */\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>(dims.length + axes.length);\n\n    // initialize the array elements to 0\n    outputDims.fill(0);\n\n    // set all axes indices to 1 in outputDims and check for duplicates\n    for (let i = 0; i < axes.length; i++) {\n      const axis = ShapeUtil.normalizeAxis(axes[i], dims.length);\n      if (axis >= outputDims.length) {\n        throw new Error('\\'axes\\' has an out of range axis');\n      }\n      if (outputDims[axis] !== 0) {\n        throw new Error('\\'axes\\' has a duplicate axis');\n      }\n\n      outputDims[axis] = 1;\n    }\n\n    // fill in the zero entries of outputDims with the input tensor's shape\n    let inputDimsIterator = 0;\n    for (let i = 0; i < outputDims.length; i++) {\n      if (outputDims[i] === 0) {\n        outputDims[i] = dims[inputDimsIterator++];\n      }\n    }\n\n    // sanity check assertion. 'inputDimsIterator'\n    // should be equal to the length of 'dims'\n    if (inputDimsIterator !== dims.length) {\n      throw new Error('the unsqueezed dimension could not be established');\n    }\n\n    return outputDims;\n  }\n}\n\n// bunch of helper methods that do a variety of math operations\nexport class MathUtil {\n  // y = (x*x) + y\n  static sqr(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\n    }\n  }\n\n  // y = ax + y\n  static axpy(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, alpha: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\n    }\n  }\n\n  // y = pow(x, b)\n  static powx(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, b: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\n    }\n  }\n\n  // y = x * y\n  static mul(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\n    }\n  }\n}\n\nexport class SplitUtil {\n  /**\n   * Calculates new Shapes from existing one and the splits given along the axis provides\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\n   * @param axis The dimension along which the Tensor will be split\n   * @param splits Offsets for the start of each split\n   */\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\n      [number[][], number[]] {\n    if (split.length === 0) {\n      if (!numOutputs) {\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\n      }\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\n    }\n\n    const shapes: number[][] = [];\n    const offsets = [0];\n    for (let i = 0; i < split.length; ++i) {\n      if (i !== 0) {\n        offsets.push(offsets[i - 1] + split[i - 1]);\n      }\n      const shape = dims.slice();\n      shape[axis] = split[i];\n      shapes.push(shape);\n    }\n    return [shapes, offsets];\n  }\n\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\n    if (numElementsAlongAxis % numOutputs !== 0) {\n      throw new Error('cannot split tensor to equal sized parts');\n    }\n    for (let i = 0; i < numOutputs; ++i) {\n      split.push(numElementsAlongAxis / numOutputs);\n    }\n  }\n}\n\nexport class ReduceUtil {\n  /**\n   * Perform reduce operations on the specific operator\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduce(\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\n      op2: (a: number, b: number) => number): Tensor {\n    const dims = a.dims.slice(0);\n    // if axes is not set, perform reduce on all axes\n    if (axes.length === 0) {\n      dims.forEach((d, ind) => axes.push(ind));\n    }\n    // get a temporary broadcastable output shape\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\n\n    // loop through the output and calculate result one by one\n    const size = ShapeUtil.size(outputDims);\n    const y = new Tensor(outputDims, a.type);\n    const strides = ShapeUtil.computeStrides(outputDims);\n    const inputStrides = ShapeUtil.computeStrides(dims);\n    const indicesY = new Array(dims.length);\n    for (let i = 0; i < size; i++) {\n      const indices = ShapeUtil.offsetToIndices(i, strides);\n      // map index\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\n      y.set(\n          indices,\n          ReduceUtil.calcReduceByAxis(\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\n    }\n\n    if (keepdims) {\n      return y;\n    } else {\n      // keepdims == 0, calculate the expected shape\n      return new Tensor(\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\n    }\n  }\n\n  /**\n   * Perform reduce operations on the specific operator on specific axes\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param dims The input dimension.\n   * @param curAxisInd Index in axes specifying the current dimension along\n   *      which the tensor will be reduced\n   * @param pos The current index of element to perform operation\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduceByAxis(\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\n    let res = 0;\n    if (curAxisInd >= axes.length) {\n      return op1(input[pos]);\n    }\n    const axis = axes[curAxisInd];\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\n    for (let i = 0; i < dims[axis]; i++) {\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\n      pos += step;\n    }\n    return res;\n  }\n\n  /**\n   * Calculate the expected shape of a reduce operation\n   * @param dims The input tensor dimension\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   */\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\n    const outputDims = dims.slice();\n    for (let i = 0; i < axes.length; i++) {\n      if (keepDims) {\n        outputDims[axes[i]] = 1;\n      } else {\n        outputDims[axes[i]] = 0;\n      }\n    }\n    return outputDims.filter(dim => dim !== 0);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      pads: number[]) {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n          autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], kernelShape: number[], pads: number[],\n      autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    // TODO: support dilations for pool operators\n    const dilations = new Array<number>(kernelShape.length).fill(1);\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\nimport {OrtWasmMessage, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initWasm = async(): Promise<void> => {\n  if (isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, (scriptSrc as string).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.initOrt(numThreads, loggingLevel);\n  }\n};\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {createSession, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\n\nlet ortInit: boolean;\n\n\nconst getLogLevel = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async loadModel(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!ortInit) {\n      await initOrt(env.wasm.numThreads!, getLogLevel(env.logLevel!));\n      ortInit = true;\n    }\n\n    [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n};\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    if (options?.graphOptimizationLevel === undefined) {\n      sessionOptions.graphOptimizationLevel = 'all';\n    }\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel!);\n\n    if (options?.enableCpuMemArena === undefined) {\n      sessionOptions.enableCpuMemArena = true;\n    }\n\n    if (options?.enableMemPattern === undefined) {\n      sessionOptions.enableMemPattern = true;\n    }\n\n    if (options?.executionMode === undefined) {\n      sessionOptions.executionMode = 'sequential';\n    }\n    const executionMode = getExecutionMode(sessionOptions.executionMode!);\n\n    let logIdDataOffset = 0;\n    if (options?.logId !== undefined) {\n      logIdDataOffset = allocWasmString(options.logId, allocs);\n    }\n\n    if (options?.logSeverityLevel === undefined) {\n      sessionOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      sessionOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.enableProfiling === undefined) {\n      sessionOptions.enableProfiling = false;\n    }\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena!, !!sessionOptions.enableMemPattern!, executionMode,\n        !!sessionOptions.enableProfiling!, 0, logIdDataOffset, sessionOptions.logSeverityLevel!,\n        sessionOptions.logVerbosityLevel!);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    if (options?.executionProviders) {\n      for (const ep of options.executionProviders) {\n        const name = typeof ep === 'string' ? ep : ep.name;\n        if (name === 'webnn') {\n          let devicePreference = 0;\n          let powerPreference = 0;\n          if (typeof ep !== 'string') {\n            const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n            if (webnnOptions?.devicePreference) {\n              devicePreference = webnnOptions.devicePreference;\n            }\n            if (webnnOptions?.powerPreference) {\n              powerPreference = webnnOptions.powerPreference;\n            }\n          }\n          const preferenceValues = [0, 1, 2];\n          if (!preferenceValues.includes(devicePreference)) {\n            throw new Error(\"Invalid devicePerference value, it shoule be one of {0, 1, 2}\");\n          }\n          if (!preferenceValues.includes(powerPreference)) {\n            throw new Error(\"Invalid powerPreference value, it shoule be one of {0, 1, 2}\");\n          }\n          const devicePreferenceNames = [\"Default\", \"GPU\", \"CPU\"];\n          const powerPreferenceNames = [\"Default\", \"High-performance\", \"Low-power\"];\n          console.log(`webnn device preference: ${devicePreferenceNames[devicePreference]}`);\n          console.log(`webnn power preference: ${powerPreferenceNames[powerPreference]}`);\n          if (wasm._OrtSessionOptionsAppendExecutionProviderWebNN(sessionOptionsHandle, devicePreference, powerPreference) !== 0) {\n            throw new Error(`Can't append WebNN execution provider`);\n          }\n          break;\n        }\n      }\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\nimport {SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions: Array<SessionMetadata|undefined> = [];\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n      const modelDataOffset = wasm._malloc(model.byteLength);\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        wasm.HEAPU8.set(model, modelDataOffset);\n        sessionHandle = wasm._OrtCreateSession(modelDataOffset, model.byteLength, sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelDataOffset);\n        wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.push([sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [activeSessions.length - 1, inputNames, outputNames];\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions[sessionId];\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions[sessionId] = undefined;\n};\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nconst enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n\nconst tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\nconst tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int32';\n    case DataType.uint64:\n      return 'uint32';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\nconst numericTensorTypeToTypedArray = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * perform inference run\n */\nexport const run =\n    (sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n     options: InferenceSession.RunOptions): SerializableTensor[] => {\n      const wasm = getInstance();\n      const session = activeSessions[sessionId];\n      if (!session) {\n        throw new Error('invalid session id');\n      }\n      const sessionHandle = session[0];\n      const inputNamesUTF8Encoded = session[1];\n      const outputNamesUTF8Encoded = session[2];\n\n      const inputCount = inputIndices.length;\n      const outputCount = outputIndices.length;\n\n      let runOptionsHandle = 0;\n      let runOptionsAllocs: number[] = [];\n\n      const inputValues: number[] = [];\n      const inputAllocs: number[] = [];\n\n      try {\n        [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n        // create input tensors\n        for (let i = 0; i < inputCount; i++) {\n          const dataType = inputs[i][0];\n          const dims = inputs[i][1];\n          const data = inputs[i][2];\n\n          let dataOffset: number;\n          let dataByteLength: number;\n\n          if (Array.isArray(data)) {\n            // string tensor\n            dataByteLength = 4 * data.length;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < data.length; i++) {\n              if (typeof data[i] !== 'string') {\n                throw new TypeError(`tensor data at index ${i} is not a string`);\n              }\n              wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n            }\n          } else {\n            dataByteLength = data.byteLength;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n            if (tensor === 0) {\n              throw new Error('Can\\'t create a tensor');\n            }\n            inputValues.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        }\n\n        const beforeRunStack = wasm.stackSave();\n        const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n        const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n        const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n        const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n        try {\n          let inputValuesIndex = inputValuesOffset / 4;\n          let inputNamesIndex = inputNamesOffset / 4;\n          let outputValuesIndex = outputValuesOffset / 4;\n          let outputNamesIndex = outputNamesOffset / 4;\n          for (let i = 0; i < inputCount; i++) {\n            wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n            wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n          }\n          for (let i = 0; i < outputCount; i++) {\n            wasm.HEAPU32[outputValuesIndex++] = 0;\n            wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n          }\n\n          // support RunOptions\n          let errorCode = wasm._OrtRun(\n              sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n              outputValuesOffset, runOptionsHandle);\n\n          const output: SerializableTensor[] = [];\n\n          if (errorCode === 0) {\n            for (let i = 0; i < outputCount; i++) {\n              const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n              const beforeGetTensorDataStack = wasm.stackSave();\n              // stack allocate 4 pointer value\n              const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n              let type: Tensor.Type|undefined, dataOffset = 0;\n              try {\n                errorCode = wasm._OrtGetTensorData(\n                    tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n                if (errorCode !== 0) {\n                  throw new Error(`Can't get a tensor data. error code = ${errorCode}`);\n                }\n                let tensorDataIndex = tensorDataOffset / 4;\n                const dataType = wasm.HEAPU32[tensorDataIndex++];\n                dataOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n                const dims = [];\n                for (let i = 0; i < dimsLength; i++) {\n                  dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n                }\n                wasm._OrtFree(dimsOffset);\n\n                const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n                type = tensorDataTypeEnumToString(dataType);\n                if (type === 'string') {\n                  const stringData: string[] = [];\n                  let dataIndex = dataOffset / 4;\n                  for (let i = 0; i < size; i++) {\n                    const offset = wasm.HEAPU32[dataIndex++];\n                    const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                    stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n                  }\n                  output.push([type, dims, stringData]);\n                } else {\n                  const typedArrayConstructor = numericTensorTypeToTypedArray(type);\n                  const data = new typedArrayConstructor(size);\n                  new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                      .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n                  output.push([type, dims, data]);\n                }\n              } finally {\n                wasm.stackRestore(beforeGetTensorDataStack);\n                if (type === 'string' && dataOffset) {\n                  wasm._free(dataOffset);\n                }\n                wasm._OrtReleaseTensor(tensor);\n              }\n            }\n          }\n\n          if (errorCode === 0) {\n            return output;\n          } else {\n            throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n          }\n        } finally {\n          wasm.stackRestore(beforeRunStack);\n        }\n      } finally {\n        inputValues.forEach(wasm._OrtReleaseTensor);\n        inputAllocs.forEach(wasm._free);\n\n        wasm._OrtReleaseRunOptions(runOptionsHandle);\n        runOptionsAllocs.forEach(wasm._free);\n      }\n    };\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions[sessionId];\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\nimport ortWasmFactoryThreaded from './binding/ort-wasm-threaded.js';\nimport ortWasmFactory from './binding/ort-wasm.js';\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n    return WebAssembly.validate(new Uint8Array(\n        [0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 9, 1, 7, 0, 65, 0, 253, 15, 26, 11]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPrefixOverride = typeof flags.wasmPaths === 'string' ? flags.wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(false, useThreads);\n  const wasmOverrideFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof flags.wasmPaths === 'object' ? flags.wasmPaths[wasmOverrideFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (fileName.endsWith('.worker.js') && typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName === wasmFileName) {\n          const prefix: string = wasmPrefixOverride ?? scriptDirectory;\n          return wasmPathOverride ?? prefix + wasmOverrideFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode =\n            `var ortWasmThreaded=(function(){var _scriptDir;return ${ortWasmFactoryThreaded.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nimport worker from \"!!../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.9.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n!function(){var e={474:function(e,t,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||__filename,function(e){function t(){return R.buffer!=F&&K(R.buffer),G}function r(){return R.buffer!=F&&K(R.buffer),U}function i(){return R.buffer!=F&&K(R.buffer),L}function a(){return R.buffer!=F&&K(R.buffer),W}function o(){return R.buffer!=F&&K(R.buffer),N}function u(){return R.buffer!=F&&K(R.buffer),H}var c,s,f;e=e||{},c||(c=void 0!==e?e:{}),c.ready=new Promise((function(e,t){s=e,f=t}));var l,d={};for(l in c)c.hasOwnProperty(l)&&(d[l]=c[l]);var p=\\\"./this.program\\\";function h(e,t){throw t}var g,m,b,v,y,w=\\\"object\\\"==typeof window,_=\\\"function\\\"==typeof importScripts,O=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,A=c.ENVIRONMENT_IS_PTHREAD||!1,E=\\\"\\\";function S(e){return c.locateFile?c.locateFile(e,E):E+e}if(O){if(E=_?n(622).dirname(E)+\\\"/\\\":__dirname+\\\"/\\\",g=function(e,t){return v||(v=n(747)),y||(y=n(622)),e=y.normalize(e),v.readFileSync(e,t?null:\\\"utf8\\\")},b=function(e){return(e=g(e,!0)).buffer||(e=new Uint8Array(e)),B(e.buffer),e},m=function(e,t,r){v||(v=n(747)),y||(y=n(622)),e=y.normalize(e),v.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){if(!(e instanceof vn))throw e})),process.on(\\\"unhandledRejection\\\",de),h=function(e,t){if(oe())throw process.exitCode=e,t;process.exit(e)},c.inspect=function(){return\\\"[Emscripten Module object]\\\"},void 0===global.Worker){var T;try{T=n(13)}catch(e){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=T.Worker}}else(w||_)&&(_?E=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(E=document.currentScript.src),_scriptDir&&(E=_scriptDir),E=0!==E.indexOf(\\\"blob:\\\")?E.substr(0,E.lastIndexOf(\\\"/\\\")+1):\\\"\\\",O?(g=function(e,t){return v||(v=n(747)),y||(y=n(622)),e=y.normalize(e),v.readFileSync(e,t?null:\\\"utf8\\\")},b=function(e){return(e=g(e,!0)).buffer||(e=new Uint8Array(e)),B(e.buffer),e},m=function(e,t,r){v||(v=n(747)),y||(y=n(622)),e=y.normalize(e),v.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))}):(g=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},_&&(b=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),m=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));O&&\\\"undefined\\\"==typeof performance&&(global.performance=n(630).performance);var x,M,k=c.print||console.log.bind(console),D=c.printErr||console.warn.bind(console);for(l in d)d.hasOwnProperty(l)&&(c[l]=d[l]);d=null,c.thisProgram&&(p=c.thisProgram),c.quit&&(h=c.quit),c.wasmBinary&&(M=c.wasmBinary);var P=c.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&de(\\\"no native wasm support detected\\\");var R,C,z,j=!1;function B(e,t){e||de(\\\"Assertion failed: \\\"+t)}function I(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var F,G,U,L,W,N,H,Y=\\\"undefined\\\"!=typeof TextDecoder?new I(\\\"utf8\\\"):void 0;function q(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&Y)return Y.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var i=e[t++];if(128&i){var a=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function V(e,t){return e?q(r(),e,t):\\\"\\\"}function X(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=r)break;t[n++]=o}else{if(2047>=o){if(n+1>=r)break;t[n++]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;t[n++]=224|o>>12}else{if(n+3>=r)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63}t[n++]=128|o>>6&63}t[n++]=128|63&o}}return t[n]=0,n-i}function J(e,t,n){return X(e,r(),t,n)}function Q(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function Z(e){var n=Q(e)+1,r=Yt(n);return r&&X(e,t(),r,n),r}function K(e){F=e,c.HEAP8=G=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=L=new Int32Array(e),c.HEAPU8=U=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=W=new Uint32Array(e),c.HEAPF32=N=new Float32Array(e),c.HEAPF64=H=new Float64Array(e)}\\\"undefined\\\"!=typeof TextDecoder&&new I(\\\"utf-16le\\\"),A&&(F=c.buffer);var $=c.INITIAL_MEMORY||16777216;if(A)R=c.wasmMemory,F=c.buffer;else if(c.wasmMemory)R=c.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:$/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw D(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),O&&console.log(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\\\"),Error(\\\"bad memory\\\");R&&(F=R.buffer),$=F.byteLength,K(F);var ee,te=[],ne=[],re=[],ie=[],ae=0;function oe(){return P||0<ae}function ue(){var e=c.preRun.shift();te.unshift(e)}var ce,se=0,fe=null,le=null;function de(e){throw c.onAbort&&c.onAbort(e),B(!A),D(e),j=!0,z=1,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),f(e),e}function pe(){return ce.startsWith(\\\"data:application/octet-stream;base64,\\\")}function he(){var e=ce;try{if(e==ce&&M)return new Uint8Array(M);if(b)return b(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){de(e)}}c.preloadedImages={},c.preloadedAudios={},ce=\\\"ort-wasm-threaded.wasm\\\",pe()||(ce=S(ce));var ge={1000260:function(){throw\\\"Canceled!\\\"}};function me(e){for(;0<e.length;){var t=e.shift();if(\\\"function\\\"==typeof t)t(c);else{var n=t.Rc;\\\"number\\\"==typeof n?void 0===t.jc?ee.get(n)():ee.get(n)(t.jc):n(void 0===t.jc?null:t.jc)}}}function be(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var r=Atomics.load(i(),bn>>2),a=0;if(r==e&&Atomics.compareExchange(i(),bn>>2,r,0)==r&&(a=1,0>=--n))return 1;if(0<=(e=Atomics.notify(i(),e>>2,n)))return e+a;throw\\\"Atomics.notify returned an unexpected value \\\"+e}function ve(e){if(A)throw\\\"Internal Error! cleanupThread() can only ever be called from main application thread!\\\";if(!e)throw\\\"Internal Error! Null pthread_ptr in cleanupThread!\\\";var t=we.dc[e];t&&(i()[e+12>>2]=0,we.vc(t.worker))}c._emscripten_futex_wake=be;var ye,we={hc:[],fc:[],Dc:[],Dd:function(){},Vc:function(){for(var e=Yt(228),t=0;57>t;++t)a()[e/4+t]=0;i()[e+12>>2]=e,t=e+152,i()[t>>2]=t;var n=Yt(512);for(t=0;128>t;++t)a()[n/4+t]=0;Atomics.store(a(),e+100>>2,n),Atomics.store(a(),e+40>>2,e),an(e,!_,1),Qt(e)},Wc:function(){we.receiveObjectTransfer=we.bd,we.threadInit=we.nd,we.threadCancel=we.md,we.threadExit=we.Lc,we.setExitStatus=we.dd},dc:{},Cc:[],Ic:function(){for(;0<we.Cc.length;)we.Cc.pop()();un()},Jc:function(e,t){Atomics.store(a(),e+56>>2,1),Atomics.store(a(),e+60>>2,0),we.Ic(),Atomics.store(a(),e+4>>2,t),Atomics.store(a(),e+0>>2,1),be(e+0,2147483647),an(0,0,0)},dd:function(e){z=e},Lc:function(e){var t=Xt();t&&(we.Jc(t,e),A&&postMessage({cmd:\\\"exit\\\"}))},md:function(){we.Jc(Xt(),-1),postMessage({cmd:\\\"cancelDone\\\"})},Kc:function(){for(var e in we.dc){var t=we.dc[e];t&&t.worker&&we.vc(t.worker)}for(we.dc={},e=0;e<we.hc.length;++e){var n=we.hc[e];n.terminate()}for(we.hc=[],e=0;e<we.fc.length;++e)t=(n=we.fc[e]).cc,we.Ac(t),n.terminate();we.fc=[]},Ac:function(e){if(e){if(e.ec){var t=i()[e.ec+100>>2];i()[e.ec+100>>2]=0,Vt(t),Vt(e.ec)}e.ec=0,e.zc&&e.ic&&Vt(e.ic),e.ic=0,e.worker&&(e.worker.cc=null)}},vc:function(e){we.cd((function(){delete we.dc[e.cc.ec],we.hc.push(e),we.fc.splice(we.fc.indexOf(e),1),we.Ac(e.cc),e.cc=void 0}))},cd:function(e){i()[mn>>2]=0;try{e()}finally{i()[mn>>2]=1}},bd:function(){},nd:function(){for(var e in we.Dc)we.Dc[e]()},Yc:function(e,t){e.onmessage=function(n){var r=n.data,o=r.cmd;if(e.cc&&(we.Pc=e.cc.ec),r.targetThread&&r.targetThread!=Xt()){var u=we.dc[r.Jd];u?u.worker.postMessage(n.data,r.transferList):D('Internal error! Worker sent a message \\\"'+o+'\\\" to target pthread '+r.targetThread+\\\", but that thread no longer exists!\\\")}else if(\\\"processQueuedMainThreadWork\\\"===o)$t();else if(\\\"spawnThread\\\"===o)Ee(n.data);else if(\\\"cleanupThread\\\"===o)ve(r.thread);else if(\\\"killThread\\\"===o){if(n=r.thread,A)throw\\\"Internal Error! killThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in killThread!\\\";i()[n+12>>2]=0,r=we.dc[n],delete we.dc[n],r.worker.terminate(),we.Ac(r),we.fc.splice(we.fc.indexOf(r.worker),1),r.worker.cc=void 0}else if(\\\"cancelThread\\\"===o){if(n=r.thread,A)throw\\\"Internal Error! cancelThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in cancelThread!\\\";we.dc[n].worker.postMessage({cmd:\\\"cancel\\\"})}else if(\\\"loaded\\\"===o)e.loaded=!0,t&&t(e),e.pc&&(e.pc(),delete e.pc);else if(\\\"print\\\"===o)k(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"printErr\\\"===o)D(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"alert\\\"===o)alert(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"exit\\\"===o)e.cc&&Atomics.load(a(),e.cc.ec+64>>2)&&we.vc(e);else if(\\\"exitProcess\\\"===o)try{wn(r.returnCode)}catch(e){if(e instanceof vn)return;throw e}else\\\"cancelDone\\\"===o?we.vc(e):\\\"objectTransfer\\\"!==o&&(\\\"setimmediate\\\"===n.data.target?e.postMessage(n.data):D(\\\"worker sent an unknown command \\\"+o));we.Pc=void 0},e.onerror=function(e){D(\\\"pthread sent an error! \\\"+e.filename+\\\":\\\"+e.lineno+\\\": \\\"+e.message)},O&&void 0!==e.on&&(e.on(\\\"message\\\",(function(t){e.onmessage({data:t})})),e.on(\\\"error\\\",(function(t){e.onerror(t)})),e.on(\\\"exit\\\",(function(){}))),e.postMessage({cmd:\\\"load\\\",urlOrBlob:c.mainScriptUrlOrBlob||_scriptDir,wasmMemory:R,wasmModule:C})},Mc:function(){var e=S(\\\"ort-wasm-threaded.worker.js\\\");we.hc.push(new Worker(e))},Sc:function(){return 0==we.hc.length&&(we.Mc(),we.Yc(we.hc[0])),we.hc.pop()},td:function(e){for(e=performance.now()+e;performance.now()<e;);}};function _e(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return i()[qt()>>2]=28,-1;e=ye()}return i()[t>>2]=e/1e3|0,i()[t+4>>2]=e%1e3*1e6|0,0}function Oe(e,t){if(A)return Ve(1,1,e,t);re.unshift({Rc:e,jc:t})}function Ae(e){this.nc=e-16,this.kd=function(e){i()[this.nc+4>>2]=e},this.gd=function(e){i()[this.nc+8>>2]=e},this.hd=function(){i()[this.nc>>2]=0},this.ed=function(){t()[this.nc+12>>0]=0},this.jd=function(){t()[this.nc+13>>0]=0},this.Tc=function(e,t){this.kd(e),this.gd(t),this.hd(),this.ed(),this.jd()}}function Ee(e){if(A)throw\\\"Internal Error! spawnThread() can only ever be called from main application thread!\\\";var t=we.Sc();if(!t)return 6;if(void 0!==t.cc)throw\\\"Internal error!\\\";if(!e.uc)throw\\\"Internal error, no pthread ptr!\\\";we.fc.push(t);for(var n=Yt(512),r=0;128>r;++r)i()[n+4*r>>2]=0;var o=e.ic+e.kc,u=(r=we.dc[e.uc]={worker:t,ic:e.ic,kc:e.kc,zc:e.zc,ec:e.uc}).ec>>2;Atomics.store(a(),u+16,e.detached),Atomics.store(a(),u+25,n),Atomics.store(a(),u+10,r.ec),Atomics.store(a(),u+20,e.kc),Atomics.store(a(),u+19,o),Atomics.store(a(),u+26,e.kc),Atomics.store(a(),u+28,o),Atomics.store(a(),u+29,e.detached),n=on()+40,Atomics.store(a(),u+43,n),t.cc=r;var c={cmd:\\\"run\\\",start_routine:e.ld,arg:e.jc,threadInfoStruct:e.uc,stackBase:e.ic,stackSize:e.kc};return t.pc=function(){c.time=performance.now(),t.postMessage(c,e.sd)},t.loaded&&(t.pc(),delete t.pc),0}function Se(e,n,r){if(0>=e||e>t().length||1&e)return-28;if(w){if(Atomics.load(i(),e>>2)!=n)return-6;var a=performance.now();for(r=a+r,Atomics.exchange(i(),bn>>2,e);;){if((a=performance.now())>r)return Atomics.exchange(i(),bn>>2,0),-73;if(0==(a=Atomics.exchange(i(),bn>>2,0)))break;if($t(),Atomics.load(i(),e>>2)!=n)return-6;Atomics.exchange(i(),bn>>2,e)}return 0}if(\\\"timed-out\\\"===(e=Atomics.wait(i(),e>>2,n,r)))return-73;if(\\\"not-equal\\\"===e)return-6;if(\\\"ok\\\"===e)return 0;throw\\\"Atomics.wait returned an unexpected value \\\"+e}function Te(){O||_||(x||(x={}),x[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]||(x[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]=1,D(\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\")))}c.establishStackSpace=function(e,t){hn(e,t),dn(e)},c.invokeEntryPoint=function(e,t){return ee.get(e)(t)},ye=O?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:A?function(){return performance.now()-c.__performance_now_clock_drift}:function(){return performance.now()};var xe={},Me=[null,[],[]];function ke(e,t){var n=Me[e];0===t||10===t?((1===e?k:D)(q(n,0)),n.length=0):n.push(t)}var De={};function Pe(e,t){return A?Ve(2,1,e,t):(e=V(e),De.xd(e,t))}function Re(e,t,n){return A?Ve(3,1,e,t,n):0}function Ce(e,t){if(A)return Ve(4,1,e,t)}function ze(e,t,n){if(A)return Ve(5,1,e,t,n)}function je(e,t,n){return A?Ve(6,1,e,t,n):0}function Be(e,t){if(A)return Ve(7,1,e,t)}function Ie(e,t){return A?Ve(8,1,e,t):(e=V(e),De.yd(e,t))}function Fe(e,t,n,i,a,o){if(A)t=Ve(9,1,e,t,n,i,a,o);else if(o<<=12,0!=(16&i)&&0!=e%65536)t=-28;else if(0!=(32&i)){var u=65536*Math.ceil(t/65536);(e=gn(65536,u))?r().fill(0,e,e+u):e=0,e?(xe[e]={$c:e,Xc:t,Nc:!0,fd:a,Gd:n,flags:i,offset:o},t=e):t=-48}else t=-52;return t}function Ge(e,t){if(A)e=Ve(10,1,e,t);else{var n=xe[e];0!==t&&n?(t===n.Xc&&(xe[e]=null,n.Nc&&Vt(n.$c)),e=0):e=-28}return e}function Ue(e,t,n){if(A)return Ve(11,1,e,t,n)}function Le(e,t,n){return A?Ve(12,1,e,t,n):(e=V(e),De.zd(e,t,n))}function We(e){if(A)return Ve(13,1,e)}function Ne(e,t){if(A)return Ve(14,1,e,t)}function He(e){if(A)return Ve(15,1,e)}function Ye(){if(A)return Ve(16,1);de()}var qe=[];function Ve(e,t){for(var n=arguments.length-2,r=ln(),i=pn(8*n),a=i>>3,o=0;o<n;o++){var c=arguments[2+o];u()[a+o]=c}return n=en(e,n,i,t),dn(r),n}var Xe=[],Je=[0,\\\"undefined\\\"!=typeof document?document:0,\\\"undefined\\\"!=typeof window?window:0];function Qe(e){return e=2<e?V(e):e,Je[e]||(\\\"undefined\\\"!=typeof document?document.querySelector(e):void 0)}function Ze(e,t,n){var r=Qe(e);if(!r)return-4;if(r.tc&&(i()[r.tc>>2]=t,i()[r.tc+4>>2]=n),!r.Hc&&r.vd){if(r.tc){r=i()[r.tc+8>>2],e=e?V(e):\\\"\\\";var a=ln(),o=pn(12),u=0;if(e){u=Q(e)+1;var c=Yt(u);J(e,c,u),u=c}return i()[o>>2]=u,i()[o+4>>2]=t,i()[o+8>>2]=n,tn(0,r,657457152,0,u,o),dn(a),1}return-4}return r.Hc&&(r=r.Hc),e=!1,r.sc&&r.sc.rc&&(e=0===(e=r.sc.rc.getParameter(2978))[0]&&0===e[1]&&e[2]===r.width&&e[3]===r.height),r.width=t,r.height=n,e&&r.sc.rc.viewport(0,0,t,n),0}function Ke(e,t,n){return A?Ve(17,1,e,t,n):Ze(e,t,n)}var $e=[\\\"default\\\",\\\"low-power\\\",\\\"high-performance\\\"],et=[\\\"explicit\\\",\\\"same-upper\\\",\\\"same-lower\\\"],tt=[\\\"iohw\\\",\\\"hwoi\\\",\\\"ohwi\\\"],nt=[\\\"oihw\\\",\\\"hwio\\\",\\\"ohwi\\\",\\\"ihwo\\\"],rt=[\\\"nchw\\\",\\\"nhwc\\\"],it=[\\\"nearest-neighbor\\\",\\\"linear\\\"],at=\\\"float32 float16 int32 uint32 int8 uint8\\\".split(\\\" \\\"),ot=[\\\"forward\\\",\\\"backward\\\",\\\"both\\\"],ut=[\\\"zrn\\\",\\\"rzn\\\"],ct=[\\\"floor\\\",\\\"ceil\\\"];function st(e,t){if(0!==e&&0!==t){for(var n=[],r=0;r<e;++r,t+=4)n.push(i()[t>>2]);return n}}function ft(e,t=\\\"float32\\\"){const n=i()[e>>2]+a()[e+8>>2];return e=a()[e+4>>2],B(\\\"float32\\\"===t),new Float32Array(r().buffer,n,e/Float32Array.BYTES_PER_ELEMENT)}function lt(e){return{minValue:o()[e>>2],maxValue:o()[e+4>>2]}}function dt(e){return{alpha:o()[e>>2]}}function pt(e){return{type:at[a()[e>>2]],dimensions:st(a()[e+8>>2],i()[e+4>>2])}}function ht(e){return{windowDimensions:st(a()[e>>2],i()[e+4>>2]),padding:\\\"explicit\\\"===et[i()[e+32>>2]]?st(a()[e+8>>2],i()[e+12>>2]):void 0,strides:st(a()[e+16>>2],i()[e+20>>2]),dilations:st(a()[e+24>>2],i()[e+28>>2]),autoPad:et[i()[e+32>>2]],layout:rt[i()[e+36>>2]],roundingType:ct[i()[e+40>>2]],outputSizes:st(a()[e+44>>2],i()[e+48>>2])}}var gt,mt,bt,vt,yt,wt,_t,Ot,At,Et,St,Tt,xt={};function Mt(){if(!Tt){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:p||\\\"./this.program\\\"};for(e in xt)void 0===xt[e]?delete t[e]:t[e]=xt[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);Tt=n}return Tt}function kt(e,n){if(A)return Ve(18,1,e,n);var r=0;return Mt().forEach((function(a,o){var u=n+r;for(o=i()[e+4*o>>2]=u,u=0;u<a.length;++u)t()[o++>>0]=a.charCodeAt(u);t()[o>>0]=0,r+=a.length+1})),0}function Dt(e,t){if(A)return Ve(19,1,e,t);var n=Mt();i()[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),i()[t>>2]=r,0}function Pt(e){return A?Ve(20,1,e):0}function Rt(e,n){return A?Ve(21,1,e,n):(e=1==e||2==e?2:de(),t()[n>>0]=e,0)}function Ct(e,t,n,r){return A?Ve(22,1,e,t,n,r):(e=De.Bd(e),t=De.Ad(e,t,n),i()[r>>2]=t,0)}function zt(e,t,n,r,i){if(A)return Ve(23,1,e,t,n,r,i)}function jt(e,t,n,a){if(A)return Ve(24,1,e,t,n,a);for(var o=0,u=0;u<n;u++){for(var c=i()[t+8*u>>2],s=i()[t+(8*u+4)>>2],f=0;f<s;f++)ke(e,r()[c+f]);o+=s}return i()[a>>2]=o,0}function Bt(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(A)return Ve(25,1);if(!Bt.Oc){Bt.Oc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var a=r.getTimezoneOffset(),o=Math.max(t,a);i()[fn()>>2]=60*o,i()[sn()>>2]=Number(t!=a),n=e(n),r=e(r),n=Z(n),r=Z(r),a<t?(i()[cn()>>2]=n,i()[cn()+4>>2]=r):(i()[cn()>>2]=r,i()[cn()+4>>2]=n)}}function It(e){return 0==e%4&&(0!=e%100||0==e%400)}function Ft(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Gt=[31,29,31,30,31,30,31,31,30,31,30,31],Ut=[31,28,31,30,31,30,31,31,30,31,30,31];function Lt(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(It(e.getFullYear())?Gt:Ut)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Wt(e,n,r,a){function o(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function u(e,t){return o(e,t,\\\"0\\\")}function c(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function f(e){e=Lt(new Date(e.bc+1900,0,1),e.yc);var t=new Date(e.getFullYear()+1,0,4),n=s(new Date(e.getFullYear(),0,4));return t=s(t),0>=c(n,e)?0>=c(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=i()[a+40>>2];for(var d in a={qd:i()[a>>2],pd:i()[a+4>>2],wc:i()[a+8>>2],qc:i()[a+12>>2],lc:i()[a+16>>2],bc:i()[a+20>>2],xc:i()[a+24>>2],yc:i()[a+28>>2],Kd:i()[a+32>>2],od:i()[a+36>>2],rd:l?V(l):\\\"\\\"},r=V(r),l={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(d,\\\"g\\\"),l[d]);var p=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),h=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(d in l={\\\"%a\\\":function(e){return p[e.xc].substring(0,3)},\\\"%A\\\":function(e){return p[e.xc]},\\\"%b\\\":function(e){return h[e.lc].substring(0,3)},\\\"%B\\\":function(e){return h[e.lc]},\\\"%C\\\":function(e){return u((e.bc+1900)/100|0,2)},\\\"%d\\\":function(e){return u(e.qc,2)},\\\"%e\\\":function(e){return o(e.qc,2,\\\" \\\")},\\\"%g\\\":function(e){return f(e).toString().substring(2)},\\\"%G\\\":function(e){return f(e)},\\\"%H\\\":function(e){return u(e.wc,2)},\\\"%I\\\":function(e){return 0==(e=e.wc)?e=12:12<e&&(e-=12),u(e,2)},\\\"%j\\\":function(e){return u(e.qc+Ft(It(e.bc+1900)?Gt:Ut,e.lc-1),3)},\\\"%m\\\":function(e){return u(e.lc+1,2)},\\\"%M\\\":function(e){return u(e.pd,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.wc&&12>e.wc?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return u(e.qd,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.xc||7},\\\"%U\\\":function(e){var t=new Date(e.bc+1900,0,1),n=0===t.getDay()?t:Lt(t,7-t.getDay());return 0>c(n,e=new Date(e.bc+1900,e.lc,e.qc))?u(Math.ceil((31-n.getDate()+(Ft(It(e.getFullYear())?Gt:Ut,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.bc+1901,0,4),n=s(new Date(e.bc+1900,0,4));t=s(t);var r=Lt(new Date(e.bc+1900,0,1),e.yc);return 0>c(r,n)?\\\"53\\\":0>=c(t,r)?\\\"01\\\":u(Math.ceil((n.getFullYear()<e.bc+1900?e.yc+32-n.getDate():e.yc+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.xc},\\\"%W\\\":function(e){var t=new Date(e.bc,0,1),n=1===t.getDay()?t:Lt(t,0===t.getDay()?1:7-t.getDay()+1);return 0>c(n,e=new Date(e.bc+1900,e.lc,e.qc))?u(Math.ceil((31-n.getDate()+(Ft(It(e.getFullYear())?Gt:Ut,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.bc+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.bc+1900},\\\"%z\\\":function(e){var t=0<=(e=e.od);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.rd},\\\"%%\\\":function(){return\\\"%\\\"}})r.includes(d)&&(r=r.replace(new RegExp(d,\\\"g\\\"),l[d](a)));return(d=function(e){var t=Array(Q(e)+1);return X(e,t,0,t.length),t}(r)).length>n?0:(function(e,n){t().set(e,n)}(d,e),d.length-1)}gt||(gt=gt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},mt=mt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},bt=bt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},vt=vt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},yt=yt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},wt=wt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},_t=_t||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},Ot=Ot||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},At=At||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},Et=Et||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},St=St||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}});var Nt=[null,Oe,Pe,Re,Ce,ze,je,Be,Ie,Fe,Ge,Ue,Le,We,Ne,He,Ye,Ke,kt,Dt,Pt,Rt,Ct,zt,jt,Bt],Ht={h:function(e,t,n,r){de(\\\"Assertion failed: \\\"+V(e)+\\\", at: \\\"+[t?V(t):\\\"unknown filename\\\",n,r?V(r):\\\"unknown function\\\"])},cb:function(e,t){return _e(e,t)},b:function(e){return Yt(e+16)+16},d:function(e,t){return Oe(e,t)},e:function(e,t){we.Cc.push((function(){ee.get(e)(t)}))},c:function(e,t,n){throw new Ae(e).Tc(t,n),e},I:function(e,t,n,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return D(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;if(!e)return D(\\\"pthread_create called with a null thread pointer!\\\"),28;var o=[];if(A&&0===o.length)return Kt(687865856,e,t,n,r);var u=0,c=0;if(t&&-1!=t){var s=i()[t>>2];s+=81920,u=i()[t+8>>2],c=0!==i()[t+12>>2]}else s=2097152;(t=0==u)?u=gn(16,s):B(0<(u-=s));for(var f=Yt(228),l=0;57>l;++l)a()[(f>>2)+l]=0;return i()[e>>2]=f,i()[f+12>>2]=f,e=f+152,i()[e>>2]=e,n={ic:u,kc:s,zc:t,detached:c,ld:n,uc:f,jc:r,sd:o},A?(n.ud=\\\"spawnThread\\\",postMessage(n,o),0):Ee(n)},G:function(e){throw A?we.Lc(e):(we.Ic(),wn(e)),\\\"unwind\\\"},H:function(e,t){return function(e,t){if(!e)return D(\\\"pthread_join attempted on a null thread pointer!\\\"),71;if(A&&Xt()==e)return D(\\\"PThread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(!A&&Zt()==e)return D(\\\"Main thread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(i()[e+12>>2]!==e)return D(\\\"pthread_join attempted on thread \\\"+e+\\\", which does not point to a valid thread, or does not exist anymore!\\\"),71;if(Atomics.load(a(),e+64>>2))return D(\\\"Attempted to join thread \\\"+e+\\\", which was already detached!\\\"),28;for(Te();;){var n=Atomics.load(a(),e+0>>2);if(1==n)return n=Atomics.load(a(),e+4>>2),t&&(i()[t>>2]=n),Atomics.store(a(),e+64>>2,1),A?postMessage({cmd:\\\"cleanupThread\\\",thread:e}):ve(e),0;nn(),A||$t(),Se(e+0,n,A?100:1)}}(e,t)},z:Pe,y:Re,C:Ce,gb:ze,s:function(){return 42},_a:je,A:Be,D:Ie,F:Fe,E:Ge,q:Ue,fb:Le,db:We,t:Ne,eb:He,P:function(e,t){if(e==t)postMessage({cmd:\\\"processQueuedMainThreadWork\\\"});else if(A)postMessage({targetThread:e,cmd:\\\"processThreadQueue\\\"});else{if(!(e=(e=we.dc[e])&&e.worker))return;e.postMessage({cmd:\\\"processThreadQueue\\\"})}return 1},f:Ye,w:_e,Va:function(e,t){return e-t},S:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},m:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},ba:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},N:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Q:function(e,t,n){var a;for(qe.length=0,n>>=2;a=r()[t++];)(a=105>a)&&1&n&&n++,qe.push(a?u()[n++>>1]:i()[n]),++n;return ge[e].apply(null,qe)},Za:Te,n:function(){},k:Se,j:be,B:function(){return 2147483648},i:ye,Xa:function(e,t,n){r().copyWithin(e,t,t+n)},o:function(){return O?n(87).cpus().length:navigator.hardwareConcurrency},L:function(e,t,n){Xe.length=t,n>>=3;for(var r=0;r<t;r++)Xe[r]=u()[n+r];return(0>e?ge[-e-1]:Nt[e]).apply(null,Xe)},Ya:function(e){var t=r().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var n=1;4>=n;n*=2){var i=t*(1+.2/n);i=Math.min(i,e+100663296),0<(i=Math.max(e,i))%65536&&(i+=65536-i%65536);e:{try{R.grow(Math.min(2147483648,i)-F.byteLength+65535>>>16),K(R.buffer);var a=1;break e}catch(e){}a=void 0}if(a)return!0}return!1},M:function(e,t,n){return Qe(e)?Ze(e,t,n):Ke(e,t,n)},v:function(){},K:function(e,t,n){return ae+=1,setTimeout((function(){--ae,function(e){if(!j){try{e()}catch(e){if(e instanceof vn)return;if(\\\"unwind\\\"!==e)throw e&&\\\"object\\\"==typeof e&&e.stack&&D(\\\"exception thrown: \\\"+[e,e.stack]),e}if(!oe())try{A?rn(z):wn(z)}catch(e){if(!(e instanceof vn))throw e}}}((function(){ee.get(e)(n)}))}),t)},O:function(e,t){t>>=2;var n=i()[t+6];return t={alpha:!!i()[t],depth:!!i()[t+1],stencil:!!i()[t+2],antialias:!!i()[t+3],premultipliedAlpha:!!i()[t+4],preserveDrawingBuffer:!!i()[t+5],powerPreference:$e[n],failIfMajorPerformanceCaveat:!!i()[t+7],Zc:i()[t+8],Ed:i()[t+9],Fc:i()[t+10],Qc:i()[t+11],Hd:i()[t+12],Id:i()[t+13]},!(e=Qe(e))||t.Qc?0:function(e,t){e.Gc||(e.Gc=e.getContext,e.getContext=function(t,n){return\\\"webgl\\\"==t==(n=e.Gc(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\\\"webgl\\\",t);return n?function(e,t){var n=Yt(8);i()[n+4>>2]=Xt();var r={Cd:n,attributes:t,version:t.Zc,rc:e};return e.canvas&&(e.canvas.sc=r),(void 0===t.Fc||t.Fc)&&function(e){if(e||(e=void 0),!e.Uc){e.Uc=!0;var t=e.rc;!function(e){var t=e.getExtension(\\\"ANGLE_instanced_arrays\\\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,i){t.drawArraysInstancedANGLE(e,n,r,i)},e.drawElementsInstanced=function(e,n,r,i,a){t.drawElementsInstancedANGLE(e,n,r,i,a)})}(t),function(e){var t=e.getExtension(\\\"OES_vertex_array_object\\\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\\\"WEBGL_draw_buffers\\\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.wd=t.getExtension(\\\"EXT_disjoint_timer_query\\\"),t.Fd=t.getExtension(\\\"WEBGL_multi_draw\\\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\\\"lose_context\\\")||e.includes(\\\"debug\\\")||t.getExtension(e)}))}}(r),n}(n,t):0}(e,t)},Ta:function(e){var t={devicePreference:\\\"default\\\",powerPreference:\\\"default\\\"};return 0!==e&&(t={devicePreference:[\\\"default\\\",\\\"gpu\\\",\\\"cpu\\\"][a()[e>>2]],powerPreference:[\\\"default\\\",\\\"high-performance\\\",\\\"low-power\\\"][a()[e+4>>2]]}),gt.create(navigator.ml.createContext(t))},ab:kt,bb:Dt,l:Pt,$a:Rt,r:Ct,Wa:zt,p:jt,wa:function(e){var t=Date.now();return i()[e>>2]=t/1e3|0,i()[e+4>>2]=t%1e3*1e3|0,0},hb:function e(t,n){return t=new Date(1e3*i()[t>>2]),i()[n>>2]=t.getUTCSeconds(),i()[n+4>>2]=t.getUTCMinutes(),i()[n+8>>2]=t.getUTCHours(),i()[n+12>>2]=t.getUTCDate(),i()[n+16>>2]=t.getUTCMonth(),i()[n+20>>2]=t.getUTCFullYear()-1900,i()[n+24>>2]=t.getUTCDay(),i()[n+36>>2]=0,i()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[n+28>>2]=t,e.Ec||(e.Ec=Z(\\\"GMT\\\")),i()[n+40>>2]=e.Ec,n},J:function(){we.Vc()},u:function(e,t){Bt(),e=new Date(1e3*i()[e>>2]),i()[t>>2]=e.getSeconds(),i()[t+4>>2]=e.getMinutes(),i()[t+8>>2]=e.getHours(),i()[t+12>>2]=e.getDate(),i()[t+16>>2]=e.getMonth(),i()[t+20>>2]=e.getFullYear()-1900,i()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),r=(e.getTime()-n.getTime())/864e5|0;return i()[t+28>>2]=r,i()[t+36>>2]=-60*e.getTimezoneOffset(),r=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),i()[t+32>>2]=e,e=i()[cn()+(e?4:0)>>2],i()[t+40>>2]=e,t},a:R||c.wasmMemory,x:function(e){Bt();var t=new Date(i()[e+20>>2]+1900,i()[e+16>>2],i()[e+12>>2],i()[e+8>>2],i()[e+4>>2],i()[e>>2],0),n=i()[e+32>>2],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),0,1),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),u=a.getTimezoneOffset(),c=Math.min(u,o);return 0>n?i()[e+32>>2]=Number(o!=u&&c==r):0<n!=(c==r)&&(o=Math.max(u,o),t.setTime(t.getTime()+6e4*((0<n?c:o)-r))),i()[e+24>>2]=t.getDay(),n=(t.getTime()-a.getTime())/864e5|0,i()[e+28>>2]=n,i()[e>>2]=t.getSeconds(),i()[e+4>>2]=t.getMinutes(),i()[e+8>>2]=t.getHours(),i()[e+12>>2]=t.getDate(),i()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Sa:function(e){gt.oc(e)},Ra:function(e){gt.release(e)},Qa:function(e){mt.oc(e)},Pa:function(e){mt.release(e)},La:function(e,t,n){return e=vt.get(e),t=At.get(t),n=At.get(n),n=e.add(t,n),At.create(n)},Ka:function(e,t,n){return e=vt.get(e),t=At.get(t),n=ht(n),n=e.averagePool2d(t,n),At.create(n)},Ja:function(e,t,n,r,a){return e=vt.get(e),t=At.get(t),n=At.get(n),r=At.get(r),a={scale:At.get(i()[a>>2]),bias:At.get(i()[a+4>>2]),axis:i()[a+8>>2],epsilon:o()[a+12>>2],activation:mt.get(i()[a+16>>2])},a=e.batchNormalization(t,n,r,a),At.create(a)},Ia:function(e,t){e=vt.get(e),t=Ot.get(t);try{var n=e.build(t);return bt.create(n)}catch(e){return console.log(\\\"builder.build failed: \\\"+e),0}},Ha:function(e,t,n){return e=vt.get(e),t=At.get(t),n=lt(n),n=e.clamp(t,n),At.create(n)},Ga:function(e,t){return e=vt.get(e),t=lt(t),t=e.clamp(t),mt.create(t)},Fa:function(e,t,n,r){e=vt.get(e),t=st(t,n),n=[];for(var i=0;i<t.length;++i)n.push(At.get(t[i]));return r=e.concat(n,r),At.create(r)},Ea:function(e,t,n){return e=vt.get(e),n=ft(n,(t=pt(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),At.create(n)},Ca:function(e,t,n,r){return e=vt.get(e),t=At.get(t),n=At.get(n),r={padding:\\\"explicit\\\"===et[i()[r+24>>2]]?st(a()[r>>2],i()[r+4>>2]):void 0,strides:st(a()[r+8>>2],i()[r+12>>2]),dilations:st(a()[r+16>>2],i()[r+20>>2]),autoPad:et[i()[r+24>>2]],groups:i()[r+28>>2],inputLayout:rt[i()[r+32>>2]],filterLayout:nt[i()[r+36>>2]],bias:At.get(i()[r+40>>2]),activation:mt.get(i()[r+44>>2])},r=e.conv2d(t,n,r),At.create(r)},Da:function(e,t,n,r){return e=vt.get(e),t=At.get(t),n=At.get(n),r={padding:\\\"explicit\\\"===et[i()[r+40>>2]]?st(a()[r>>2],i()[r+4>>2]):void 0,strides:st(a()[r+8>>2],i()[r+12>>2]),dilations:st(a()[r+16>>2],i()[r+20>>2]),outputPadding:st(a()[r+24>>2],i()[r+28>>2]),outputSizes:st(a()[r+32>>2],i()[r+36>>2]),autoPad:et[i()[r+40>>2]],groups:i()[r+44>>2],inputLayout:rt[i()[r+48>>2]],filterLayout:tt[i()[r+52>>2]],bias:At.get(i()[r+56>>2]),activation:mt.get(i()[r+60>>2])},r=e.convTranspose2d(t,n,r),At.create(r)},Ba:function(e,n,r,a){return e=vt.get(e),n=At.get(n),r=At.get(r),a={c:At.get(i()[a>>2]),alpha:o()[a+4>>2],beta:o()[a+8>>2],aTranspose:0!==t()[a+12>>0],bTranspose:0!==t()[a+13>>0]},a=e.gemm(n,r,a),At.create(a)},Aa:function(e,n,r,a,o,u,c){return e=vt.get(e),n=At.get(n),r=At.get(r),a=At.get(a),c={bias:At.get(i()[c>>2]),recurrentBias:At.get(i()[c+4>>2]),initialHiddenState:At.get(i()[c+8>>2]),resetAfter:0!==t()[c+12>>0],returnSequence:0!==t()[c+13>>0],direction:ot[i()[c+16>>2]],layout:ut[i()[c+20>>2]],activations:St.get(i()[c+24>>2])},o=e.gru(n,r,a,o,u,c),Et.create(o)},za:function(e,t,n){return e=vt.get(e),t=V(t),n=pt(n),n=e.input(t,n),At.create(n)},ya:function(e,t,n){return e=vt.get(e),t=At.get(t),n=dt(n),n=e.leakyRelu(t,n),At.create(n)},xa:function(e,t){return e=vt.get(e),t=dt(t),t=e.leakyRelu(t),mt.create(t)},va:function(e,t,n){return e=vt.get(e),t=At.get(t),n=At.get(n),n=e.matmul(t,n),At.create(n)},ua:function(e,t,n){return e=vt.get(e),t=At.get(t),n=ht(n),n=e.maxPool2d(t,n),At.create(n)},ja:function(e){vt.release(e)},ta:function(e,t){return e=vt.get(e),t=At.get(t),t=e.relu(t),At.create(t)},sa:function(e){return e=vt.get(e).relu(),mt.create(e)},ra:function(e,t,n){e=vt.get(e),t=At.get(t);var r=it[i()[n>>2]],u=a()[n+4>>2],c=i()[n+8>>2];if(0!==u&&0!==c){for(var s=[],f=0;f<u;++f,c+=4)s.push(o()[c>>2]);u=s}else u=void 0;return n={mode:r,scales:u,sizes:st(a()[n+12>>2],i()[n+16>>2]),axes:st(a()[n+20>>2],i()[n+24>>2])},n=e.resample2d(t,n),At.create(n)},qa:function(e,t,n,r){return e=vt.get(e),t=At.get(t),n=st(r,n),n=e.reshape(t,n),At.create(n)},pa:function(e,t){return e=vt.get(e),t=At.get(t),t=e.sigmoid(t),At.create(t)},oa:function(e){return e=vt.get(e).sigmoid(),mt.create(e)},na:function(e,t,n,r,o){if(e=vt.get(e),t=At.get(t),0!==r&&0!==n){for(var u=[],c=0;c<r;++c,n+=4)u.push(a()[n>>2]);n=u}else n=void 0;return 1==r&&(n=n[0]),r={axis:i()[o>>2]},r=e.split(t,n,r),Et.create(r)},ma:function(e,t){return e=vt.get(e),t=At.get(t),t=e.tanh(t),At.create(t)},la:function(e){return e=vt.get(e).tanh(),mt.create(e)},ka:function(e,t,n){return e=vt.get(e),t=At.get(t),n={permutation:st(a()[n>>2],i()[n+4>>2])},n=e.transpose(t,n),At.create(n)},Oa:function(e,t,n){return e=bt.get(e),t=wt.get(t),n=_t.get(n),e.compute(t,n)},Na:function(e){bt.oc(e)},Ma:function(e){bt.release(e)},ha:function(e){wt.release(e)},ia:function(e,t,n){e=wt.get(e),t=V(t),n=0===i()[n+12>>2]?ft(n+0):{resource:ft(n+0),dimensions:st(a()[n+16>>2],i()[n+12>>2])},e[t]=n},fa:function(e){Ot.release(e)},ga:function(e,t,n){e=Ot.get(e),t=V(t),n=At.get(n),e[t]=n},da:function(e){_t.release(e)},ea:function(e,t,n){e=_t.get(e),t=V(t),n=ft(n),e[t]=n},$:function(e,t){return e=Et.get(e)[t],At.create(e)},_:function(e){Et.release(e)},ca:function(e){At.oc(e)},aa:function(e){At.release(e)},Y:function(e){St.oc(e)},X:function(e){St.release(e)},Z:function(e,t){e=St.get(e),t=mt.get(t),e.push(t)},Ua:Wt,g:function(e,t,n,r){return Wt(e,t,n,r)},W:function(e){return e=gt.get(e),e=new MLGraphBuilder(e),vt.create(e)},V:function(){return wt.create({})},U:function(){return Ot.create({})},T:function(){return _t.create({})},R:function(){return St.create([])}};!function(){function e(e,t){c.asm=e.exports,ee=c.asm.Db,ne.unshift(c.asm.ib),we.Dc.push(c.asm.Ib),C=t,A||(se--,c.monitorRunDependencies&&c.monitorRunDependencies(se),0==se&&(null!==fe&&(clearInterval(fe),fe=null),le&&(e=le,le=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!M&&(w||_)){if(\\\"function\\\"==typeof fetch&&!ce.startsWith(\\\"file://\\\"))return fetch(ce,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+ce+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return he()}));if(m)return new Promise((function(e,t){m(ce,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return he()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){D(\\\"failed to asynchronously prepare wasm: \\\"+e),de(e)}))}var r={a:Ht};if(A||(se++,c.monitorRunDependencies&&c.monitorRunDependencies(se)),c.instantiateWasm)try{return c.instantiateWasm(r,e)}catch(e){return D(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(M||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||pe()||ce.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?n(t):fetch(ce,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return D(\\\"wasm streaming compile failed: \\\"+e),D(\\\"falling back to ArrayBuffer instantiation\\\"),n(t)}))}))).catch(f)}(),c.___wasm_call_ctors=function(){return(c.___wasm_call_ctors=c.asm.ib).apply(null,arguments)},c._OrtInit=function(){return(c._OrtInit=c.asm.jb).apply(null,arguments)},c._OrtCreateSessionOptions=function(){return(c._OrtCreateSessionOptions=c.asm.kb).apply(null,arguments)},c._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(c._OrtSessionOptionsAppendExecutionProviderWebNN=c.asm.lb).apply(null,arguments)},c._OrtAddSessionConfigEntry=function(){return(c._OrtAddSessionConfigEntry=c.asm.mb).apply(null,arguments)},c._OrtReleaseSessionOptions=function(){return(c._OrtReleaseSessionOptions=c.asm.nb).apply(null,arguments)},c._OrtCreateSession=function(){return(c._OrtCreateSession=c.asm.ob).apply(null,arguments)},c._OrtReleaseSession=function(){return(c._OrtReleaseSession=c.asm.pb).apply(null,arguments)},c._OrtGetInputCount=function(){return(c._OrtGetInputCount=c.asm.qb).apply(null,arguments)},c._OrtGetOutputCount=function(){return(c._OrtGetOutputCount=c.asm.rb).apply(null,arguments)},c._OrtGetInputName=function(){return(c._OrtGetInputName=c.asm.sb).apply(null,arguments)},c._OrtGetOutputName=function(){return(c._OrtGetOutputName=c.asm.tb).apply(null,arguments)},c._OrtFree=function(){return(c._OrtFree=c.asm.ub).apply(null,arguments)},c._OrtCreateTensor=function(){return(c._OrtCreateTensor=c.asm.vb).apply(null,arguments)},c._OrtGetTensorData=function(){return(c._OrtGetTensorData=c.asm.wb).apply(null,arguments)},c._OrtReleaseTensor=function(){return(c._OrtReleaseTensor=c.asm.xb).apply(null,arguments)},c._OrtCreateRunOptions=function(){return(c._OrtCreateRunOptions=c.asm.yb).apply(null,arguments)},c._OrtAddRunConfigEntry=function(){return(c._OrtAddRunConfigEntry=c.asm.zb).apply(null,arguments)},c._OrtReleaseRunOptions=function(){return(c._OrtReleaseRunOptions=c.asm.Ab).apply(null,arguments)},c._OrtRun=function(){return(c._OrtRun=c.asm.Bb).apply(null,arguments)},c._OrtEndProfiling=function(){return(c._OrtEndProfiling=c.asm.Cb).apply(null,arguments)};var Yt=c._malloc=function(){return(Yt=c._malloc=c.asm.Eb).apply(null,arguments)},qt=c.___errno_location=function(){return(qt=c.___errno_location=c.asm.Fb).apply(null,arguments)},Vt=c._free=function(){return(Vt=c._free=c.asm.Gb).apply(null,arguments)},Xt=c._pthread_self=function(){return(Xt=c._pthread_self=c.asm.Hb).apply(null,arguments)};c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.Ib).apply(null,arguments)},c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.Jb).apply(null,arguments)};var Jt,Qt=c._emscripten_register_main_browser_thread_id=function(){return(Qt=c._emscripten_register_main_browser_thread_id=c.asm.Kb).apply(null,arguments)},Zt=c._emscripten_main_browser_thread_id=function(){return(Zt=c._emscripten_main_browser_thread_id=c.asm.Lb).apply(null,arguments)},Kt=c._emscripten_sync_run_in_main_thread_4=function(){return(Kt=c._emscripten_sync_run_in_main_thread_4=c.asm.Mb).apply(null,arguments)},$t=c._emscripten_main_thread_process_queued_calls=function(){return($t=c._emscripten_main_thread_process_queued_calls=c.asm.Nb).apply(null,arguments)},en=c._emscripten_run_in_main_runtime_thread_js=function(){return(en=c._emscripten_run_in_main_runtime_thread_js=c.asm.Ob).apply(null,arguments)},tn=c.__emscripten_call_on_thread=function(){return(tn=c.__emscripten_call_on_thread=c.asm.Pb).apply(null,arguments)},nn=c._pthread_testcancel=function(){return(nn=c._pthread_testcancel=c.asm.Qb).apply(null,arguments)},rn=c._pthread_exit=function(){return(rn=c._pthread_exit=c.asm.Rb).apply(null,arguments)},an=c.__emscripten_thread_init=function(){return(an=c.__emscripten_thread_init=c.asm.Sb).apply(null,arguments)},on=c._emscripten_get_global_libc=function(){return(on=c._emscripten_get_global_libc=c.asm.Tb).apply(null,arguments)},un=c.___pthread_tsd_run_dtors=function(){return(un=c.___pthread_tsd_run_dtors=c.asm.Ub).apply(null,arguments)},cn=c.__get_tzname=function(){return(cn=c.__get_tzname=c.asm.Vb).apply(null,arguments)},sn=c.__get_daylight=function(){return(sn=c.__get_daylight=c.asm.Wb).apply(null,arguments)},fn=c.__get_timezone=function(){return(fn=c.__get_timezone=c.asm.Xb).apply(null,arguments)},ln=c.stackSave=function(){return(ln=c.stackSave=c.asm.Yb).apply(null,arguments)},dn=c.stackRestore=function(){return(dn=c.stackRestore=c.asm.Zb).apply(null,arguments)},pn=c.stackAlloc=function(){return(pn=c.stackAlloc=c.asm._b).apply(null,arguments)},hn=c._emscripten_stack_set_limits=function(){return(hn=c._emscripten_stack_set_limits=c.asm.$b).apply(null,arguments)},gn=c._memalign=function(){return(gn=c._memalign=c.asm.ac).apply(null,arguments)},mn=c.__emscripten_allow_main_runtime_queued_calls=999808,bn=c.__emscripten_main_thread_futex=1003828;function vn(e){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+e+\\\")\\\",this.status=e}function yn(){function e(){if(!Jt&&(Jt=!0,c.calledRun=!0,!j)&&(A||me(ne),s(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),!A)){if(c.postRun)for(\\\"function\\\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var e=c.postRun.shift();ie.unshift(e)}me(ie)}}if(!(0<se))if(A)s(c),A||me(ne),postMessage({cmd:\\\"loaded\\\"});else{if(!A){if(c.preRun)for(\\\"function\\\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)ue();me(te)}0<se||(c.setStatus?(c.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){c.setStatus(\\\"\\\")}),1),e()}),1)):e())}}function wn(e){if(z=e,A)throw postMessage({cmd:\\\"exitProcess\\\",returnCode:e}),new vn(e);oe()||(we.Kc(),A||(me(re),\\\"undefined\\\"!=typeof _fflush&&_fflush(0),Me[1].length&&ke(1,10),Me[2].length&&ke(2,10))),z=e,oe()||(we.Kc(),c.onExit&&c.onExit(e),j=!0),h(e,new vn(e))}if(c.UTF8ToString=V,c.stringToUTF8=J,c.lengthBytesUTF8=Q,c.keepRuntimeAlive=oe,c.PThread=we,c.stackSave=ln,c.stackRestore=dn,c.stackAlloc=pn,c.PThread=we,c.wasmMemory=R,c.ExitStatus=vn,le=function e(){Jt||yn(),Jt||(le=e)},c.run=yn,c.preInit)for(\\\"function\\\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();return A&&(P=!1,we.Wc()),yn(),e.ready});e.exports=r},118:function(e){\\\"use strict\\\";e.exports='\\\"use strict\\\";var e={};if(\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node&&void 0===global.Worker){var a=require(\\\"worker_threads\\\"),t=a.parentPort;t.on(\\\"message\\\",(function(e){onmessage({data:e})}));var r=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:a.Worker,importScripts:function(e){(0,eval)(r.readFileSync(e,\\\"utf8\\\"))},postMessage:function(e){t.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:a,threadId:e._pthread_self()})},e.instantiateWasm=function(a,t){var r=new WebAssembly.Instance(e.wasmModule,a);return t(r),e.wasmModule=null,r.exports},self.onmessage=function(a){try{if(\\\"load\\\"===a.data.cmd){if(e.wasmModule=a.data.wasmModule,e.wasmMemory=a.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof a.data.urlOrBlob)importScripts(a.data.urlOrBlob);else{var t=URL.createObjectURL(a.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e).then((function(a){e=a}))}else if(\\\"objectTransfer\\\"===a.data.cmd)e.PThread.receiveObjectTransfer(a.data);else if(\\\"run\\\"===a.data.cmd){e.__performance_now_clock_drift=performance.now()-a.data.time,e.__emscripten_thread_init(a.data.threadInfoStruct,0,0);var r=a.data.stackBase,o=a.data.stackBase+a.data.stackSize;e.establishStackSpace(o,r),e.PThread.receiveObjectTransfer(a.data),e.PThread.threadInit();try{var n=e.invokeEntryPoint(a.data.start_routine,a.data.arg);e.keepRuntimeAlive()?e.PThread.setExitStatus(n):e.PThread.threadExit(n)}catch(a){if(\\\"Canceled!\\\"===a)e.PThread.threadCancel();else if(\\\"unwind\\\"!=a){if(!(a instanceof e.ExitStatus))throw e.PThread.threadExit(-2),a;e.keepRuntimeAlive()||e.PThread.threadExit(a.status)}}}else\\\"cancel\\\"===a.data.cmd?e._pthread_self()&&e.PThread.threadCancel():\\\"setimmediate\\\"===a.data.target||(\\\"processThreadQueue\\\"===a.data.cmd?e._pthread_self()&&e._emscripten_current_thread_process_queued_calls():(s(\\\"worker.js received unknown command \\\"+a.data.cmd),s(a.data)))}catch(e){throw s(\\\"worker.js onmessage() captured an uncaught exception: \\\"+e),e&&e.stack&&s(e.stack),e}};\\\\n'},932:function(e,t,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||__filename,function(e){var t,r,i;e=e||{},t||(t=void 0!==e?e:{}),t.ready=new Promise((function(e,t){r=e,i=t}));var a,o={};for(a in t)t.hasOwnProperty(a)&&(o[a]=t[a]);var u,c,s,f,l,d=\\\"./this.program\\\",p=\\\"object\\\"==typeof window,h=\\\"function\\\"==typeof importScripts,g=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,m=\\\"\\\";g?(m=h?n(622).dirname(m)+\\\"/\\\":__dirname+\\\"/\\\",u=function(e,t){return f||(f=n(747)),l||(l=n(622)),e=l.normalize(e),f.readFileSync(e,t?null:\\\"utf8\\\")},s=function(e){return(e=u(e,!0)).buffer||(e=new Uint8Array(e)),e.buffer||Y(\\\"Assertion failed: undefined\\\"),e},c=function(e,t,r){f||(f=n(747)),l||(l=n(622)),e=l.normalize(e),f.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){throw e})),process.on(\\\"unhandledRejection\\\",Y),t.inspect=function(){return\\\"[Emscripten Module object]\\\"}):(p||h)&&(h?m=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(m=document.currentScript.src),_scriptDir&&(m=_scriptDir),m=0!==m.indexOf(\\\"blob:\\\")?m.substr(0,m.lastIndexOf(\\\"/\\\")+1):\\\"\\\",u=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},h&&(s=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),c=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var b,v=t.print||console.log.bind(console),y=t.printErr||console.warn.bind(console);for(a in o)o.hasOwnProperty(a)&&(t[a]=o[a]);o=null,t.thisProgram&&(d=t.thisProgram),t.wasmBinary&&(b=t.wasmBinary),t.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&Y(\\\"no native wasm support detected\\\");var w,_,O,A,E,S,T,x=!1,M=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function k(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&M)return M.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var i=e[t++];if(128&i){var a=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function D(e,t){return e?k(A,e,t):\\\"\\\"}function P(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=r)break;t[n++]=o}else{if(2047>=o){if(n+1>=r)break;t[n++]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;t[n++]=224|o>>12}else{if(n+3>=r)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63}t[n++]=128|o>>6&63}t[n++]=128|63&o}}return t[n]=0,n-i}function R(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function C(e){var t=R(e)+1,n=Ge(t);return n&&P(e,O,n,t),n}function z(){var e=w.buffer;_=e,t.HEAP8=O=new Int8Array(e),t.HEAP16=new Int16Array(e),t.HEAP32=E=new Int32Array(e),t.HEAPU8=A=new Uint8Array(e),t.HEAPU16=new Uint16Array(e),t.HEAPU32=S=new Uint32Array(e),t.HEAPF32=T=new Float32Array(e),t.HEAPF64=new Float64Array(e)}var j,B=[],I=[],F=[],G=[];function U(){var e=t.preRun.shift();B.unshift(e)}var L,W=0,N=null,H=null;function Y(e){throw t.onAbort&&t.onAbort(e),y(e),x=!0,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),i(e),e}function q(){return L.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(t.preloadedImages={},t.preloadedAudios={},L=\\\"ort-wasm.wasm\\\",!q()){var V=L;L=t.locateFile?t.locateFile(V,m):m+V}function X(){var e=L;try{if(e==L&&b)return new Uint8Array(b);if(s)return s(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){Y(e)}}function J(e){for(;0<e.length;){var n=e.shift();if(\\\"function\\\"==typeof n)n(t);else{var r=n.Ib;\\\"number\\\"==typeof r?void 0===n.yb?j.get(r)():j.get(r)(n.yb):r(void 0===n.yb?null:n.yb)}}}function Q(e){this.Ab=e-16,this.Sb=function(e){E[this.Ab+4>>2]=e},this.Pb=function(e){E[this.Ab+8>>2]=e},this.Qb=function(){E[this.Ab>>2]=0},this.Ob=function(){O[this.Ab+12>>0]=0},this.Rb=function(){O[this.Ab+13>>0]=0},this.Kb=function(e,t){this.Sb(e),this.Pb(t),this.Qb(),this.Ob(),this.Rb()}}var Z,K={},$=[null,[],[]],ee={};Z=g?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:function(){return performance.now()};var te=[\\\"explicit\\\",\\\"same-upper\\\",\\\"same-lower\\\"],ne=[\\\"iohw\\\",\\\"hwoi\\\",\\\"ohwi\\\"],re=[\\\"oihw\\\",\\\"hwio\\\",\\\"ohwi\\\",\\\"ihwo\\\"],ie=[\\\"nchw\\\",\\\"nhwc\\\"],ae=[\\\"nearest-neighbor\\\",\\\"linear\\\"],oe=\\\"float32 float16 int32 uint32 int8 uint8\\\".split(\\\" \\\"),ue=[\\\"forward\\\",\\\"backward\\\",\\\"both\\\"],ce=[\\\"zrn\\\",\\\"rzn\\\"],se=[\\\"floor\\\",\\\"ceil\\\"];function fe(e,t){if(0!==e&&0!==t){for(var n=[],r=0;r<e;++r,t+=4)n.push(E[t>>2]);return n}}function le(e,t=\\\"float32\\\"){const n=E[e>>2]+S[e+8>>2];return e=S[e+4>>2],\\\"float32\\\"===t||Y(\\\"Assertion failed: undefined\\\"),new Float32Array(A.buffer,n,e/Float32Array.BYTES_PER_ELEMENT)}function de(e){return{minValue:T[e>>2],maxValue:T[e+4>>2]}}function pe(e){return{type:oe[S[e>>2]],dimensions:fe(S[e+8>>2],E[e+4>>2])}}function he(e){return{windowDimensions:fe(S[e>>2],E[e+4>>2]),padding:\\\"explicit\\\"===te[E[e+32>>2]]?fe(S[e+8>>2],E[e+12>>2]):void 0,strides:fe(S[e+16>>2],E[e+20>>2]),dilations:fe(S[e+24>>2],E[e+28>>2]),autoPad:te[E[e+32>>2]],layout:ie[E[e+36>>2]],roundingType:se[E[e+40>>2]],outputSizes:fe(S[e+44>>2],E[e+48>>2])}}var ge,me,be,ve,ye,we,_e,Oe,Ae,Ee,Se,Te,xe,Me={};function ke(){if(!Te){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:d||\\\"./this.program\\\"};for(e in Me)void 0===Me[e]?delete t[e]:t[e]=Me[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);Te=n}return Te}function De(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(!xe){xe=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var i=r.getTimezoneOffset(),a=Math.max(t,i);E[He()>>2]=60*a,E[Ne()>>2]=Number(t!=i),n=e(n),r=e(r),n=C(n),r=C(r),i<t?(E[We()>>2]=n,E[We()+4>>2]=r):(E[We()>>2]=r,E[We()+4>>2]=n)}}function Pe(e){return 0==e%4&&(0!=e%100||0==e%400)}function Re(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Ce=[31,29,31,30,31,30,31,31,30,31,30,31],ze=[31,28,31,30,31,30,31,31,30,31,30,31];function je(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(Pe(e.getFullYear())?Ce:ze)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Be(e,t,n,r){function i(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function a(e,t){return i(e,t,\\\"0\\\")}function o(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function c(e){e=je(new Date(e.wb+1900,0,1),e.Fb);var t=new Date(e.getFullYear()+1,0,4),n=u(new Date(e.getFullYear(),0,4));return t=u(t),0>=o(n,e)?0>=o(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var s=E[r+40>>2];for(var f in r={Vb:E[r>>2],Ub:E[r+4>>2],Db:E[r+8>>2],Cb:E[r+12>>2],xb:E[r+16>>2],wb:E[r+20>>2],Eb:E[r+24>>2],Fb:E[r+28>>2],cc:E[r+32>>2],Tb:E[r+36>>2],Wb:s?D(s):\\\"\\\"},n=D(n),s={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})n=n.replace(new RegExp(f,\\\"g\\\"),s[f]);var l=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),d=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(f in s={\\\"%a\\\":function(e){return l[e.Eb].substring(0,3)},\\\"%A\\\":function(e){return l[e.Eb]},\\\"%b\\\":function(e){return d[e.xb].substring(0,3)},\\\"%B\\\":function(e){return d[e.xb]},\\\"%C\\\":function(e){return a((e.wb+1900)/100|0,2)},\\\"%d\\\":function(e){return a(e.Cb,2)},\\\"%e\\\":function(e){return i(e.Cb,2,\\\" \\\")},\\\"%g\\\":function(e){return c(e).toString().substring(2)},\\\"%G\\\":function(e){return c(e)},\\\"%H\\\":function(e){return a(e.Db,2)},\\\"%I\\\":function(e){return 0==(e=e.Db)?e=12:12<e&&(e-=12),a(e,2)},\\\"%j\\\":function(e){return a(e.Cb+Re(Pe(e.wb+1900)?Ce:ze,e.xb-1),3)},\\\"%m\\\":function(e){return a(e.xb+1,2)},\\\"%M\\\":function(e){return a(e.Ub,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.Db&&12>e.Db?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return a(e.Vb,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.Eb||7},\\\"%U\\\":function(e){var t=new Date(e.wb+1900,0,1),n=0===t.getDay()?t:je(t,7-t.getDay());return 0>o(n,e=new Date(e.wb+1900,e.xb,e.Cb))?a(Math.ceil((31-n.getDate()+(Re(Pe(e.getFullYear())?Ce:ze,e.getMonth()-1)-31)+e.getDate())/7),2):0===o(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.wb+1901,0,4),n=u(new Date(e.wb+1900,0,4));t=u(t);var r=je(new Date(e.wb+1900,0,1),e.Fb);return 0>o(r,n)?\\\"53\\\":0>=o(t,r)?\\\"01\\\":a(Math.ceil((n.getFullYear()<e.wb+1900?e.Fb+32-n.getDate():e.Fb+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.Eb},\\\"%W\\\":function(e){var t=new Date(e.wb,0,1),n=1===t.getDay()?t:je(t,0===t.getDay()?1:7-t.getDay()+1);return 0>o(n,e=new Date(e.wb+1900,e.xb,e.Cb))?a(Math.ceil((31-n.getDate()+(Re(Pe(e.getFullYear())?Ce:ze,e.getMonth()-1)-31)+e.getDate())/7),2):0===o(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.wb+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.wb+1900},\\\"%z\\\":function(e){var t=0<=(e=e.Tb);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.Wb},\\\"%%\\\":function(){return\\\"%\\\"}})n.includes(f)&&(n=n.replace(new RegExp(f,\\\"g\\\"),s[f](r)));return(f=function(e){var t=Array(R(e)+1);return P(e,t,0,t.length),t}(n)).length>t?0:(O.set(f,e),f.length-1)}ge||(ge=ge||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},me=me||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},be=be||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},ve=ve||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},ye=ye||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},we=we||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},_e=_e||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},Oe=Oe||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},Ae=Ae||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},Ee=Ee||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},Se=Se||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}});var Ie={a:function(e){return Ge(e+16)+16},c:function(e,t){F.unshift({Ib:e,yb:t})},f:function(e,t){F.unshift({Ib:e,yb:t})},b:function(e,t,n){throw new Q(e).Kb(t,n),e},Q:function(e,t){return e=D(e),ee.Xb(e,t)},p:function(){return 0},T:function(){},P:function(){},t:function(){return 42},H:function(){return 0},R:function(){},U:function(e,t){return e=D(e),ee.Yb(e,t)},W:function(e,t,n,r,i,a){if(a<<=12,0!=(16&r)&&0!=e%65536)t=-28;else if(0!=(32&r)){e=65536*Math.ceil(t/65536);var o=Xe(65536,e);o?(A.fill(0,o,o+e),e=o):e=0,e?(K[e]={Mb:e,Lb:t,Jb:!0,fd:i,bc:n,flags:r,offset:a},t=e):t=-48}else t=-52;return t},V:function(e,t){var n=K[e];return 0!==t&&n?(t===n.Lb&&(K[e]=null,n.Jb&&Le(n.Mb)),e=0):e=-28,e},n:function(){},O:function(e,t,n){return e=D(e),ee.Zb(e,t,n)},M:function(){},u:function(){},N:function(){},k:function(){Y()},B:function(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return E[Ue()>>2]=28,-1;e=Z()}return E[t>>2]=e/1e3|0,E[t+4>>2]=e%1e3*1e6|0,0},X:function(e,t){return e-t},Pa:function(){Y(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},j:function(){Y(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Qa:function(){Y(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Oa:function(){Y(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},S:function(){return 2147483648},G:function(e,t,n){A.copyWithin(e,t,t+n)},m:function(e){var t=A.length;if(2147483648<(e>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296),0<(r=Math.max(e,r))%65536&&(r+=65536-r%65536);e:{try{w.grow(Math.min(2147483648,r)-_.byteLength+65535>>>16),z();var i=1;break e}catch(e){}i=void 0}if(i)return!0}return!1},L:function(e){for(var t=Z();Z()-t<e;);},Ma:function(e){var t={devicePreference:\\\"default\\\",powerPreference:\\\"default\\\"};return 0!==e&&(t={devicePreference:[\\\"default\\\",\\\"gpu\\\",\\\"cpu\\\"][S[e>>2]],powerPreference:[\\\"default\\\",\\\"high-performance\\\",\\\"low-power\\\"][S[e+4>>2]]}),ge.create(navigator.ml.createContext(t))},J:function(e,t){var n=0;return ke().forEach((function(r,i){var a=t+n;for(i=E[e+4*i>>2]=a,a=0;a<r.length;++a)O[i++>>0]=r.charCodeAt(a);O[i>>0]=0,n+=r.length+1})),0},K:function(e,t){var n=ke();E[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),E[t>>2]=r,0},i:function(){return 0},I:function(e,t){return e=1==e||2==e?2:Y(),O[t>>0]=e,0},r:function(e,t,n,r){return e=ee.ac(e),t=ee.$b(e,t,n),E[r>>2]=t,0},F:function(){},s:function(e,t,n,r){for(var i=0,a=0;a<n;a++){for(var o=E[t+8*a>>2],u=E[t+(8*a+4)>>2],c=0;c<u;c++){var s=A[o+c],f=$[e];0===s||10===s?((1===e?v:y)(k(f,0)),f.length=0):f.push(s)}i+=u}return E[r>>2]=i,0},sa:function(e){var t=Date.now();return E[e>>2]=t/1e3|0,E[e+4>>2]=t%1e3*1e3|0,0},da:function e(t,n){return t=new Date(1e3*E[t>>2]),E[n>>2]=t.getUTCSeconds(),E[n+4>>2]=t.getUTCMinutes(),E[n+8>>2]=t.getUTCHours(),E[n+12>>2]=t.getUTCDate(),E[n+16>>2]=t.getUTCMonth(),E[n+20>>2]=t.getUTCFullYear()-1900,E[n+24>>2]=t.getUTCDay(),E[n+36>>2]=0,E[n+32>>2]=0,E[n+28>>2]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,e.Hb||(e.Hb=C(\\\"GMT\\\")),E[n+40>>2]=e.Hb,n},x:function(e,t){De(),e=new Date(1e3*E[e>>2]),E[t>>2]=e.getSeconds(),E[t+4>>2]=e.getMinutes(),E[t+8>>2]=e.getHours(),E[t+12>>2]=e.getDate(),E[t+16>>2]=e.getMonth(),E[t+20>>2]=e.getFullYear()-1900,E[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1);E[t+28>>2]=(e.getTime()-n.getTime())/864e5|0,E[t+36>>2]=-60*e.getTimezoneOffset();var r=new Date(e.getFullYear(),6,1).getTimezoneOffset();return e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),E[t+32>>2]=e,e=E[We()+(e?4:0)>>2],E[t+40>>2]=e,t},q:function(e){De();var t=new Date(E[e+20>>2]+1900,E[e+16>>2],E[e+12>>2],E[e+8>>2],E[e+4>>2],E[e>>2],0),n=E[e+32>>2],r=t.getTimezoneOffset(),i=new Date(t.getFullYear(),0,1),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=i.getTimezoneOffset(),u=Math.min(o,a);return 0>n?E[e+32>>2]=Number(a!=o&&u==r):0<n!=(u==r)&&(a=Math.max(o,a),t.setTime(t.getTime()+6e4*((0<n?u:a)-r))),E[e+24>>2]=t.getDay(),E[e+28>>2]=(t.getTime()-i.getTime())/864e5|0,E[e>>2]=t.getSeconds(),E[e+4>>2]=t.getMinutes(),E[e+8>>2]=t.getHours(),E[e+12>>2]=t.getDate(),E[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},E:function(e){ge.Bb(e)},D:function(e){ge.release(e)},La:function(e){me.Bb(e)},g:function(e){me.release(e)},Ia:function(e,t,n){return e=ve.get(e),t=Ae.get(t),n=Ae.get(n),n=e.add(t,n),Ae.create(n)},Ha:function(e,t,n){return e=ve.get(e),t=Ae.get(t),n=he(n),n=e.averagePool2d(t,n),Ae.create(n)},Ga:function(e,t,n,r,i){return e=ve.get(e),t=Ae.get(t),n=Ae.get(n),r=Ae.get(r),i={scale:Ae.get(E[i>>2]),bias:Ae.get(E[i+4>>2]),axis:E[i+8>>2],epsilon:T[i+12>>2],activation:me.get(E[i+16>>2])},i=e.batchNormalization(t,n,r,i),Ae.create(i)},Fa:function(e,t){e=ve.get(e),t=Oe.get(t);try{var n=e.build(t);return be.create(n)}catch(e){return console.log(\\\"builder.build failed: \\\"+e),0}},Ea:function(e,t,n){return e=ve.get(e),t=Ae.get(t),n=e.clamp(t,de(n)),Ae.create(n)},Da:function(e,t){return e=ve.get(e).clamp(de(t)),me.create(e)},Ca:function(e,t,n,r){e=ve.get(e),t=fe(t,n),n=[];for(var i=0;i<t.length;++i)n.push(Ae.get(t[i]));return r=e.concat(n,r),Ae.create(r)},Ba:function(e,t,n){return e=ve.get(e),n=le(n,(t=pe(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),Ae.create(n)},za:function(e,t,n,r){return e=ve.get(e),t=Ae.get(t),n=Ae.get(n),r={padding:\\\"explicit\\\"===te[E[r+24>>2]]?fe(S[r>>2],E[r+4>>2]):void 0,strides:fe(S[r+8>>2],E[r+12>>2]),dilations:fe(S[r+16>>2],E[r+20>>2]),autoPad:te[E[r+24>>2]],groups:E[r+28>>2],inputLayout:ie[E[r+32>>2]],filterLayout:re[E[r+36>>2]],bias:Ae.get(E[r+40>>2]),activation:me.get(E[r+44>>2])},r=e.conv2d(t,n,r),Ae.create(r)},Aa:function(e,t,n,r){return e=ve.get(e),t=Ae.get(t),n=Ae.get(n),r={padding:\\\"explicit\\\"===te[E[r+40>>2]]?fe(S[r>>2],E[r+4>>2]):void 0,strides:fe(S[r+8>>2],E[r+12>>2]),dilations:fe(S[r+16>>2],E[r+20>>2]),outputPadding:fe(S[r+24>>2],E[r+28>>2]),outputSizes:fe(S[r+32>>2],E[r+36>>2]),autoPad:te[E[r+40>>2]],groups:E[r+44>>2],inputLayout:ie[E[r+48>>2]],filterLayout:ne[E[r+52>>2]],bias:Ae.get(E[r+56>>2]),activation:me.get(E[r+60>>2])},r=e.convTranspose2d(t,n,r),Ae.create(r)},ya:function(e,t,n,r){return e=ve.get(e),t=Ae.get(t),n=Ae.get(n),r={c:Ae.get(E[r>>2]),alpha:T[r+4>>2],beta:T[r+8>>2],aTranspose:0!==O[r+12>>0],bTranspose:0!==O[r+13>>0]},r=e.gemm(t,n,r),Ae.create(r)},xa:function(e,t,n,r,i,a,o){return e=ve.get(e),t=Ae.get(t),n=Ae.get(n),r=Ae.get(r),o={bias:Ae.get(E[o>>2]),recurrentBias:Ae.get(E[o+4>>2]),initialHiddenState:Ae.get(E[o+8>>2]),resetAfter:0!==O[o+12>>0],returnSequence:0!==O[o+13>>0],direction:ue[E[o+16>>2]],layout:ce[E[o+20>>2]],activations:Se.get(E[o+24>>2])},i=e.gru(t,n,r,i,a,o),Ee.create(i)},wa:function(e,t,n){return e=ve.get(e),t=D(t),n=pe(n),n=e.input(t,n),Ae.create(n)},va:function(e,t,n){return e=ve.get(e),t=Ae.get(t),n=e.leakyRelu(t,{alpha:T[n>>2]}),Ae.create(n)},ua:function(e,t){return e=ve.get(e).leakyRelu({alpha:T[t>>2]}),me.create(e)},ta:function(e,t,n){return e=ve.get(e),t=Ae.get(t),n=Ae.get(n),n=e.matmul(t,n),Ae.create(n)},ra:function(e,t,n){return e=ve.get(e),t=Ae.get(t),n=he(n),n=e.maxPool2d(t,n),Ae.create(n)},w:function(e){ve.release(e)},qa:function(e,t){return e=ve.get(e),t=Ae.get(t),t=e.relu(t),Ae.create(t)},A:function(e){return e=ve.get(e).relu(),me.create(e)},pa:function(e,t,n){e=ve.get(e),t=Ae.get(t);var r=ae[E[n>>2]],i=S[n+4>>2],a=E[n+8>>2];if(0!==i&&0!==a){for(var o=[],u=0;u<i;++u,a+=4)o.push(T[a>>2]);i=o}else i=void 0;return n={mode:r,scales:i,sizes:fe(S[n+12>>2],E[n+16>>2]),axes:fe(S[n+20>>2],E[n+24>>2])},n=e.resample2d(t,n),Ae.create(n)},oa:function(e,t,n,r){return e=ve.get(e),t=Ae.get(t),n=fe(r,n),n=e.reshape(t,n),Ae.create(n)},na:function(e,t){return e=ve.get(e),t=Ae.get(t),t=e.sigmoid(t),Ae.create(t)},z:function(e){return e=ve.get(e).sigmoid(),me.create(e)},ma:function(e,t,n,r,i){if(e=ve.get(e),t=Ae.get(t),0!==r&&0!==n){for(var a=[],o=0;o<r;++o,n+=4)a.push(S[n>>2]);n=a}else n=void 0;return 1==r&&(n=n[0]),r=e.split(t,n,{axis:E[i>>2]}),Ee.create(r)},la:function(e,t){return e=ve.get(e),t=Ae.get(t),t=e.tanh(t),Ae.create(t)},y:function(e){return e=ve.get(e).tanh(),me.create(e)},ka:function(e,t,n){return e=ve.get(e),t=Ae.get(t),n={permutation:fe(S[n>>2],E[n+4>>2])},n=e.transpose(t,n),Ae.create(n)},Ka:function(e,t,n){return e=be.get(e),t=we.get(t),n=_e.get(n),e.compute(t,n)},Ja:function(e){be.Bb(e)},C:function(e){be.release(e)},ia:function(e){we.release(e)},ja:function(e,t,n){e=we.get(e),t=D(t),n=0===E[n+12>>2]?le(n+0):{resource:le(n+0),dimensions:fe(S[n+16>>2],E[n+12>>2])},e[t]=n},ga:function(e){Oe.release(e)},ha:function(e,t,n){e=Oe.get(e),t=D(t),n=Ae.get(n),e[t]=n},ea:function(e){_e.release(e)},fa:function(e,t,n){e=_e.get(e),t=D(t),n=le(n),e[t]=n},l:function(e,t){return e=Ee.get(e)[t],Ae.create(e)},v:function(e){Ee.release(e)},e:function(e){Ae.Bb(e)},d:function(e){Ae.release(e)},ba:function(e){Se.Bb(e)},o:function(e){Se.release(e)},ca:function(e,t){e=Se.get(e),t=me.get(t),e.push(t)},Na:Be,h:function(e,t,n,r){return Be(e,t,n,r)},aa:function(e){return e=ge.get(e),e=new MLGraphBuilder(e),ve.create(e)},$:function(){return we.create({})},_:function(){return Oe.create({})},Z:function(){return _e.create({})},Y:function(){return Se.create([])}};!function(){function e(e){t.asm=e.exports,w=t.asm.Ra,z(),j=t.asm.vb,I.unshift(t.asm.Sa),W--,t.monitorRunDependencies&&t.monitorRunDependencies(W),0==W&&(null!==N&&(clearInterval(N),N=null),H&&(e=H,H=null,e()))}function n(t){e(t.instance)}function r(e){return function(){if(!b&&(p||h)){if(\\\"function\\\"==typeof fetch&&!L.startsWith(\\\"file://\\\"))return fetch(L,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+L+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return X()}));if(c)return new Promise((function(e,t){c(L,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return X()}))}().then((function(e){return WebAssembly.instantiate(e,a)})).then(e,(function(e){y(\\\"failed to asynchronously prepare wasm: \\\"+e),Y(e)}))}var a={a:Ie};if(W++,t.monitorRunDependencies&&t.monitorRunDependencies(W),t.instantiateWasm)try{return t.instantiateWasm(a,e)}catch(e){return y(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(b||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||q()||L.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?r(n):fetch(L,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,a).then(n,(function(e){return y(\\\"wasm streaming compile failed: \\\"+e),y(\\\"falling back to ArrayBuffer instantiation\\\"),r(n)}))}))).catch(i)}(),t.___wasm_call_ctors=function(){return(t.___wasm_call_ctors=t.asm.Sa).apply(null,arguments)},t._OrtInit=function(){return(t._OrtInit=t.asm.Ta).apply(null,arguments)},t._OrtCreateSessionOptions=function(){return(t._OrtCreateSessionOptions=t.asm.Ua).apply(null,arguments)},t._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(t._OrtSessionOptionsAppendExecutionProviderWebNN=t.asm.Va).apply(null,arguments)},t._OrtAddSessionConfigEntry=function(){return(t._OrtAddSessionConfigEntry=t.asm.Wa).apply(null,arguments)},t._OrtReleaseSessionOptions=function(){return(t._OrtReleaseSessionOptions=t.asm.Xa).apply(null,arguments)},t._OrtCreateSession=function(){return(t._OrtCreateSession=t.asm.Ya).apply(null,arguments)},t._OrtReleaseSession=function(){return(t._OrtReleaseSession=t.asm.Za).apply(null,arguments)},t._OrtGetInputCount=function(){return(t._OrtGetInputCount=t.asm._a).apply(null,arguments)},t._OrtGetOutputCount=function(){return(t._OrtGetOutputCount=t.asm.$a).apply(null,arguments)},t._OrtGetInputName=function(){return(t._OrtGetInputName=t.asm.ab).apply(null,arguments)},t._OrtGetOutputName=function(){return(t._OrtGetOutputName=t.asm.bb).apply(null,arguments)},t._OrtFree=function(){return(t._OrtFree=t.asm.cb).apply(null,arguments)},t._OrtCreateTensor=function(){return(t._OrtCreateTensor=t.asm.db).apply(null,arguments)},t._OrtGetTensorData=function(){return(t._OrtGetTensorData=t.asm.eb).apply(null,arguments)},t._OrtReleaseTensor=function(){return(t._OrtReleaseTensor=t.asm.fb).apply(null,arguments)},t._OrtCreateRunOptions=function(){return(t._OrtCreateRunOptions=t.asm.gb).apply(null,arguments)},t._OrtAddRunConfigEntry=function(){return(t._OrtAddRunConfigEntry=t.asm.hb).apply(null,arguments)},t._OrtReleaseRunOptions=function(){return(t._OrtReleaseRunOptions=t.asm.ib).apply(null,arguments)},t._OrtRun=function(){return(t._OrtRun=t.asm.jb).apply(null,arguments)},t._OrtEndProfiling=function(){return(t._OrtEndProfiling=t.asm.kb).apply(null,arguments)};var Fe,Ge=t._malloc=function(){return(Ge=t._malloc=t.asm.lb).apply(null,arguments)},Ue=t.___errno_location=function(){return(Ue=t.___errno_location=t.asm.mb).apply(null,arguments)},Le=t._free=function(){return(Le=t._free=t.asm.nb).apply(null,arguments)},We=t.__get_tzname=function(){return(We=t.__get_tzname=t.asm.ob).apply(null,arguments)},Ne=t.__get_daylight=function(){return(Ne=t.__get_daylight=t.asm.pb).apply(null,arguments)},He=t.__get_timezone=function(){return(He=t.__get_timezone=t.asm.qb).apply(null,arguments)},Ye=t.stackSave=function(){return(Ye=t.stackSave=t.asm.rb).apply(null,arguments)},qe=t.stackRestore=function(){return(qe=t.stackRestore=t.asm.sb).apply(null,arguments)},Ve=t.stackAlloc=function(){return(Ve=t.stackAlloc=t.asm.tb).apply(null,arguments)},Xe=t._memalign=function(){return(Xe=t._memalign=t.asm.ub).apply(null,arguments)};function Je(){function e(){if(!Fe&&(Fe=!0,t.calledRun=!0,!x)){if(J(I),r(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),t.postRun)for(\\\"function\\\"==typeof t.postRun&&(t.postRun=[t.postRun]);t.postRun.length;){var e=t.postRun.shift();G.unshift(e)}J(G)}}if(!(0<W)){if(t.preRun)for(\\\"function\\\"==typeof t.preRun&&(t.preRun=[t.preRun]);t.preRun.length;)U();J(B),0<W||(t.setStatus?(t.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){t.setStatus(\\\"\\\")}),1),e()}),1)):e())}}if(t.UTF8ToString=D,t.stringToUTF8=function(e,t,n){return P(e,A,t,n)},t.lengthBytesUTF8=R,t.stackSave=Ye,t.stackRestore=qe,t.stackAlloc=Ve,H=function e(){Fe||Je(),Fe||(H=e)},t.run=Je,t.preInit)for(\\\"function\\\"==typeof t.preInit&&(t.preInit=[t.preInit]);0<t.preInit.length;)t.preInit.pop()();return Je(),e.ready});e.exports=r},967:function(e,t){\\\"use strict\\\";var n=this&&this.__read||function(e,t){var n=\\\"function\\\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,a=n.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.iterateExtraOptions=void 0,t.iterateExtraOptions=function(e,r,i,a){if(\\\"object\\\"==typeof e&&null!==e){if(i.has(e))throw new Error(\\\"Circular reference in options\\\");i.add(e)}Object.entries(e).forEach((function(e){var o=n(e,2),u=o[0],c=o[1],s=r?r+u:u;if(\\\"object\\\"==typeof c)t.iterateExtraOptions(c,s+\\\".\\\",i,a);else if(\\\"string\\\"==typeof c||\\\"number\\\"==typeof c)a(s,c.toString());else{if(\\\"boolean\\\"!=typeof c)throw new Error(\\\"Can't handle extra config type: \\\"+typeof c);a(s,c?\\\"1\\\":\\\"0\\\")}}))}},586:function(e,t,n){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setRunOptions=void 0;var r=n(967),i=n(983),a=n(361);t.setRunOptions=function(e){var t=a.getInstance(),n=0,o=[],u=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\"+e.logSeverityLevel);if(void 0===(null==e?void 0:e.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\"+e.logVerbosityLevel);void 0===(null==e?void 0:e.terminate)&&(u.terminate=!1);var c=0;if(void 0!==(null==e?void 0:e.tag)&&(c=i.allocWasmString(e.tag,o)),0===(n=t._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,c)))throw new Error(\\\"Can't create run options\\\");return void 0!==(null==e?void 0:e.extra)&&r.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,(function(e,r){var a=i.allocWasmString(e,o),u=i.allocWasmString(r,o);if(0!==t._OrtAddRunConfigEntry(n,a,u))throw new Error(\\\"Can't set a run config entry: \\\"+e+\\\" - \\\"+r)})),[n,o]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),o.forEach(t._free),e}}},919:function(e,t,n){\\\"use strict\\\";var r=this&&this.__values||function(e){var t=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&\\\"number\\\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setSessionOptions=void 0;var i=n(967),a=n(983),o=n(361);t.setSessionOptions=function(e){var t,n,u=o.getInstance(),c=0,s=[],f=e||{};!function(e){e.extra||(e.extra={}),e.extra.session||(e.extra.session={});var t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly=\\\"1\\\")}(f);try{void 0===(null==e?void 0:e.graphOptimizationLevel)&&(f.graphOptimizationLevel=\\\"all\\\");var l=function(e){switch(e){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(\\\"unsupported graph optimization level: \\\"+e)}}(f.graphOptimizationLevel);void 0===(null==e?void 0:e.enableCpuMemArena)&&(f.enableCpuMemArena=!0),void 0===(null==e?void 0:e.enableMemPattern)&&(f.enableMemPattern=!0),void 0===(null==e?void 0:e.executionMode)&&(f.executionMode=\\\"sequential\\\");var d=function(e){switch(e){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(\\\"unsupported execution mode: \\\"+e)}}(f.executionMode),p=0;if(void 0!==(null==e?void 0:e.logId)&&(p=a.allocWasmString(e.logId,s)),void 0===(null==e?void 0:e.logSeverityLevel))f.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\"+e.logSeverityLevel);if(void 0===(null==e?void 0:e.logVerbosityLevel))f.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\"+e.logVerbosityLevel);if(void 0===(null==e?void 0:e.enableProfiling)&&(f.enableProfiling=!1),0===(c=u._OrtCreateSessionOptions(l,!!f.enableCpuMemArena,!!f.enableMemPattern,d,!!f.enableProfiling,0,p,f.logSeverityLevel,f.logVerbosityLevel)))throw new Error(\\\"Can't create session options\\\");if(void 0!==(null==e?void 0:e.extra)&&i.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,(function(e,t){var n=a.allocWasmString(e,s),r=a.allocWasmString(t,s);if(0!==u._OrtAddSessionConfigEntry(c,n,r))throw new Error(\\\"Can't set a session config entry: \\\"+e+\\\" - \\\"+t)})),null==e?void 0:e.executionProviders)try{for(var h=r(e.executionProviders),g=h.next();!g.done;g=h.next()){var m=g.value;if(\\\"webnn\\\"===(\\\"string\\\"==typeof m?m:m.name)){var b=0,v=0;if(\\\"string\\\"!=typeof m){var y=m;(null==y?void 0:y.devicePreference)&&(b=y.devicePreference),(null==y?void 0:y.powerPreference)&&(v=y.powerPreference)}var w=[0,1,2];if(!w.includes(b))throw new Error(\\\"Invalid devicePerference value, it shoule be one of {0, 1, 2}\\\");if(!w.includes(v))throw new Error(\\\"Invalid powerPreference value, it shoule be one of {0, 1, 2}\\\");if(console.log(\\\"webnn device preference: \\\"+[\\\"Default\\\",\\\"GPU\\\",\\\"CPU\\\"][b]),console.log(\\\"webnn power preference: \\\"+[\\\"Default\\\",\\\"High-performance\\\",\\\"Low-power\\\"][v]),0!==u._OrtSessionOptionsAppendExecutionProviderWebNN(c,b,v))throw new Error(\\\"Can't append WebNN execution provider\\\");break}}}catch(e){t={error:e}}finally{try{g&&!g.done&&(n=h.return)&&n.call(h)}finally{if(t)throw t.error}}return[c,s]}catch(e){throw 0!==c&&u._OrtReleaseSessionOptions(c),s.forEach(u._free),e}}},983:function(e,t,n){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.allocWasmString=void 0;var r=n(361);t.allocWasmString=function(e,t){var n=r.getInstance(),i=n.lengthBytesUTF8(e)+1,a=n._malloc(i);return n.stringToUTF8(e,a,i),t.push(a),a}},349:function(e,t,n){\\\"use strict\\\";var r=this&&this.__read||function(e,t){var n=\\\"function\\\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,a=n.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o},i=this&&this.__values||function(e){var t=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&\\\"number\\\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.initOrt=void 0;var a=n(586),o=n(919),u=n(983),c=n(361);t.initOrt=function(e,t){var n=c.getInstance()._OrtInit(e,t);if(0!==n)throw new Error(\\\"Can't initialize onnxruntime. error code = \\\"+n)};var s=[];t.createSession=function(e,t){var n,i=c.getInstance(),a=i._malloc(e.byteLength),u=0,f=0,l=[];try{if(f=(n=r(o.setSessionOptions(t),2))[0],l=n[1],i.HEAPU8.set(e,a),0===(u=i._OrtCreateSession(a,e.byteLength,f)))throw new Error(\\\"Can't create a session\\\")}finally{i._free(a),i._OrtReleaseSessionOptions(f),l.forEach(i._free)}for(var d=i._OrtGetInputCount(u),p=i._OrtGetOutputCount(u),h=[],g=[],m=[],b=[],v=0;v<d;v++){var y=i._OrtGetInputName(u,v);if(0===y)throw new Error(\\\"Can't get an input name\\\");g.push(y),h.push(i.UTF8ToString(y))}for(v=0;v<p;v++){var w=i._OrtGetOutputName(u,v);if(0===w)throw new Error(\\\"Can't get an output name\\\");b.push(w),m.push(i.UTF8ToString(w))}return s.push([u,g,b]),[s.length-1,h,m]},t.releaseSession=function(e){var t=c.getInstance(),n=s[e];if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],i=n[1],a=n[2];i.forEach(t._OrtFree),a.forEach(t._OrtFree),t._OrtReleaseSession(r),s[e]=void 0};var f=function(e){switch(e){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int32\\\";case 13:return\\\"uint32\\\";default:throw new Error(\\\"unsupported data type: \\\"+e)}},l=function(e){switch(e){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"bool\\\":return Uint8Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(\\\"unsupported type: \\\"+e)}};t.run=function(e,t,n,i,o){var d,p=c.getInstance(),h=s[e];if(!h)throw new Error(\\\"invalid session id\\\");var g=h[0],m=h[1],b=h[2],v=t.length,y=i.length,w=0,_=[],O=[],A=[];try{w=(d=r(a.setRunOptions(o),2))[0],_=d[1];for(var E=function(e){var t=n[e][0],r=n[e][1],i=n[e][2],a=void 0,o=void 0;if(Array.isArray(i)){o=4*i.length,a=p._malloc(o),A.push(a);for(var c=a/4,s=0;s<i.length;s++){if(\\\"string\\\"!=typeof i[s])throw new TypeError(\\\"tensor data at index \\\"+s+\\\" is not a string\\\");p.HEAPU32[c++]=u.allocWasmString(i[s],A)}}else o=i.byteLength,a=p._malloc(o),A.push(a),p.HEAPU8.set(new Uint8Array(i.buffer,i.byteOffset,o),a);var f=p.stackSave(),l=p.stackAlloc(4*r.length);try{var d=l/4;r.forEach((function(e){return p.HEAP32[d++]=e}));var h=p._OrtCreateTensor(function(e){switch(e){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(\\\"unsupported data type: \\\"+e)}}(t),a,o,l,r.length);if(0===h)throw new Error(\\\"Can't create a tensor\\\");O.push(h)}finally{p.stackRestore(f)}},S=0;S<v;S++)E(S);var T=p.stackSave(),x=p.stackAlloc(4*v),M=p.stackAlloc(4*v),k=p.stackAlloc(4*y),D=p.stackAlloc(4*y);try{var P=x/4,R=M/4,C=k/4,z=D/4;for(S=0;S<v;S++)p.HEAPU32[P++]=O[S],p.HEAPU32[R++]=m[t[S]];for(S=0;S<y;S++)p.HEAPU32[C++]=0,p.HEAPU32[z++]=b[i[S]];var j=p._OrtRun(g,M,x,v,D,y,k,w),B=[];if(0===j)for(S=0;S<y;S++){var I=p.HEAPU32[k/4+S],F=p.stackSave(),G=p.stackAlloc(16),U=void 0,L=0;try{if(0!==(j=p._OrtGetTensorData(I,G,G+4,G+8,G+12)))throw new Error(\\\"Can't get a tensor data. error code = \\\"+j);var W=G/4,N=p.HEAPU32[W++];L=p.HEAPU32[W++];for(var H=p.HEAPU32[W++],Y=p.HEAPU32[W++],q=[],V=0;V<Y;V++)q.push(p.HEAPU32[H/4+V]);p._OrtFree(H);var X=0===q.length?1:q.reduce((function(e,t){return e*t}));if(\\\"string\\\"===(U=f(N))){for(var J=[],Q=L/4,Z=0;Z<X;Z++){var K=p.HEAPU32[Q++],$=Z===X-1?void 0:p.HEAPU32[Q]-K;J.push(p.UTF8ToString(K,$))}B.push([U,q,J])}else{var ee=new(l(U))(X);new Uint8Array(ee.buffer,ee.byteOffset,ee.byteLength).set(p.HEAPU8.subarray(L,L+ee.byteLength)),B.push([U,q,ee])}}finally{p.stackRestore(F),\\\"string\\\"===U&&L&&p._free(L),p._OrtReleaseTensor(I)}}if(0===j)return B;throw new Error(\\\"failed to call OrtRun(). error code = \\\"+j+\\\".\\\")}finally{p.stackRestore(T)}}finally{O.forEach(p._OrtReleaseTensor),A.forEach(p._free),p._OrtReleaseRunOptions(w),_.forEach(p._free)}},t.endProfiling=function(e){var t=c.getInstance(),n=s[e];if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],i=t._OrtEndProfiling(r);if(0===i)throw new Error(\\\"Can't get an profile file name\\\");t._OrtFree(i)},t.extractTransferableBuffers=function(e){var t,n,r=[];try{for(var a=i(e),o=a.next();!o.done;o=a.next()){var u=o.value[2];!Array.isArray(u)&&u.buffer&&r.push(u.buffer)}}catch(e){t={error:e}}finally{try{o&&!o.done&&(n=a.return)&&n.call(a)}finally{if(t)throw t.error}}return r}},361:function(e,t,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\\\"default\\\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t},o=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,a){function o(e){try{c(r.next(e))}catch(e){a(e)}}function u(e){try{c(r.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,u)}c((r=r.apply(e,t||[])).next())}))},u=this&&this.__generator||function(e,t){var n,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:u(0),throw:u(1),return:u(2)},\\\"function\\\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function u(a){return function(u){return function(a){if(n)throw new TypeError(\\\"Generator is already executing.\\\");for(;o;)try{if(n=1,r&&(i=2&a[0]?r.return:a[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,a[1])).done)return i;switch(r=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){o.label=a[1];break}if(6===a[0]&&o.label<i[1]){o.label=i[1],i=a;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(a);break}i[2]&&o.ops.pop(),o.trys.pop();continue}a=t.call(e,o)}catch(e){a=[6,e],r=0}finally{n=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}},c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;var s,f=a(n(622)),l=c(n(474)),d=c(n(932)),p=!1,h=!1,g=!1,m=function(e,t){return t?e?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":e?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\"};t.initializeWebAssembly=function(e){return o(void 0,void 0,void 0,(function(){var t,r,i,a,o,c,b,v,y,w,_;return u(this,(function(u){switch(u.label){case 0:if(p)return[2,Promise.resolve()];if(h)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(g)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");return h=!0,t=e.initTimeout,r=e.numThreads,i=e.simd,a=r>1&&function(){try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}}(),o=i&&function(){try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}}(),c=\\\"string\\\"==typeof e.wasmPaths?e.wasmPaths:void 0,b=m(!1,a),v=m(o,a),y=\\\"object\\\"==typeof e.wasmPaths?e.wasmPaths[v]:void 0,w=!1,_=[],t>0&&_.push(new Promise((function(e){setTimeout((function(){w=!0,e()}),t)}))),_.push(new Promise((function(e,t){var r=a?l.default:d.default,i={locateFile:function(e,t){return e.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob?URL.createObjectURL(new Blob([n(118)],{type:\\\"text/javascript\\\"})):e===b?null!=y?y:(null!=c?c:t)+v:t+e}};if(a)if(\\\"undefined\\\"==typeof Blob)i.mainScriptUrlOrBlob=f.join(__dirname,\\\"ort-wasm-threaded.js\\\");else{var o=\\\"var ortWasmThreaded=(function(){var _scriptDir;return \\\"+l.default.toString()+\\\"})();\\\";i.mainScriptUrlOrBlob=new Blob([o],{type:\\\"text/javascript\\\"})}r(i).then((function(t){h=!1,p=!0,s=t,e()}),(function(e){h=!1,g=!0,t(e)}))}))),[4,Promise.race(_)];case 1:if(u.sent(),w)throw new Error(\\\"WebAssembly backend initializing failed due to timeout: \\\"+t+\\\"ms\\\");return[2]}}))}))},t.getInstance=function(){if(p&&s)return s;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},t.dispose=function(){var e;!p||h||g||(h=!0,null===(e=s.PThread)||void 0===e||e.terminateAllThreads(),s=void 0,h=!1,p=!1,g=!0)}},747:function(e){\\\"use strict\\\";e.exports=require(\\\"fs\\\")},87:function(e){\\\"use strict\\\";e.exports=require(\\\"os\\\")},622:function(e){\\\"use strict\\\";e.exports=require(\\\"path\\\")},630:function(e){\\\"use strict\\\";e.exports=require(\\\"perf_hooks\\\")},13:function(e){\\\"use strict\\\";e.exports=require(\\\"worker_threads\\\")}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}!function(){\\\"use strict\\\";var e=n(349),t=n(361);self.onmessage=function(n){switch(n.data.type){case\\\"init-wasm\\\":t.initializeWebAssembly(n.data.in).then((function(){return postMessage({type:\\\"init-wasm\\\"})}),(function(e){return postMessage({type:\\\"init-wasm\\\",err:e})}));break;case\\\"init-ort\\\":try{var r=n.data.in,i=r.numThreads,a=r.loggingLevel;e.initOrt(i,a),postMessage({type:\\\"init-ort\\\"})}catch(e){postMessage({type:\\\"init-ort\\\",err:e})}break;case\\\"create\\\":try{var o=n.data.in,u=o.model,c=o.options,s=e.createSession(u,c);postMessage({type:\\\"create\\\",out:s})}catch(e){postMessage({type:\\\"create\\\",err:e})}break;case\\\"release\\\":try{var f=n.data.in;e.releaseSession(f),postMessage({type:\\\"release\\\"})}catch(e){postMessage({type:\\\"release\\\",err:e})}break;case\\\"run\\\":try{var l=n.data.in,d=l.sessionId,p=l.inputIndices,h=l.inputs,g=l.outputIndices,m=(c=l.options,e.run(d,p,h,g,c));postMessage({type:\\\"run\\\",out:m},e.extractTransferableBuffers(m))}catch(e){postMessage({type:\\\"run\\\",err:e})}break;case\\\"end-profiling\\\":try{f=n.data.in,e.endProfiling(f),postMessage({type:\\\"end-profiling\\\"})}catch(e){postMessage({type:\\\"end-profiling\\\",err:e})}}}}()}();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","module.exports = require(\"fs\");;","module.exports = require(\"os\");;","module.exports = require(\"path\");;","module.exports = require(\"perf_hooks\");;","module.exports = require(\"util\");;","module.exports = require(\"worker_threads\");;","module.exports = require(\"onnxruntime-common\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6018);\n"],"sourceRoot":""}