{"version":3,"sources":["webpack://onnxruntime-web/webpack/universalModuleDefinition","webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm.js","webpack://onnxruntime-web/./node_modules/@protobufjs/aspromise/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/base64/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/eventemitter/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/float/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/inquire/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/pool/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/utf8/index.js","webpack://onnxruntime-web/./node_modules/flatbuffers/js/flatbuffers.mjs","webpack://onnxruntime-web/./node_modules/guid-typescript/dist/guid.js","webpack://onnxruntime-web/./node_modules/long/src/long.js","webpack://onnxruntime-web/./node_modules/onnx-proto/dist/onnx.js","webpack://onnxruntime-web/./node_modules/protobufjs/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/index-minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader_buffer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/roots.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc/service.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/longbits.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer_buffer.js","webpack://onnxruntime-web/./lib/backend-onnxjs.ts","webpack://onnxruntime-web/./lib/backend-wasm.ts","webpack://onnxruntime-web/./lib/index.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute-with-cache-key.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute.ts","webpack://onnxruntime-web/./lib/onnxjs/backend.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/backend-webgl.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-definitions.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-function-inliner.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-preprocessor.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-registered-libs.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-source.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-vec-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/inference-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/op-resolve-rules.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/batch-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/binary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-grouped.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/depth-to-space.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/dot-product.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/flatten.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/fuse-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gather.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gemm.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/image-scaler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/instance-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/packing-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pad.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pool.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reduce.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/resize-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/shape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/slice.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/softmax.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/split.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/squeeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/sum.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/tile.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/transpose.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/uint8-encode.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unpack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unsqueeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/upsample.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/program-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-data-encoder.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout-strategy.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/types.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context-factory.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context.ts","webpack://onnxruntime-web/./lib/onnxjs/execution-plan.ts","webpack://onnxruntime-web/./lib/onnxjs/graph.ts","webpack://onnxruntime-web/./lib/onnxjs/instrument.ts","webpack://onnxruntime-web/./lib/onnxjs/model.ts","webpack://onnxruntime-web/./lib/onnxjs/operators.ts","webpack://onnxruntime-web/./lib/onnxjs/opset.ts","webpack://onnxruntime-web/./lib/onnxjs/ort-schema/ort-generated.ts","webpack://onnxruntime-web/./lib/onnxjs/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/session.ts","webpack://onnxruntime-web/./lib/onnxjs/tensor.ts","webpack://onnxruntime-web/./lib/onnxjs/util.ts","webpack://onnxruntime-web/./lib/wasm/options-utils.ts","webpack://onnxruntime-web/./lib/wasm/proxy-wrapper.ts","webpack://onnxruntime-web/./lib/wasm/run-options.ts","webpack://onnxruntime-web/./lib/wasm/session-handler.ts","webpack://onnxruntime-web/./lib/wasm/session-options.ts","webpack://onnxruntime-web/./lib/wasm/string-utils.ts","webpack://onnxruntime-web/./lib/wasm/wasm-core-impl.ts","webpack://onnxruntime-web/./lib/wasm/wasm-factory.ts","webpack://onnxruntime-web/./lib/wasm/proxy-worker/main.ts","webpack://onnxruntime-web/./node_modules/worker-loader/dist/runtime/inline.js","webpack://onnxruntime-web/external {\"commonjs\":\"onnxruntime-common\",\"commonjs2\":\"onnxruntime-common\",\"root\":\"ort\"}","webpack://onnxruntime-web/webpack/bootstrap","webpack://onnxruntime-web/webpack/runtime/compat get default export","webpack://onnxruntime-web/webpack/runtime/define property getters","webpack://onnxruntime-web/webpack/runtime/global","webpack://onnxruntime-web/webpack/runtime/hasOwnProperty shorthand","webpack://onnxruntime-web/webpack/runtime/make namespace object","webpack://onnxruntime-web/webpack/startup"],"names":["root","factory","exports","module","require","define","amd","a","i","self","__WEBPACK_EXTERNAL_MODULE__2174__","_scriptDir","e","document","currentScript","src","t","B","buffer","P","K","W","n","Y","r","q","z","o","U","G","c","u","s","ready","Promise","f","l","hasOwnProperty","d","p","m","h","g","_","b","y","window","v","importScripts","w","process","versions","node","A","ENVIRONMENT_IS_PTHREAD","T","O","locateFile","__dirname","normalize","readFileSync","Uint8Array","I","readFile","argv","length","replace","slice","on","_n","le","oe","exitCode","exit","inspect","Worker","x","console","error","location","href","indexOf","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","onload","status","onerror","performance","E","k","S","print","log","bind","M","printErr","warn","thisProgram","quit","wasmBinary","D","noExitRuntime","WebAssembly","C","R","j","F","TextDecoder","this","decode","SharedArrayBuffer","call","H","L","subarray","String","fromCharCode","N","V","charCodeAt","X","J","Q","Ht","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","Z","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","Error","byteLength","$","ee","te","ne","re","ie","ae","preRun","shift","unshift","ce","ue","se","fe","onAbort","RuntimeError","de","startsWith","pe","preloadedImages","preloadedAudios","me","1000260","he","Rc","jc","get","ge","Atomics","load","gn","compareExchange","notify","_e","ye","dc","vc","worker","_emscripten_futex_wake","be","hc","fc","Dc","Dd","Vc","store","rn","Jt","Wc","receiveObjectTransfer","bd","threadInit","nd","threadCancel","md","threadExit","Lc","setExitStatus","dd","Cc","Ic","pop","an","Jc","Vt","postMessage","cmd","Kc","terminate","cc","Ac","ec","Nt","zc","ic","cd","push","splice","hn","Yc","onmessage","data","Pc","targetThread","Jd","transferList","Zt","Te","thread","loaded","pc","threadId","text","alert","yn","returnCode","target","filename","lineno","message","urlOrBlob","mainScriptUrlOrBlob","wasmModule","Mc","Sc","td","now","ve","Date","Lt","we","Ne","Ae","nc","kd","gd","hd","ed","jd","Tc","uc","kc","detached","start_routine","ld","arg","threadInfoStruct","stackBase","stackSize","time","sd","Oe","exchange","wait","xe","establishStackSpace","pn","ln","invokeEntryPoint","hrtime","__performance_now_clock_drift","Ee","ke","Se","Me","De","xd","Be","Ce","Re","je","Ie","Fe","yd","Pe","Math","ceil","mn","fill","$c","Xc","Nc","fd","Gd","flags","offset","We","Ye","qe","zd","ze","Ue","Ge","He","Le","arguments","fn","dn","$t","Ve","Xe","Je","querySelector","Qe","tc","Hc","vd","en","sc","rc","getParameter","width","height","viewport","Ke","Ze","$e","et","tt","nt","rt","it","split","ot","at","ct","ut","st","BYTES_PER_ELEMENT","ft","minValue","maxValue","lt","alpha","dt","type","dimensions","pt","windowDimensions","padding","strides","dilations","autoPad","layout","roundingType","outputSizes","mt","ht","gt","_t","bt","yt","vt","wt","At","Tt","Ot","xt","Et","kt","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","St","forEach","Mt","Dt","Bt","Ct","Bd","Ad","Rt","jt","It","toTimeString","match","Oc","getFullYear","getTimezoneOffset","max","sn","un","Number","cn","Ft","Pt","Wt","Yt","qt","getTime","getMonth","getDate","setDate","setMonth","setFullYear","zt","toString","getDay","bc","yc","qd","pd","wc","qc","lc","xc","Kd","od","rd","RegExp","substring","abs","includes","Array","set","mc","ad","create","Bc","object","oc","release","Ut","Gt","cb","Kt","ud","Qt","tn","gb","_a","fb","db","eb","Va","ba","apply","Za","Xa","copyWithin","hardwareConcurrency","Ya","min","grow","setTimeout","stack","nn","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","powerPreference","failIfMajorPerformanceCaveat","Zc","Ed","Fc","Qc","Hd","Id","Gc","getContext","WebGLRenderingContext","Cd","attributes","version","canvas","Uc","getExtension","vertexAttribDivisor","vertexAttribDivisorANGLE","drawArraysInstanced","drawArraysInstancedANGLE","drawElementsInstanced","drawElementsInstancedANGLE","createVertexArray","createVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","bindVertexArray","bindVertexArrayOES","isVertexArray","isVertexArrayOES","drawBuffers","drawBuffersWEBGL","wd","Fd","getSupportedExtensions","Ta","devicePreference","ml","createContext","ab","bb","$a","Wa","wa","hb","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","Ec","getSeconds","getMinutes","getHours","setTime","Sa","Ra","Qa","Pa","La","add","Ka","averagePool2d","Ja","scale","bias","axis","epsilon","activation","batchNormalization","Ia","build","Ha","clamp","Ga","Fa","concat","Ea","constant","Ca","groups","inputLayout","filterLayout","conv2d","Da","outputPadding","convTranspose2d","Ba","beta","aTranspose","bTranspose","gemm","Aa","recurrentBias","initialHiddenState","resetAfter","returnSequence","direction","activations","gru","za","input","ya","leakyRelu","xa","va","matmul","ua","maxPool2d","ja","ta","relu","sa","ra","mode","scales","sizes","axes","resample2d","qa","reshape","pa","sigmoid","oa","na","ma","tanh","la","ka","permutation","transpose","Oa","compute","Na","Ma","ha","ia","resource","fa","ga","da","ea","ca","aa","Ua","MLGraphBuilder","asm","Db","ib","Ib","monitorRunDependencies","clearInterval","instance","fetch","credentials","then","ok","arrayBuffer","catch","resolve","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_OrtInit","jb","_OrtCreateSessionOptions","kb","_OrtSessionOptionsAppendExecutionProviderWebNN","lb","_OrtAddSessionConfigEntry","mb","_OrtReleaseSessionOptions","nb","_OrtCreateSession","ob","_OrtReleaseSession","pb","_OrtGetInputCount","qb","_OrtGetOutputCount","rb","_OrtGetInputName","sb","_OrtGetOutputName","tb","_OrtFree","ub","_OrtCreateTensor","vb","_OrtGetTensorData","wb","_OrtReleaseTensor","xb","_OrtCreateRunOptions","yb","_OrtAddRunConfigEntry","zb","_OrtReleaseRunOptions","Ab","_OrtRun","Bb","_OrtEndProfiling","Cb","_malloc","Eb","___errno_location","Fb","_free","Gb","_pthread_self","Hb","_emscripten_tls_init","_emscripten_current_thread_process_queued_calls","Jb","Xt","_emscripten_register_main_browser_thread_id","Kb","_emscripten_main_browser_thread_id","Lb","_emscripten_sync_run_in_main_thread_4","Mb","_emscripten_main_thread_process_queued_calls","Nb","_emscripten_run_in_main_runtime_thread_js","Ob","__emscripten_call_on_thread","Pb","_pthread_testcancel","Qb","_pthread_exit","Rb","__emscripten_thread_init","Sb","_emscripten_get_global_libc","Tb","___pthread_tsd_run_dtors","Ub","__get_tzname","Vb","__get_daylight","Wb","__get_timezone","Xb","stackSave","Yb","stackRestore","Zb","stackAlloc","_b","_emscripten_stack_set_limits","$b","_memalign","ac","__emscripten_allow_main_runtime_queued_calls","__emscripten_main_thread_futex","name","bn","calledRun","onRuntimeInitialized","postRun","setStatus","_fflush","onExit","UTF8ToString","stringToUTF8","lengthBytesUTF8","keepRuntimeAlive","PThread","ExitStatus","run","preInit","ortWasm","undefined","ctx","params","index","pending","reject","err","base64","string","charAt","b64","s64","encode","start","end","parts","chunk","join","invalidEncoding","test","EventEmitter","_listeners","prototype","evt","off","listeners","emit","args","f32","f8b","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","floor","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","Object","keys","alloc","size","SIZE","MAX","slab","utf8","len","read","write","c1","c2","flatbuffers","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","SIZE_PREFIX_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","float32","float64","isLittleEndian","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","position","prep","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","value","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","finish","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","finishSizePrefixed","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","__offset","bb_pos","vtable_offset","__union","__string","opt_encoding","__indirect","__vector","__vector_len","__has_identifier","ident","__esModule","Guid","guid","TypeError","EMPTY","isGuid","validator","gen","createEmpty","parse","raw","count","out","random","isEmpty","toJSON","wasm","Instance","Module","unsigned","isLong","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","str","radix","RangeError","radixToPower","parseInt","power","mul","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","lessThan","comp","lessThanOrEqual","lte","greaterThan","greaterThanOrEqual","gte","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","valuesById","values","onnx","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Version","AttributeProto","properties","floats","ints","strings","tensors","graphs","refAttrName","docString","newBuffer","emptyArray","writer","uint32","float","int64","TensorProto","fork","ldelim","GraphProto","encodeDelimited","reader","tag","end2","skipType","decodeDelimited","verify","isString","isInteger","isArray","fromObject","LongBits","toObject","options","arrays","defaults","long","longs","enums","json","isFinite","AttributeType","constructor","toJSONOptions","ValueInfoProto","TypeProto","NodeProto","output","attribute","opType","domain","ModelProto","opsetImport","metadataProps","irVersion","producerName","producerVersion","modelVersion","graph","OperatorSetIdProto","StringStringEntryProto","key","TensorAnnotation","quantParameterTensorNames","tensorName","initializer","valueInfo","quantizationAnnotation","dims","floatData","int32Data","stringData","int64Data","externalData","doubleData","uint64Data","dataType","segment","rawData","dataLocation","Segment","double","uint64","DataLocation","DataType","begin","TensorShapeProto","dim","Dimension","$oneOfFields","dimValue","dimParam","denotation","oneOfGetter","oneOfSetter","oneofs","tensorType","Tensor","elemType","shape","protobuf","configure","_configure","BufferWriter","BufferReader","rpc","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","sint32","bool","fixed32","sfixed32","skip","wireType","BufferReader_","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","asPromise","endedByRPC","zero","zzEncode","zeroHash","from","toLong","fromHash","hash","toHash","mask","part0","part1","part2","dst","ifNotSet","newError","CustomError","captureStackTrace","pool","isNode","global","freeze","emptyObject","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","ProtocolError","fieldNames","fieldMap","encoding","allocUnsafe","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","onnxjsBackend","pathOrBuffer","session","Session","loadModel","OnnxjsSessionHandler","initializeFlags","env","initTimeout","simd","proxy","numThreads","numCpuLogicalCores","cpus","wasmBackend","initWasm","promisify","handler","OnnxruntimeWebAssemblySessionHandler","registerBackend","AttributeWithCacheKeyImpl","assign","_cacheKey","getOwnPropertyNames","sort","map","createAttributeWithCacheKey","ortFbs","onnxruntime","experimental","fbs","Attribute","_attributes","Map","attr","getValue","getType","delete","valueAndType","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","attrType","GRAPH","GRAPHS","getValueNoCheck","LongUtil","longToNumber","arr","numberValue","maybeLong","fromProto","fromOrtTensor","utf8String","byteOffset","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","floatsArray","intsLength","stringsLength","tensorsLength","backendsCache","tryLoadBackend","backendHint","backendObj","backend","initialize","createSessionHandler","dispose","isBackend","init","webgl","WebGLBackend","resolveBackend","hint","hints","contextId","matmulMaxBatchSize","textureCacheMode","pack","async","glContext","createWebGLContext","Logger","setWithEnv","verbose","warning","context","WebGLSessionHandler","CoordsGlslLib","GlslLib","super","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","GlslLibRoutine","outputLayout","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","outShape","unpackedShape","outTexShape","funcName","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","floatTextureSetRGBASource","getGlsl","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetRSource","texShape","packedTexShape","source","ArrayUtil","arraysEqual","texelsInLogicalRow","texelsInBatch","texelsInBatchN","batches","coords","rank","coordsToCompute","coordsFromIndexSnippet","stride","glsl","texture2D","programInfo","inputNames","samplerName","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","outCoordFuncName","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","inShape","texName","texFuncSnippet","inRank","outRank","broadcastDims","BroadcastUtil","getBroadcastDims","getCoordsDataType","rankDiff","coordsSnippet","fields","getGlChannels","unpackedCoordsSnippet","isInputScalar","ShapeUtil","isOutputScalar","rows","cols","inTexShape","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","texNumR","texNumC","packedSampler","valuesPerRow","squeezedShape","keptDims","newInputShape","squeezeInputShape","newInputLayout","JSON","stringify","samplerRoutine","routineBody","getSqueezedParams","dependencies","tNumR","tNumC","newShape","squeezeShape","stride0","stride1","routine","revDims","reverse","stride2","stride3","stride4","xScale","yScale","stridesBlock","body","getValueFromSingle","varName","FunctionType","nodes","cycleCheck","Set","alreadyTraversed","createOrderedNodes","graphNodes","dfsTraverse","has","EncodingGlslLib","encodeFloat32","decodeFloat32","endianness","ArrayBuffer","FragColorGlslLib","setFragColor","getColorAsFloat","INLINE_FUNC_DEF_REGEX","script","inlineDefs","exec","tokens","trim","filter","regexString","regex","variable","declLine","newBody","paramRedecLine","replacement","libs","glslLibRoutineDependencyGraph","GlslContext","glslRegistry","lib","libName","routinesInLib","getFunctions","currentNode","GlslLibRoutineNode","addDependency","shaderSource","hasMain","getDefaultFragShaderMain","replaceInlines","getFragShaderPreamble","getUniforms","variables","getImports","routinesIncluded","selectGlslLibRoutinesToBeIncluded","routines","classAndRoutine","TopologicalSortGlslRoutines","returnOrderedNodes","samplers","uniformLines","sampler","arrayLength","VecGlslLib","ShapeUtilsGlslLib","bcastIndex","bcastMatmulIndex","offsetToIndices","indicesToOffset","incrementIndices","outputRank","dimOffset","block","indexToOffsetSingle","offsetToIndicesSingle","shapeInit","GLSL_ES_2_0","varyingVertex","varyingFrag","outputDeclaration","GLSL_ES_3_0","outputShapeLength","binaryVecFunctions","copyVec","setVecItem","getVecItem","nameOp","fname","assignmentBlock","packedTextureDataCache","unpackedTextureDataCache","textureType","calculateTextureWidthAndHeight","layoutStrategy","program","inputs","inputTypes","inputTextureDatas","getOrCreateTextureData","texture","cacheHint","getProgramInfoUniqueKey","artifact","programManager","getArtifact","createTextureLayoutFromTextureType","outputTextureData","createTextureData","setArtifact","runProgram","executeProgram","tensor","TextureType","packed","getTextureData","dataId","unpack","packedLastDimension","group","channels","adjustedKernelShape","adjustedLayout","numberData","numFeatureMaps","oldRowSize","newRowSize","oldOffset","newOffset","unpackedTextureLayout","createTextureLayoutFromShape","reverseWH","unpackedTextureData","usage","textureManager","createTextureFromLayout","createTextureDataFromTexture","reshapedDims","inputTD","unpacked","newTextureLayout","computeStrides","isReshapeCheap","squeezedInputShape","processDims3D","squeezedOutputShape","squeezedInputTensor","reshapePacked","squeezedOutputTensor","createPackedReshape3DProgramInfoLoader","tensorId","textureData","_id","readTexture","readTextureAsync","setTextureData","isInitializer","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WEBGL_OP_RESOLVE_RULES","unaryOps","acos","binaryOps","asin","atan","averagePool","parseAveragePoolAttributes","parseBatchNormalizationAttributes","clip","parseClipAttributes","parseConcatAttributes","conv","parseConvAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","exp","flatten","parseFlattenAttributes","gather","parseGatherAttributes","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","parseLeakyReluAttributes","less","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","parsePadAttributes","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","resize","parseResizeAttributesV10","parseResizeAttributesV11","sin","sliceV10","parseSliceAttributes","softmax","parseSoftmaxAttributes","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","sum","tan","tile","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","batchNormalizationProgramMetadata","inferenceHandler","validateInputs","cacheKey","createBatchNormalizationProgramInfo","getFloat","momentum","spatial","getInt","scaleWidth","scaleHeight","mean","var_","glslAdd","ValueBased","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslBuiltinBinary","glslPRelu","createBinaryProgramInfoLoader","glslFunc","outputTensorType","createBinaryProgramInfo","isBroadcast","areEqual","outputShape","usePackedTexture","calculatedShape","calcShape","aRank","bRank","aBcast","bBcast","createPackedConcatProgramInfoLoader","metadata","inputCount","inputShape","dataNShape","axisIndex","getChannels","dtype","unpackChannel","unpackFromChannel","shapes","offsets","channel","lastChannels","allChannels","getValueSnippet","getShiftedChannelsSnippet","lastIndex","createPackedConcatProgramInfo","channelIdx","idx","createUnpackedConcatProgramInfoLoader","sizeInConcatAxis","previousSum","getTextureIndexWhereDataResidesMethod","getTextureIndexWhereDataResidesLinearSearch","getTextureIndexWhereDataResidesBinarySearch","getFetchDataFromCorrectTextureMethod","getGetSizeInConcatAxisValueFromIndexMethod","createUnpackedConcatProgramInfo","numberOfTensors","tensorRank","codeLines","inputType","inputDimensionality","createUnpackedGroupedConvProgramInfoLoader","hasBias","processBias","xShape","wShape","outputChannelsPerGroup","kernelShape","pads","calculateOutputShape","activationFunction","applyActivation","getActicationSnippet","createUnpackedGroupedConvProgramInfo","conv2DPackedPointwise","xshape","kshape","reshapedX","reshapedK","matmulInputs","matmulOutput","createPackedMatmulProgramInfoLoader","conv2DPacked","im2colOutput","createPackedIm2ColProgramInfoLoader","kernelReshaped","adjustPads","batchSize","inputSpatialShape","spatialRank","outChannels","dilatedKernelShape","outputSpatialShape","adjustedAttributes","getAdjustedConvAttributes","packMode","isPointwise","conv2DUnpackedPointwise","conv2DUnpacked","reshapeUnpacked","createMatmulProgramInfoLoader","xIm2Col","createIm2ColProgramInfoLoader","dotProductInputs","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","newAttributes","activationAttributes","parseInternalActivationAttributes","getString","getInts","blocksize","blocksizeSqr","transposePerm","firstReshapeShape","firstReshapedTensor","transposeAttributes","perm","transposeOutput","secondReshapeShape","activationCacheKey","createDotProductProgramMetadata","im2colShape","calculateIm2ColDims","kWidth","kHeight","im2colStrides","im2colWidth","im2colHeight","initValue","sharedDim","createDotProductProgramInfo","outputDims","flattenShape","func","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","activationName","createGatherProgramInfoLoader","gatherProgramMetadata","indexDataShape","normalizeAxis","indexCopyOps","createGatherProgramInfo","NUMBER_TYPES","createGemmProgramInfoLoader","parseGemmAttributes","isOptionalC","transA","transB","createGemmProgramInfo","aShape","bShape","GemmUtil","getShapeOfGemmResult","line","wshape","kernelSize","unrolled","row","col","createPackedIm2ColProgramInfo","im2colDims","createIm2ColProgramInfo","createImageScalerProgramInfoLoader","getFloats","imageScalerProgramMetadata","createGetBiasMethod","createImageScalerProgramInfo","numChannels","meanAndVariance","createMeanAndVarianceProgramInfoLoader","createComputeOutputProgramInfoLoader","meanAndVarianceProgramMetadata","xDims","channelSize","createMeanAndVarianceProgramInfo","computeOutputProgramMetadata","meanAndVarianceShape","textureWidth","textureHeight","meanAndVarianceWidth","meanAndVarianceHeight","createComputeOutputProgramInfo","sharedDimIndex","coordsDataType","allGlChannels","getBiasForMatmulSnippet","getBiasForMatmul","getBcastedSamplerForMatmulSnippet","unpackedACoordsSnippet","unpackedBCoordsSnippet","inAShape","inBShape","inARank","inBRank","rankADiff","rankBDiff","broadcastADims","broadcastBDims","coordsASnippet","coordsBSnippet","swapDimSnippet","getBcastSamplerForMatmul","getSamplerAInLoopSnippet","getA","getSamplerBInLoopSnippet","getB","createPackedMatmulProgramInfo","arank","brank","createMatmulProgramInfo","packProgramMetadata","unpackedReversed","inputRank","setup","reversedInputWH","outOfBoundsCondition","cond","getOutOfBoundsCondition","getOutput","createPackProgramInfo","getVecChannels","padProgramMetadata","createPadProgramInfo","padShape","getPadFunction","getPadConstant","getPadReflect","getPadEdge","createAveragePoolProgramInfo","ceilMode","countIncludePad","isGlobalOperator","adjustPoolAttributes","computePoolOutputShape","op2","generatePoolingCode","createMaxPoolProgramInfo","storageOrder","globalMaxPoolAttributes","globalMaxPoolMetadata","inputDims","op1","kw","sw","pwStart","pwEnd","dimW","codeW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimH","kernelStrides","stridesRank","padsRank","offsetToIndicesFunction","copyInputDims","copyArray","copyPads","copyKernelStrides","copyStrides","padCode","reduce","cur","array","arrayName","reduceOp","reduceProgramMetadata","createReduceProgramInfo","keepDims","iRank","idxCopy","normalizeAxes","ops","reduceOps","idxZero","input3D","outputShape3D","createPackedReshape3DProgramMetadata","inputShape3D","mainLoop","outputCoords","getReshapedInputCoords","getFlattenedIndexFrom3D","createPackedReshape3DProgramInfo","batch","isCheapReshape","calculateReshapedDims","integerData","resizeProgramMetadata","createPackedResizeProgramInfo","parseUpsampleAttributes","prepareInputs","every","coordinateTransformMode","outputHeight","outputWidth","inputHeight","inputWidth","scalesHeight","scalesWidth","getSourceFracIndex","scalesTensor","scalesInputIdx","sizesInputIdx","parseScalesData","isResize","sizesTensor","parseScalesDataFromOutputSize","yDims","scalesValidation","sliceProgramMetadata","createSliceProgramInfo","starts","ends","normalizedAxes","sliceOps","validateInputsV10","generateSliceAttributesFromInputs","some","softmaxComputeMaxProgramMetadata","softmaxComputeScaleProgramMetadata","softmaxProgramMetadata","sizeToDimension","sizeFromDimension","computeMaxProgramInfo","createComputeMaxProgramInfo","computeScaleProgramInfo","createComputScaleProgramInfo","softMaxProgramInfo","createSoftMaxProgramInfo","maxElementPerLogicalRow","normalizationPerLogicalRow","splitProgramMetadata","getProgramCount","createSplitProgramInfo","numOutputs","outputs","SplitUtil","splitShape","sumProgramMetadata","createSumProgramInfo","tileProgramMetadata","createTileProgramInfo","tileOps","transposeProgramMetadata","createTransposeProgramInfo","getAdjustedPerm","unpackedOutputShape","getOutputShape","getPermFunctionBody","sortBasedOnPerm","reverseFunc","downloadUint8AsFloat","glslAbs","glslBuiltinUnary","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createElementwiseProgramInfoLoader","createElementwiseProgramInfo","unpackProgramMetadata","createUnpackProgramInfo","innerDims","sourceCoords","getSourceCoords","unsqueezeShape","upsampleProgramMetadata","createUpsampleProgramInfo","opset","extrapolationValue","needRoiInput","useExtrapolation","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","outputPitches","inputPitches","precalculatedPitches","getInputFloatFunction","profiler","textureLayoutStrategy","repo","attributesBound","buildArtifact","event","gl","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","draw","vertexShader","deleteShader","deleteProgram","preprocessor","GlslPreprocessor","fragScript","preprocess","compile","getUniformLocations","getAttribLocations","fragShaderScript","vertexShaderScript","getVertexShaderSource","compileShader","VERTEX_SHADER","debug","fragShader","FRAGMENT_SHADER","createProgram","attachFramebuffer","positionHandle","textureCoordHandle","textureCoord","setVertexAttributes","textures","texturePosition","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","uniformHandle","bindTextureToUniform","getAttribLocation","getUniformLocation","reference","PreferLogicalStrategy","maxTextureSize","ProgramManager","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","WebGLInferenceHandler","initializers","getValues","opsets","op","resolveOperator","impl","opImpl","opInit","internalFormat","R32F","format","RED","RGBA32F","RGBA","textureSize","dataSize","dest","ALPHA","UNSIGNED_BYTE","_textureSize","isEmptyArray","parseAxisParam","assert","ax","isInt","sizeFromShape","sizeToSquarishShape","prefs","breakAxis","wsize","hsize","totalSize","wh","computeTexture","logShape","squeezeResult","dimsToSkip","computeTextureWH","inferredDims","reversedWH","config","pendingRead","inUseTextures","idleTextures","textureLookup","textureDataType","toEncoderType","encoder","getEncoder","updateTexture","toTextureData","allocateTexture","toTensorData","subscribers","createAndWaitForFence","tensorData","deleteTexture","_dataType","checkFn","delayFn","_counter","maxCounter","tryCount","tryFn","nextBackoff","toUpperCase","createNewWebGLContext","createElement","createCanvas","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","linearSearchLastTrue","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","scissor","readPixels","ACTIVE_TEXTURE","TEXTURE0","TEXTURE_BINDING_2D","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","shaderType","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","label","DataEncoders","RedFloat32DataEncoder","isRenderFloat32Supported","RGBAFloatDataEncoder","textureHalfFloatExtension","HALF_FLOAT_OES","Uint8DataEncoder","unit","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","createBuffer","geometry","createDefaultGeometry","bufferData","STATIC_DRAW","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","frameBuffer","isComplete","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","fragmentShader","POINTS","NO_ERROR","gl2","ext","query","createQuery","beginQuery","TIME_ELAPSED_EXT","endQuery","available","disjoint","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","timeElapsed","QUERY_RESULT","deleteQuery","repeatedTry","isTimerResultAvailable","getTimerResult","fenceContext","createFence","pollFence","isFencePassed","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","addItemToPoll","isDoneFn","resolveFn","pollItems","KernelOp","getNodes","_ops","_starter","resolved","_values","getInputIndices","sessionHandler","modelInputs","createInferenceHandler","graphInputs","sequence","graphValues","rear","thisOpIndex","thisOp","inputList","inputTensors","outputList","downstreamNodes","currentDownstreamNodeIndex","to","currentDownstreamNode","getOutputIndices","outputIndex","outputTensor","getData","Graph","graphProto","GraphImpl","Value","_from","_to","ProtoUtil","tensorValueTypeFromProto","Node","_nodeProto","tensorAttributesFromORTFormat","executeNode","graphInitializer","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","_allInputNames","_allOutputIndices","_allOutputNames","_allData","_nodes","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","dataIndices","nodesIndices","inputValueNames","currentIndex","tensorDimsFromProto","tensorDataTypeFromProto","nodeProto","pick","dataIndex","inputsLength","inputName","nodeArgsLength","nodeArgs","valueType","TypeInfoValue","tensor_type","TensorTypeAndShape","dimLength","initializersLength","tensorDimsFromORTFormat","outputsLength","outputName","nodesLength","attributesLength","starters","nodesStack","nodesState","nodeIndex","outgoingEdgeIndex","downstreamNodeIndex","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","ind","inputValueIndex","outputValueIndex","nodesConsumingOutput","delIndex","replaceIndex","deleteNode","isActivation","child","SEVERITY_VALUE","info","fatal","LOGGER_PROVIDER_MAP","_severity","_content","_category","severity","content","category","color","LOGGER_DEFAULT_CONFIG","provider","minimalSeverity","logDateTime","logSourceLocation","LOGGER_CONFIG_MAP","arg0","arg1","arg2","arg3","logInternal","toISOString","previousConfig","logLevel","Event","startTime","endCallback","timer","endTimer","waitForQueryAndGetTime","EventRecord","endTime","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","_timingEvents","_flushTime","logOneEvent","isPromise","reason","eventRes","endSync","beginTimer","checkTimer","toFixed","currentTime","previousPointer","isOrtFormat","loadFromOnnxFormat","loadFromOrtFormat","modelProto","_opsets","_graph","ortModel","InferenceSession","getRootAsInferenceSession","model","opsetImportLength","opsetId","INT_TYPES","FLOAT_TYPES","matchSelector","selector","endsWith","rangeStart","pair","rangeEnd","rules","rule","versionSelector","DimensionValueType","TensorDataType","NodeType","Shape","__init","builder","numElems","startShape","addDim","endShape","DimensionValue","optionalEncoding","valueOffset","denotationOffset","startDimension","addValue","addDenotation","endDimension","UNKNOWN","dimType","dimParamOffset","startDimensionValue","addDimType","addDimValue","addDimParam","endDimensionValue","UNDEFINED","shapeOffset","startTensorTypeAndShape","addElemType","addShape","endTensorTypeAndShape","MapType","TypeInfo","keyType","valueTypeOffset","startMapType","addKeyType","addValueType","endMapType","SequenceType","elemTypeOffset","startSequenceType","endSequenceType","EdgeEnd","node_index","src_arg_index","dst_arg_index","NodeEdge","inputEdgesOffset","outputEdgesOffset","startNodeEdge","addNodeIndex","addInputEdges","addOutputEdges","endNodeEdge","Primitive","nameOffset","docStringOffset","domainOffset","sinceVersion","opTypeOffset","executionProviderTypeOffset","inputsOffset","outputsOffset","attributesOffset","inputArgCountsOffset","implicitInputsOffset","startNode","addName","addDocString","addDomain","addSinceVersion","addIndex","addOpType","addType","addExecutionProviderType","addInputs","addOutputs","addAttributes","addInputArgCounts","addImplicitInputs","endNode","ValueInfo","typeOffset","startValueInfo","endValueInfo","NONE","startTypeInfo","endTypeInfo","OperatorSetId","startOperatorSetId","addVersion","endOperatorSetId","dimsOffset","rawDataOffset","stringDataOffset","startTensor","addDims","addDataType","addRawData","addStringData","endTensor","SparseTensor","valuesOffset","indicesOffset","startSparseTensor","addValues","addIndices","endSparseTensor","sOffset","tOffset","gOffset","floatsOffset","intsOffset","stringsOffset","tensorsOffset","graphsOffset","startAttribute","addF","addI","addS","addT","addG","addFloats","addInts","addStrings","addTensors","addGraphs","endAttribute","initializersOffset","nodeArgsOffset","nodesOffset","maxNodeIndex","nodeEdgesOffset","sparseInitializersOffset","startGraph","addInitializers","addNodeArgs","addNodes","addMaxNodeIndex","addNodeEdges","addSparseInitializers","endGraph","Model","opsetImportOffset","producerNameOffset","producerVersionOffset","graphOffset","graphDocStringOffset","startModel","addIrVersion","addOpsetImport","addProducerName","addProducerVersion","addModelVersion","addGraph","addGraphDocString","endModel","KernelCreateInfos","nodeIndicesOffset","kernelDefHashesOffset","startKernelCreateInfos","addNodeIndices","addKernelDefHashes","endKernelCreateInfos","SubGraphSessionState","SessionState","graphIdOffset","sessionStateOffset","startSubGraphSessionState","addGraphId","addSessionState","endSubGraphSessionState","kernelsOffset","subGraphSessionStatesOffset","startSessionState","addKernels","addSubGraphSessionStates","endSessionState","ortVersionOffset","modelOffset","startInferenceSession","addOrtVersion","addModel","endInferenceSession","outputNames","feeds","_fetches","_options","inputMap","feed","outputMap","startProfiling","endProfiling","_initialized","Profiler","graphInputTypes","graphInputDims","_model","getInputNames","getOutputNames","stop","isView","modelProtoBlob","onGraphInitialized","initializeOps","_executionPlan","ExecutionPlan","normalizeAndValidateInputs","outputTensors","execute","createOutput","modelInputNames","sortedInputs","sortedInputsIndex","validateInputTensorDims","modelInputIndices","modelValues","graphInput","validateInputTensorTypes","givenInputs","expectedType","actualType","noneDimSupported","expectedDims","actualDims","compareTensorDims","modelOutputNames","dataProvider","asyncDataProvider","validateDimsAndCalcSize","empty","dataviewConstructor","sizeof","createView","indices","_strides","tensorProto","dataDest","dataSource","DataView","elementSize","sizeofProto","readProto","INT32","INT16","UINT16","INT8","UINT8","BOOL","INT64","DOUBLE","UINT32","UINT64","element","ortTensor","stringDataLength","rawDataArray","rawDataLength","view","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","getFloat64","expectedDimensions","expr","msg","n1","n2","MatMulUtil","dimsA","dimsB","adims","bdims","isMatMul","crank","cdims","cShapeMatMul","calcMatMulShape","aLen","bLen","broadcastedIndices","originalShape","originalIndices","fillIndex","inplace","resultType","outputIndices","originalIndicesA","originalIndicesB","rest","valA","valB","isAScalar","isBScalar","finalShape","finalRank","targetIndex","sourceIndex","blockSize","leftShape","transLeft","rightShape","transRight","biasShape","kDim","isValidBroadcast","typeProto","dimsLength","getSizeFromDimensionRange","axisToIncrementOn","originalDims","shapeHints","nDims","unknownDimension","newTensorSize","oldTensorSize","shape1","shape2","total","right","inSqueezeList","inputDimsIterator","determineSplit","numElementsAlongAxis","ReduceUtil","keepdims","calcReduceShape","inputStrides","indicesY","calcReduceByAxis","curAxisInd","step","adjustPadAndReturnShape","computeShapeHelper","filterDims","inSize","dilation","kernel","padHeadIndex","padTailIndex","dkernel","padNeeded","iterateExtraOptions","prefix","seen","entries","isProxy","proxyWorker","initWasmCallbacks","initOrtCallbacks","initializing","initialized","aborted","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","ev","scriptSrc","wasmPaths","in","initializeWebAssembly","initOrt","loggingLevel","core","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","allocWasmString","extra","WeakSet","keyDataOffset","valueDataOffset","ortInit","getLogLevel","fetches","inputArray","kvp","setSessionOptions","sessionOptionsHandle","sessionOptions","use_ort_model_bytes_directly","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","enableCpuMemArena","enableMemPattern","executionMode","getExecutionMode","logIdDataOffset","logId","enableProfiling","executionProviders","ep","webnnOptions","preferenceValues","devicePreferenceNames","powerPreferenceNames","dataLength","dataOffset","errorCode","activeSessions","modelDataOffset","sessionHandle","outputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","tensorDataTypeStringToEnum","tensorDataTypeEnumToString","numericTensorTypeToTypedArray","BigInt64Array","BigUint64Array","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","dimIndex","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","beforeGetTensorDataStack","tensorDataOffset","tensorDataIndex","maxBytesToRead","profileFileName","buffers","getWasmFileName","useSimd","useThreads","timeout","MessageChannel","port1","validate","isMultiThreadSupported","isSimdSupported","wasmPrefixOverride","wasmFileName","wasmOverrideFileName","wasmPathOverride","isTimeout","tasks","fileName","scriptDirectory","Blob","URL","createObjectURL","path","scriptSourceCode","what","race","terminateAllThreads","Worker_fn","workerConstructor","workerOptions","url","globalScope","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","revokeObjectURL","encodeURIComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","enumerable","globalThis","Function","Symbol","toStringTag","__webpack_exports__"],"mappings":"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GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,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","file":"ort-web.es6.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"onnxruntime-common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"onnxruntime-common\")) : factory(root[\"ort\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function(__WEBPACK_EXTERNAL_MODULE__2174__) {\nreturn ","var _scriptDir,e=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e){function t(){return B.buffer!=P&&K(B.buffer),W}function n(){return B.buffer!=P&&K(B.buffer),Y}function r(){return B.buffer!=P&&K(B.buffer),q}function i(){return B.buffer!=P&&K(B.buffer),z}function o(){return B.buffer!=P&&K(B.buffer),U}function a(){return B.buffer!=P&&K(B.buffer),G}var c,u,s;e=e||{},c||(c=void 0!==e?e:{}),c.ready=new Promise((function(e,t){u=e,s=t}));var f,l={};for(f in c)c.hasOwnProperty(f)&&(l[f]=c[f]);var d=\"./this.program\";function p(e,t){throw t}var m,h,g,_,b,y=\"object\"==typeof window,v=\"function\"==typeof importScripts,w=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,A=c.ENVIRONMENT_IS_PTHREAD||!1,T=\"\";function O(e){return c.locateFile?c.locateFile(e,T):T+e}if(w){if(T=v?require(\"path\").dirname(T)+\"/\":__dirname+\"/\",m=function(e,t){return _||(_=require(\"fs\")),b||(b=require(\"path\")),e=b.normalize(e),_.readFileSync(e,t?null:\"utf8\")},g=function(e){return(e=m(e,!0)).buffer||(e=new Uint8Array(e)),I(e.buffer),e},h=function(e,t,n){_||(_=require(\"fs\")),b||(b=require(\"path\")),e=b.normalize(e),_.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",(function(e){if(!(e instanceof _n))throw e})),process.on(\"unhandledRejection\",le),p=function(e,t){if(oe())throw process.exitCode=e,t;process.exit(e)},c.inspect=function(){return\"[Emscripten Module object]\"},void 0===global.Worker){var x;try{x=require(\"worker_threads\")}catch(e){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=x.Worker}}else(y||v)&&(v?T=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(T=document.currentScript.src),_scriptDir&&(T=_scriptDir),T=0!==T.indexOf(\"blob:\")?T.substr(0,T.lastIndexOf(\"/\")+1):\"\",w?(m=function(e,t){return _||(_=require(\"fs\")),b||(b=require(\"path\")),e=b.normalize(e),_.readFileSync(e,t?null:\"utf8\")},g=function(e){return(e=m(e,!0)).buffer||(e=new Uint8Array(e)),I(e.buffer),e},h=function(e,t,n){_||(_=require(\"fs\")),b||(b=require(\"path\")),e=b.normalize(e),_.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))}):(m=function(e){var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.send(null),t.responseText},v&&(g=function(e){var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.responseType=\"arraybuffer\",t.send(null),new Uint8Array(t.response)}),h=function(e,t,n){var r=new XMLHttpRequest;r.open(\"GET\",e,!0),r.responseType=\"arraybuffer\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));w&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var E,k,S=c.print||console.log.bind(console),M=c.printErr||console.warn.bind(console);for(f in l)l.hasOwnProperty(f)&&(c[f]=l[f]);l=null,c.thisProgram&&(d=c.thisProgram),c.quit&&(p=c.quit),c.wasmBinary&&(k=c.wasmBinary);var D=c.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&le(\"no native wasm support detected\");var B,C,R,j=!1;function I(e,t){e||le(\"Assertion failed: \"+t)}function F(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var P,W,Y,q,z,U,G,H=\"undefined\"!=typeof TextDecoder?new F(\"utf8\"):void 0;function L(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&H)return H.decode(e.subarray(t,n));for(r=\"\";t<n;){var i=e[t++];if(128&i){var o=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|o);else{var a=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|o<<6|a:(7&i)<<18|o<<12|a<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function N(e,t){return e?L(n(),e,t):\"\"}function V(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var o=0;o<e.length;++o){var a=e.charCodeAt(o);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++o)),127>=a){if(n>=r)break;t[n++]=a}else{if(2047>=a){if(n+1>=r)break;t[n++]=192|a>>6}else{if(65535>=a){if(n+2>=r)break;t[n++]=224|a>>12}else{if(n+3>=r)break;t[n++]=240|a>>18,t[n++]=128|a>>12&63}t[n++]=128|a>>6&63}t[n++]=128|63&a}}return t[n]=0,n-i}function X(e,t,r){return V(e,n(),t,r)}function J(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function Q(e){var n=J(e)+1,r=Ht(n);return r&&V(e,t(),r,n),r}function K(e){P=e,c.HEAP8=W=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=q=new Int32Array(e),c.HEAPU8=Y=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=z=new Uint32Array(e),c.HEAPF32=U=new Float32Array(e),c.HEAPF64=G=new Float64Array(e)}\"undefined\"!=typeof TextDecoder&&new F(\"utf-16le\"),A&&(P=c.buffer);var Z=c.INITIAL_MEMORY||16777216;if(A)B=c.wasmMemory,P=c.buffer;else if(c.wasmMemory)B=c.wasmMemory;else if(!((B=new WebAssembly.Memory({initial:Z/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw M(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),w&&console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\"),Error(\"bad memory\");B&&(P=B.buffer),Z=P.byteLength,K(P);var $,ee=[],te=[],ne=[],re=[],ie=0;function oe(){return D||0<ie}function ae(){var e=c.preRun.shift();ee.unshift(e)}var ce,ue=0,se=null,fe=null;function le(e){throw c.onAbort&&c.onAbort(e),I(!A),M(e),j=!0,R=1,e=new WebAssembly.RuntimeError(\"abort(\"+e+\"). Build with -s ASSERTIONS=1 for more info.\"),s(e),e}function de(){return ce.startsWith(\"data:application/octet-stream;base64,\")}function pe(){var e=ce;try{if(e==ce&&k)return new Uint8Array(k);if(g)return g(e);throw\"both async and sync fetching of the wasm failed\"}catch(e){le(e)}}c.preloadedImages={},c.preloadedAudios={},ce=\"ort-wasm-threaded.wasm\",de()||(ce=O(ce));var me={1000260:function(){throw\"Canceled!\"}};function he(e){for(;0<e.length;){var t=e.shift();if(\"function\"==typeof t)t(c);else{var n=t.Rc;\"number\"==typeof n?void 0===t.jc?$.get(n)():$.get(n)(t.jc):n(void 0===t.jc?null:t.jc)}}}function ge(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var i=Atomics.load(r(),gn>>2),o=0;if(i==e&&Atomics.compareExchange(r(),gn>>2,i,0)==i&&(o=1,0>=--n))return 1;if(0<=(e=Atomics.notify(r(),e>>2,n)))return e+o;throw\"Atomics.notify returned an unexpected value \"+e}function _e(e){if(A)throw\"Internal Error! cleanupThread() can only ever be called from main application thread!\";if(!e)throw\"Internal Error! Null pthread_ptr in cleanupThread!\";var t=ye.dc[e];t&&(r()[e+12>>2]=0,ye.vc(t.worker))}c._emscripten_futex_wake=ge;var be,ye={hc:[],fc:[],Dc:[],Dd:function(){},Vc:function(){for(var e=Ht(228),t=0;57>t;++t)i()[e/4+t]=0;r()[e+12>>2]=e,t=e+152,r()[t>>2]=t;var n=Ht(512);for(t=0;128>t;++t)i()[n/4+t]=0;Atomics.store(i(),e+100>>2,n),Atomics.store(i(),e+40>>2,e),rn(e,!v,1),Jt(e)},Wc:function(){ye.receiveObjectTransfer=ye.bd,ye.threadInit=ye.nd,ye.threadCancel=ye.md,ye.threadExit=ye.Lc,ye.setExitStatus=ye.dd},dc:{},Cc:[],Ic:function(){for(;0<ye.Cc.length;)ye.Cc.pop()();an()},Jc:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),ye.Ic(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),ge(e+0,2147483647),rn(0,0,0)},dd:function(e){R=e},Lc:function(e){var t=Vt();t&&(ye.Jc(t,e),A&&postMessage({cmd:\"exit\"}))},md:function(){ye.Jc(Vt(),-1),postMessage({cmd:\"cancelDone\"})},Kc:function(){for(var e in ye.dc){var t=ye.dc[e];t&&t.worker&&ye.vc(t.worker)}for(ye.dc={},e=0;e<ye.hc.length;++e){var n=ye.hc[e];n.terminate()}for(ye.hc=[],e=0;e<ye.fc.length;++e)t=(n=ye.fc[e]).cc,ye.Ac(t),n.terminate();ye.fc=[]},Ac:function(e){if(e){if(e.ec){var t=r()[e.ec+100>>2];r()[e.ec+100>>2]=0,Nt(t),Nt(e.ec)}e.ec=0,e.zc&&e.ic&&Nt(e.ic),e.ic=0,e.worker&&(e.worker.cc=null)}},vc:function(e){ye.cd((function(){delete ye.dc[e.cc.ec],ye.hc.push(e),ye.fc.splice(ye.fc.indexOf(e),1),ye.Ac(e.cc),e.cc=void 0}))},cd:function(e){r()[hn>>2]=0;try{e()}finally{r()[hn>>2]=1}},bd:function(){},nd:function(){for(var e in ye.Dc)ye.Dc[e]()},Yc:function(e,t){e.onmessage=function(n){var o=n.data,a=o.cmd;if(e.cc&&(ye.Pc=e.cc.ec),o.targetThread&&o.targetThread!=Vt()){var c=ye.dc[o.Jd];c?c.worker.postMessage(n.data,o.transferList):M('Internal error! Worker sent a message \"'+a+'\" to target pthread '+o.targetThread+\", but that thread no longer exists!\")}else if(\"processQueuedMainThreadWork\"===a)Zt();else if(\"spawnThread\"===a)Te(n.data);else if(\"cleanupThread\"===a)_e(o.thread);else if(\"killThread\"===a){if(n=o.thread,A)throw\"Internal Error! killThread() can only ever be called from main application thread!\";if(!n)throw\"Internal Error! Null pthread_ptr in killThread!\";r()[n+12>>2]=0,o=ye.dc[n],delete ye.dc[n],o.worker.terminate(),ye.Ac(o),ye.fc.splice(ye.fc.indexOf(o.worker),1),o.worker.cc=void 0}else if(\"cancelThread\"===a){if(n=o.thread,A)throw\"Internal Error! cancelThread() can only ever be called from main application thread!\";if(!n)throw\"Internal Error! Null pthread_ptr in cancelThread!\";ye.dc[n].worker.postMessage({cmd:\"cancel\"})}else if(\"loaded\"===a)e.loaded=!0,t&&t(e),e.pc&&(e.pc(),delete e.pc);else if(\"print\"===a)S(\"Thread \"+o.threadId+\": \"+o.text);else if(\"printErr\"===a)M(\"Thread \"+o.threadId+\": \"+o.text);else if(\"alert\"===a)alert(\"Thread \"+o.threadId+\": \"+o.text);else if(\"exit\"===a)e.cc&&Atomics.load(i(),e.cc.ec+64>>2)&&ye.vc(e);else if(\"exitProcess\"===a)try{yn(o.returnCode)}catch(e){if(e instanceof _n)return;throw e}else\"cancelDone\"===a?ye.vc(e):\"objectTransfer\"!==a&&(\"setimmediate\"===n.data.target?e.postMessage(n.data):M(\"worker sent an unknown command \"+a));ye.Pc=void 0},e.onerror=function(e){M(\"pthread sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message)},w&&void 0!==e.on&&(e.on(\"message\",(function(t){e.onmessage({data:t})})),e.on(\"error\",(function(t){e.onerror(t)})),e.on(\"exit\",(function(){}))),e.postMessage({cmd:\"load\",urlOrBlob:c.mainScriptUrlOrBlob||_scriptDir,wasmMemory:B,wasmModule:C})},Mc:function(){var e=O(\"ort-wasm-threaded.worker.js\");ye.hc.push(new Worker(e))},Sc:function(){return 0==ye.hc.length&&(ye.Mc(),ye.Yc(ye.hc[0])),ye.hc.pop()},td:function(e){for(e=performance.now()+e;performance.now()<e;);}};function ve(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return r()[Lt()>>2]=28,-1;e=be()}return r()[t>>2]=e/1e3|0,r()[t+4>>2]=e%1e3*1e6|0,0}function we(e,t){if(A)return Ne(1,1,e,t);ne.unshift({Rc:e,jc:t})}function Ae(e){this.nc=e-16,this.kd=function(e){r()[this.nc+4>>2]=e},this.gd=function(e){r()[this.nc+8>>2]=e},this.hd=function(){r()[this.nc>>2]=0},this.ed=function(){t()[this.nc+12>>0]=0},this.jd=function(){t()[this.nc+13>>0]=0},this.Tc=function(e,t){this.kd(e),this.gd(t),this.hd(),this.ed(),this.jd()}}function Te(e){if(A)throw\"Internal Error! spawnThread() can only ever be called from main application thread!\";var t=ye.Sc();if(!t)return 6;if(void 0!==t.cc)throw\"Internal error!\";if(!e.uc)throw\"Internal error, no pthread ptr!\";ye.fc.push(t);for(var n=Ht(512),o=0;128>o;++o)r()[n+4*o>>2]=0;var a=e.ic+e.kc,c=(o=ye.dc[e.uc]={worker:t,ic:e.ic,kc:e.kc,zc:e.zc,ec:e.uc}).ec>>2;Atomics.store(i(),c+16,e.detached),Atomics.store(i(),c+25,n),Atomics.store(i(),c+10,o.ec),Atomics.store(i(),c+20,e.kc),Atomics.store(i(),c+19,a),Atomics.store(i(),c+26,e.kc),Atomics.store(i(),c+28,a),Atomics.store(i(),c+29,e.detached),n=on()+40,Atomics.store(i(),c+43,n),t.cc=o;var u={cmd:\"run\",start_routine:e.ld,arg:e.jc,threadInfoStruct:e.uc,stackBase:e.ic,stackSize:e.kc};return t.pc=function(){u.time=performance.now(),t.postMessage(u,e.sd)},t.loaded&&(t.pc(),delete t.pc),0}function Oe(e,n,i){if(0>=e||e>t().length||1&e)return-28;if(y){if(Atomics.load(r(),e>>2)!=n)return-6;var o=performance.now();for(i=o+i,Atomics.exchange(r(),gn>>2,e);;){if((o=performance.now())>i)return Atomics.exchange(r(),gn>>2,0),-73;if(0==(o=Atomics.exchange(r(),gn>>2,0)))break;if(Zt(),Atomics.load(r(),e>>2)!=n)return-6;Atomics.exchange(r(),gn>>2,e)}return 0}if(\"timed-out\"===(e=Atomics.wait(r(),e>>2,n,i)))return-73;if(\"not-equal\"===e)return-6;if(\"ok\"===e)return 0;throw\"Atomics.wait returned an unexpected value \"+e}function xe(){w||v||(E||(E={}),E[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]||(E[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]=1,M(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")))}c.establishStackSpace=function(e,t){pn(e,t),ln(e)},c.invokeEntryPoint=function(e,t){return $.get(e)(t)},be=w?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:A?function(){return performance.now()-c.__performance_now_clock_drift}:function(){return performance.now()};var Ee={},ke=[null,[],[]];function Se(e,t){var n=ke[e];0===t||10===t?((1===e?S:M)(L(n,0)),n.length=0):n.push(t)}var Me={};function De(e,t){return A?Ne(2,1,e,t):(e=N(e),Me.xd(e,t))}function Be(e,t,n){return A?Ne(3,1,e,t,n):0}function Ce(e,t){if(A)return Ne(4,1,e,t)}function Re(e,t,n){if(A)return Ne(5,1,e,t,n)}function je(e,t,n){return A?Ne(6,1,e,t,n):0}function Ie(e,t){if(A)return Ne(7,1,e,t)}function Fe(e,t){return A?Ne(8,1,e,t):(e=N(e),Me.yd(e,t))}function Pe(e,t,r,i,o,a){if(A)t=Ne(9,1,e,t,r,i,o,a);else if(a<<=12,0!=(16&i)&&0!=e%65536)t=-28;else if(0!=(32&i)){var c=65536*Math.ceil(t/65536);(e=mn(65536,c))?n().fill(0,e,e+c):e=0,e?(Ee[e]={$c:e,Xc:t,Nc:!0,fd:o,Gd:r,flags:i,offset:a},t=e):t=-48}else t=-52;return t}function We(e,t){if(A)e=Ne(10,1,e,t);else{var n=Ee[e];0!==t&&n?(t===n.Xc&&(Ee[e]=null,n.Nc&&Nt(n.$c)),e=0):e=-28}return e}function Ye(e,t,n){if(A)return Ne(11,1,e,t,n)}function qe(e,t,n){return A?Ne(12,1,e,t,n):(e=N(e),Me.zd(e,t,n))}function ze(e){if(A)return Ne(13,1,e)}function Ue(e,t){if(A)return Ne(14,1,e,t)}function Ge(e){if(A)return Ne(15,1,e)}function He(){if(A)return Ne(16,1);le()}var Le=[];function Ne(e,t){for(var n=arguments.length-2,r=fn(),i=dn(8*n),o=i>>3,c=0;c<n;c++){var u=arguments[2+c];a()[o+c]=u}return n=$t(e,n,i,t),ln(r),n}var Ve=[],Xe=[0,\"undefined\"!=typeof document?document:0,\"undefined\"!=typeof window?window:0];function Je(e){return e=2<e?N(e):e,Xe[e]||(\"undefined\"!=typeof document?document.querySelector(e):void 0)}function Qe(e,t,n){var i=Je(e);if(!i)return-4;if(i.tc&&(r()[i.tc>>2]=t,r()[i.tc+4>>2]=n),!i.Hc&&i.vd){if(i.tc){i=r()[i.tc+8>>2],e=e?N(e):\"\";var o=fn(),a=dn(12),c=0;if(e){c=J(e)+1;var u=Ht(c);X(e,u,c),c=u}return r()[a>>2]=c,r()[a+4>>2]=t,r()[a+8>>2]=n,en(0,i,657457152,0,c,a),ln(o),1}return-4}return i.Hc&&(i=i.Hc),e=!1,i.sc&&i.sc.rc&&(e=0===(e=i.sc.rc.getParameter(2978))[0]&&0===e[1]&&e[2]===i.width&&e[3]===i.height),i.width=t,i.height=n,e&&i.sc.rc.viewport(0,0,t,n),0}function Ke(e,t,n){return A?Ne(17,1,e,t,n):Qe(e,t,n)}var Ze=[\"default\",\"low-power\",\"high-performance\"],$e=[\"explicit\",\"same-upper\",\"same-lower\"],et=[\"iohw\",\"hwoi\",\"ohwi\"],tt=[\"oihw\",\"hwio\",\"ohwi\",\"ihwo\"],nt=[\"nchw\",\"nhwc\"],rt=[\"nearest-neighbor\",\"linear\"],it=\"float32 float16 int32 uint32 int8 uint8\".split(\" \"),ot=[\"forward\",\"backward\",\"both\"],at=[\"zrn\",\"rzn\"],ct=[\"floor\",\"ceil\"];function ut(e,t){if(0!==e&&0!==t){for(var n=[],i=0;i<e;++i,t+=4)n.push(r()[t>>2]);return n}}function st(e,t=\"float32\"){const o=r()[e>>2]+i()[e+8>>2];return e=i()[e+4>>2],I(\"float32\"===t),new Float32Array(n().buffer,o,e/Float32Array.BYTES_PER_ELEMENT)}function ft(e){return{minValue:o()[e>>2],maxValue:o()[e+4>>2]}}function lt(e){return{alpha:o()[e>>2]}}function dt(e){return{type:it[i()[e>>2]],dimensions:ut(i()[e+8>>2],r()[e+4>>2])}}function pt(e){return{windowDimensions:ut(i()[e>>2],r()[e+4>>2]),padding:\"explicit\"===$e[r()[e+32>>2]]?ut(i()[e+8>>2],r()[e+12>>2]):void 0,strides:ut(i()[e+16>>2],r()[e+20>>2]),dilations:ut(i()[e+24>>2],r()[e+28>>2]),autoPad:$e[r()[e+32>>2]],layout:nt[r()[e+36>>2]],roundingType:ct[r()[e+40>>2]],outputSizes:ut(i()[e+44>>2],r()[e+48>>2])}}var mt,ht,gt,_t,bt,yt,vt,wt,At,Tt,Ot,xt,Et={};function kt(){if(!xt){var e,t={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:d||\"./this.program\"};for(e in Et)void 0===Et[e]?delete t[e]:t[e]=Et[e];var n=[];for(e in t)n.push(e+\"=\"+t[e]);xt=n}return xt}function St(e,n){if(A)return Ne(18,1,e,n);var i=0;return kt().forEach((function(o,a){var c=n+i;for(a=r()[e+4*a>>2]=c,c=0;c<o.length;++c)t()[a++>>0]=o.charCodeAt(c);t()[a>>0]=0,i+=o.length+1})),0}function Mt(e,t){if(A)return Ne(19,1,e,t);var n=kt();r()[e>>2]=n.length;var i=0;return n.forEach((function(e){i+=e.length+1})),r()[t>>2]=i,0}function Dt(e){return A?Ne(20,1,e):0}function Bt(e,n){return A?Ne(21,1,e,n):(e=1==e||2==e?2:le(),t()[n>>0]=e,0)}function Ct(e,t,n,i){return A?Ne(22,1,e,t,n,i):(e=Me.Bd(e),t=Me.Ad(e,t,n),r()[i>>2]=t,0)}function Rt(e,t,n,r,i){if(A)return Ne(23,1,e,t,n,r,i)}function jt(e,t,i,o){if(A)return Ne(24,1,e,t,i,o);for(var a=0,c=0;c<i;c++){for(var u=r()[t+8*c>>2],s=r()[t+(8*c+4)>>2],f=0;f<s;f++)Se(e,n()[u+f]);a+=s}return r()[o>>2]=a,0}function It(){function e(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:\"GMT\"}if(A)return Ne(25,1);if(!It.Oc){It.Oc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),i=new Date(t,6,1);t=n.getTimezoneOffset();var o=i.getTimezoneOffset(),a=Math.max(t,o);r()[sn()>>2]=60*a,r()[un()>>2]=Number(t!=o),n=e(n),i=e(i),n=Q(n),i=Q(i),o<t?(r()[cn()>>2]=n,r()[cn()+4>>2]=i):(r()[cn()>>2]=i,r()[cn()+4>>2]=n)}}function Ft(e){return 0==e%4&&(0!=e%100||0==e%400)}function Pt(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Wt=[31,29,31,30,31,30,31,31,30,31,30,31],Yt=[31,28,31,30,31,30,31,31,30,31,30,31];function qt(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(Ft(e.getFullYear())?Wt:Yt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function zt(e,n,i,o){function a(e,t,n){for(e=\"number\"==typeof e?e.toString():e||\"\";e.length<t;)e=n[0]+e;return e}function c(e,t){return a(e,t,\"0\")}function u(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function f(e){e=qt(new Date(e.bc+1900,0,1),e.yc);var t=new Date(e.getFullYear()+1,0,4),n=s(new Date(e.getFullYear(),0,4));return t=s(t),0>=u(n,e)?0>=u(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=r()[o+40>>2];for(var d in o={qd:r()[o>>2],pd:r()[o+4>>2],wc:r()[o+8>>2],qc:r()[o+12>>2],lc:r()[o+16>>2],bc:r()[o+20>>2],xc:r()[o+24>>2],yc:r()[o+28>>2],Kd:r()[o+32>>2],od:r()[o+36>>2],rd:l?N(l):\"\"},i=N(i),l={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})i=i.replace(new RegExp(d,\"g\"),l[d]);var p=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),m=\"January February March April May June July August September October November December\".split(\" \");for(d in l={\"%a\":function(e){return p[e.xc].substring(0,3)},\"%A\":function(e){return p[e.xc]},\"%b\":function(e){return m[e.lc].substring(0,3)},\"%B\":function(e){return m[e.lc]},\"%C\":function(e){return c((e.bc+1900)/100|0,2)},\"%d\":function(e){return c(e.qc,2)},\"%e\":function(e){return a(e.qc,2,\" \")},\"%g\":function(e){return f(e).toString().substring(2)},\"%G\":function(e){return f(e)},\"%H\":function(e){return c(e.wc,2)},\"%I\":function(e){return 0==(e=e.wc)?e=12:12<e&&(e-=12),c(e,2)},\"%j\":function(e){return c(e.qc+Pt(Ft(e.bc+1900)?Wt:Yt,e.lc-1),3)},\"%m\":function(e){return c(e.lc+1,2)},\"%M\":function(e){return c(e.pd,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(e){return 0<=e.wc&&12>e.wc?\"AM\":\"PM\"},\"%S\":function(e){return c(e.qd,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(e){return e.xc||7},\"%U\":function(e){var t=new Date(e.bc+1900,0,1),n=0===t.getDay()?t:qt(t,7-t.getDay());return 0>u(n,e=new Date(e.bc+1900,e.lc,e.qc))?c(Math.ceil((31-n.getDate()+(Pt(Ft(e.getFullYear())?Wt:Yt,e.getMonth()-1)-31)+e.getDate())/7),2):0===u(n,t)?\"01\":\"00\"},\"%V\":function(e){var t=new Date(e.bc+1901,0,4),n=s(new Date(e.bc+1900,0,4));t=s(t);var r=qt(new Date(e.bc+1900,0,1),e.yc);return 0>u(r,n)?\"53\":0>=u(t,r)?\"01\":c(Math.ceil((n.getFullYear()<e.bc+1900?e.yc+32-n.getDate():e.yc+1-n.getDate())/7),2)},\"%w\":function(e){return e.xc},\"%W\":function(e){var t=new Date(e.bc,0,1),n=1===t.getDay()?t:qt(t,0===t.getDay()?1:7-t.getDay()+1);return 0>u(n,e=new Date(e.bc+1900,e.lc,e.qc))?c(Math.ceil((31-n.getDate()+(Pt(Ft(e.getFullYear())?Wt:Yt,e.getMonth()-1)-31)+e.getDate())/7),2):0===u(n,t)?\"01\":\"00\"},\"%y\":function(e){return(e.bc+1900).toString().substring(2)},\"%Y\":function(e){return e.bc+1900},\"%z\":function(e){var t=0<=(e=e.od);return e=Math.abs(e)/60,(t?\"+\":\"-\")+String(\"0000\"+(e/60*100+e%60)).slice(-4)},\"%Z\":function(e){return e.rd},\"%%\":function(){return\"%\"}})i.includes(d)&&(i=i.replace(new RegExp(d,\"g\"),l[d](o)));return(d=function(e){var t=Array(J(e)+1);return V(e,t,0,t.length),t}(i)).length>n?0:(function(e,n){t().set(e,n)}(d,e),d.length-1)}mt||(mt=mt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},ht=ht||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},gt=gt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},_t=_t||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},bt=bt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},yt=yt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},vt=vt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},wt=wt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},At=At||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},Tt=Tt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},Ot=Ot||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}});var Ut=[null,we,De,Be,Ce,Re,je,Ie,Fe,Pe,We,Ye,qe,ze,Ue,Ge,He,Ke,St,Mt,Dt,Bt,Ct,Rt,jt,It],Gt={h:function(e,t,n,r){le(\"Assertion failed: \"+N(e)+\", at: \"+[t?N(t):\"unknown filename\",n,r?N(r):\"unknown function\"])},cb:function(e,t){return ve(e,t)},b:function(e){return Ht(e+16)+16},d:function(e,t){return we(e,t)},e:function(e,t){ye.Cc.push((function(){$.get(e)(t)}))},c:function(e,t,n){throw new Ae(e).Tc(t,n),e},I:function(e,t,n,o){if(\"undefined\"==typeof SharedArrayBuffer)return M(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;if(!e)return M(\"pthread_create called with a null thread pointer!\"),28;var a=[];if(A&&0===a.length)return Kt(687865856,e,t,n,o);var c=0,u=0;if(t&&-1!=t){var s=r()[t>>2];s+=81920,c=r()[t+8>>2],u=0!==r()[t+12>>2]}else s=2097152;(t=0==c)?c=mn(16,s):I(0<(c-=s));for(var f=Ht(228),l=0;57>l;++l)i()[(f>>2)+l]=0;return r()[e>>2]=f,r()[f+12>>2]=f,e=f+152,r()[e>>2]=e,n={ic:c,kc:s,zc:t,detached:u,ld:n,uc:f,jc:o,sd:a},A?(n.ud=\"spawnThread\",postMessage(n,a),0):Te(n)},G:function(e){throw A?ye.Lc(e):(ye.Ic(),yn(e)),\"unwind\"},H:function(e,t){return function(e,t){if(!e)return M(\"pthread_join attempted on a null thread pointer!\"),71;if(A&&Vt()==e)return M(\"PThread \"+e+\" is attempting to join to itself!\"),16;if(!A&&Qt()==e)return M(\"Main thread \"+e+\" is attempting to join to itself!\"),16;if(r()[e+12>>2]!==e)return M(\"pthread_join attempted on thread \"+e+\", which does not point to a valid thread, or does not exist anymore!\"),71;if(Atomics.load(i(),e+64>>2))return M(\"Attempted to join thread \"+e+\", which was already detached!\"),28;for(xe();;){var n=Atomics.load(i(),e+0>>2);if(1==n)return n=Atomics.load(i(),e+4>>2),t&&(r()[t>>2]=n),Atomics.store(i(),e+64>>2,1),A?postMessage({cmd:\"cleanupThread\",thread:e}):_e(e),0;tn(),A||Zt(),Oe(e+0,n,A?100:1)}}(e,t)},z:De,y:Be,C:Ce,gb:Re,s:function(){return 42},_a:je,A:Ie,D:Fe,F:Pe,E:We,q:Ye,fb:qe,db:ze,t:Ue,eb:Ge,P:function(e,t){if(e==t)postMessage({cmd:\"processQueuedMainThreadWork\"});else if(A)postMessage({targetThread:e,cmd:\"processThreadQueue\"});else{if(!(e=(e=ye.dc[e])&&e.worker))return;e.postMessage({cmd:\"processThreadQueue\"})}return 1},f:He,w:ve,Va:function(e,t){return e-t},S:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},m:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},ba:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},N:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Q:function(e,t,i){var o;for(Le.length=0,i>>=2;o=n()[t++];)(o=105>o)&&1&i&&i++,Le.push(o?a()[i++>>1]:r()[i]),++i;return me[e].apply(null,Le)},Za:xe,n:function(){},k:Oe,j:ge,B:function(){return 2147483648},i:be,Xa:function(e,t,r){n().copyWithin(e,t,t+r)},o:function(){return w?require(\"os\").cpus().length:navigator.hardwareConcurrency},L:function(e,t,n){Ve.length=t,n>>=3;for(var r=0;r<t;r++)Ve[r]=a()[n+r];return(0>e?me[-e-1]:Ut[e]).apply(null,Ve)},Ya:function(e){var t=n().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var r=1;4>=r;r*=2){var i=t*(1+.2/r);i=Math.min(i,e+100663296),0<(i=Math.max(e,i))%65536&&(i+=65536-i%65536);e:{try{B.grow(Math.min(2147483648,i)-P.byteLength+65535>>>16),K(B.buffer);var o=1;break e}catch(e){}o=void 0}if(o)return!0}return!1},M:function(e,t,n){return Je(e)?Qe(e,t,n):Ke(e,t,n)},v:function(){},K:function(e,t,n){return ie+=1,setTimeout((function(){--ie,function(e){if(!j){try{e()}catch(e){if(e instanceof _n)return;if(\"unwind\"!==e)throw e&&\"object\"==typeof e&&e.stack&&M(\"exception thrown: \"+[e,e.stack]),e}if(!oe())try{A?nn(R):yn(R)}catch(e){if(!(e instanceof _n))throw e}}}((function(){$.get(e)(n)}))}),t)},O:function(e,t){t>>=2;var n=r()[t+6];return t={alpha:!!r()[t],depth:!!r()[t+1],stencil:!!r()[t+2],antialias:!!r()[t+3],premultipliedAlpha:!!r()[t+4],preserveDrawingBuffer:!!r()[t+5],powerPreference:Ze[n],failIfMajorPerformanceCaveat:!!r()[t+7],Zc:r()[t+8],Ed:r()[t+9],Fc:r()[t+10],Qc:r()[t+11],Hd:r()[t+12],Id:r()[t+13]},!(e=Je(e))||t.Qc?0:function(e,t){e.Gc||(e.Gc=e.getContext,e.getContext=function(t,n){return\"webgl\"==t==(n=e.Gc(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\"webgl\",t);return n?function(e,t){var n=Ht(8);r()[n+4>>2]=Vt();var i={Cd:n,attributes:t,version:t.Zc,rc:e};return e.canvas&&(e.canvas.sc=i),(void 0===t.Fc||t.Fc)&&function(e){if(e||(e=void 0),!e.Uc){e.Uc=!0;var t=e.rc;!function(e){var t=e.getExtension(\"ANGLE_instanced_arrays\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,i){t.drawArraysInstancedANGLE(e,n,r,i)},e.drawElementsInstanced=function(e,n,r,i,o){t.drawElementsInstancedANGLE(e,n,r,i,o)})}(t),function(e){var t=e.getExtension(\"OES_vertex_array_object\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\"WEBGL_draw_buffers\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.wd=t.getExtension(\"EXT_disjoint_timer_query\"),t.Fd=t.getExtension(\"WEBGL_multi_draw\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\"lose_context\")||e.includes(\"debug\")||t.getExtension(e)}))}}(i),n}(n,t):0}(e,t)},Ta:function(e){var t={devicePreference:\"default\",powerPreference:\"default\"};return 0!==e&&(t={devicePreference:[\"default\",\"gpu\",\"cpu\"][i()[e>>2]],powerPreference:[\"default\",\"high-performance\",\"low-power\"][i()[e+4>>2]]}),mt.create(navigator.ml.createContext(t))},ab:St,bb:Mt,l:Dt,$a:Bt,r:Ct,Wa:Rt,p:jt,wa:function(e){var t=Date.now();return r()[e>>2]=t/1e3|0,r()[e+4>>2]=t%1e3*1e3|0,0},hb:function e(t,n){return t=new Date(1e3*r()[t>>2]),r()[n>>2]=t.getUTCSeconds(),r()[n+4>>2]=t.getUTCMinutes(),r()[n+8>>2]=t.getUTCHours(),r()[n+12>>2]=t.getUTCDate(),r()[n+16>>2]=t.getUTCMonth(),r()[n+20>>2]=t.getUTCFullYear()-1900,r()[n+24>>2]=t.getUTCDay(),r()[n+36>>2]=0,r()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,r()[n+28>>2]=t,e.Ec||(e.Ec=Q(\"GMT\")),r()[n+40>>2]=e.Ec,n},J:function(){ye.Vc()},u:function(e,t){It(),e=new Date(1e3*r()[e>>2]),r()[t>>2]=e.getSeconds(),r()[t+4>>2]=e.getMinutes(),r()[t+8>>2]=e.getHours(),r()[t+12>>2]=e.getDate(),r()[t+16>>2]=e.getMonth(),r()[t+20>>2]=e.getFullYear()-1900,r()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),i=(e.getTime()-n.getTime())/864e5|0;return r()[t+28>>2]=i,r()[t+36>>2]=-60*e.getTimezoneOffset(),i=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(i!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,i)),r()[t+32>>2]=e,e=r()[cn()+(e?4:0)>>2],r()[t+40>>2]=e,t},a:B||c.wasmMemory,x:function(e){It();var t=new Date(r()[e+20>>2]+1900,r()[e+16>>2],r()[e+12>>2],r()[e+8>>2],r()[e+4>>2],r()[e>>2],0),n=r()[e+32>>2],i=t.getTimezoneOffset(),o=new Date(t.getFullYear(),0,1),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),c=o.getTimezoneOffset(),u=Math.min(c,a);return 0>n?r()[e+32>>2]=Number(a!=c&&u==i):0<n!=(u==i)&&(a=Math.max(c,a),t.setTime(t.getTime()+6e4*((0<n?u:a)-i))),r()[e+24>>2]=t.getDay(),n=(t.getTime()-o.getTime())/864e5|0,r()[e+28>>2]=n,r()[e>>2]=t.getSeconds(),r()[e+4>>2]=t.getMinutes(),r()[e+8>>2]=t.getHours(),r()[e+12>>2]=t.getDate(),r()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Sa:function(e){mt.oc(e)},Ra:function(e){mt.release(e)},Qa:function(e){ht.oc(e)},Pa:function(e){ht.release(e)},La:function(e,t,n){return e=_t.get(e),t=At.get(t),n=At.get(n),n=e.add(t,n),At.create(n)},Ka:function(e,t,n){return e=_t.get(e),t=At.get(t),n=pt(n),n=e.averagePool2d(t,n),At.create(n)},Ja:function(e,t,n,i,a){return e=_t.get(e),t=At.get(t),n=At.get(n),i=At.get(i),a={scale:At.get(r()[a>>2]),bias:At.get(r()[a+4>>2]),axis:r()[a+8>>2],epsilon:o()[a+12>>2],activation:ht.get(r()[a+16>>2])},a=e.batchNormalization(t,n,i,a),At.create(a)},Ia:function(e,t){e=_t.get(e),t=wt.get(t);try{var n=e.build(t);return gt.create(n)}catch(e){return console.log(\"builder.build failed: \"+e),0}},Ha:function(e,t,n){return e=_t.get(e),t=At.get(t),n=ft(n),n=e.clamp(t,n),At.create(n)},Ga:function(e,t){return e=_t.get(e),t=ft(t),t=e.clamp(t),ht.create(t)},Fa:function(e,t,n,r){e=_t.get(e),t=ut(t,n),n=[];for(var i=0;i<t.length;++i)n.push(At.get(t[i]));return r=e.concat(n,r),At.create(r)},Ea:function(e,t,n){return e=_t.get(e),n=st(n,(t=dt(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),At.create(n)},Ca:function(e,t,n,o){return e=_t.get(e),t=At.get(t),n=At.get(n),o={padding:\"explicit\"===$e[r()[o+24>>2]]?ut(i()[o>>2],r()[o+4>>2]):void 0,strides:ut(i()[o+8>>2],r()[o+12>>2]),dilations:ut(i()[o+16>>2],r()[o+20>>2]),autoPad:$e[r()[o+24>>2]],groups:r()[o+28>>2],inputLayout:nt[r()[o+32>>2]],filterLayout:tt[r()[o+36>>2]],bias:At.get(r()[o+40>>2]),activation:ht.get(r()[o+44>>2])},o=e.conv2d(t,n,o),At.create(o)},Da:function(e,t,n,o){return e=_t.get(e),t=At.get(t),n=At.get(n),o={padding:\"explicit\"===$e[r()[o+40>>2]]?ut(i()[o>>2],r()[o+4>>2]):void 0,strides:ut(i()[o+8>>2],r()[o+12>>2]),dilations:ut(i()[o+16>>2],r()[o+20>>2]),outputPadding:ut(i()[o+24>>2],r()[o+28>>2]),outputSizes:ut(i()[o+32>>2],r()[o+36>>2]),autoPad:$e[r()[o+40>>2]],groups:r()[o+44>>2],inputLayout:nt[r()[o+48>>2]],filterLayout:et[r()[o+52>>2]],bias:At.get(r()[o+56>>2]),activation:ht.get(r()[o+60>>2])},o=e.convTranspose2d(t,n,o),At.create(o)},Ba:function(e,n,i,a){return e=_t.get(e),n=At.get(n),i=At.get(i),a={c:At.get(r()[a>>2]),alpha:o()[a+4>>2],beta:o()[a+8>>2],aTranspose:0!==t()[a+12>>0],bTranspose:0!==t()[a+13>>0]},a=e.gemm(n,i,a),At.create(a)},Aa:function(e,n,i,o,a,c,u){return e=_t.get(e),n=At.get(n),i=At.get(i),o=At.get(o),u={bias:At.get(r()[u>>2]),recurrentBias:At.get(r()[u+4>>2]),initialHiddenState:At.get(r()[u+8>>2]),resetAfter:0!==t()[u+12>>0],returnSequence:0!==t()[u+13>>0],direction:ot[r()[u+16>>2]],layout:at[r()[u+20>>2]],activations:Ot.get(r()[u+24>>2])},a=e.gru(n,i,o,a,c,u),Tt.create(a)},za:function(e,t,n){return e=_t.get(e),t=N(t),n=dt(n),n=e.input(t,n),At.create(n)},ya:function(e,t,n){return e=_t.get(e),t=At.get(t),n=lt(n),n=e.leakyRelu(t,n),At.create(n)},xa:function(e,t){return e=_t.get(e),t=lt(t),t=e.leakyRelu(t),ht.create(t)},va:function(e,t,n){return e=_t.get(e),t=At.get(t),n=At.get(n),n=e.matmul(t,n),At.create(n)},ua:function(e,t,n){return e=_t.get(e),t=At.get(t),n=pt(n),n=e.maxPool2d(t,n),At.create(n)},ja:function(e){_t.release(e)},ta:function(e,t){return e=_t.get(e),t=At.get(t),t=e.relu(t),At.create(t)},sa:function(e){return e=_t.get(e).relu(),ht.create(e)},ra:function(e,t,n){e=_t.get(e),t=At.get(t);var a=rt[r()[n>>2]],c=i()[n+4>>2],u=r()[n+8>>2];if(0!==c&&0!==u){for(var s=[],f=0;f<c;++f,u+=4)s.push(o()[u>>2]);c=s}else c=void 0;return n={mode:a,scales:c,sizes:ut(i()[n+12>>2],r()[n+16>>2]),axes:ut(i()[n+20>>2],r()[n+24>>2])},n=e.resample2d(t,n),At.create(n)},qa:function(e,t,n,r){return e=_t.get(e),t=At.get(t),n=ut(r,n),n=e.reshape(t,n),At.create(n)},pa:function(e,t){return e=_t.get(e),t=At.get(t),t=e.sigmoid(t),At.create(t)},oa:function(e){return e=_t.get(e).sigmoid(),ht.create(e)},na:function(e,t,n,o,a){if(e=_t.get(e),t=At.get(t),0!==o&&0!==n){for(var c=[],u=0;u<o;++u,n+=4)c.push(i()[n>>2]);n=c}else n=void 0;return 1==o&&(n=n[0]),o={axis:r()[a>>2]},o=e.split(t,n,o),Tt.create(o)},ma:function(e,t){return e=_t.get(e),t=At.get(t),t=e.tanh(t),At.create(t)},la:function(e){return e=_t.get(e).tanh(),ht.create(e)},ka:function(e,t,n){return e=_t.get(e),t=At.get(t),n={permutation:ut(i()[n>>2],r()[n+4>>2])},n=e.transpose(t,n),At.create(n)},Oa:function(e,t,n){return e=gt.get(e),t=yt.get(t),n=vt.get(n),e.compute(t,n)},Na:function(e){gt.oc(e)},Ma:function(e){gt.release(e)},ha:function(e){yt.release(e)},ia:function(e,t,n){e=yt.get(e),t=N(t),n=0===r()[n+12>>2]?st(n+0):{resource:st(n+0),dimensions:ut(i()[n+16>>2],r()[n+12>>2])},e[t]=n},fa:function(e){wt.release(e)},ga:function(e,t,n){e=wt.get(e),t=N(t),n=At.get(n),e[t]=n},da:function(e){vt.release(e)},ea:function(e,t,n){e=vt.get(e),t=N(t),n=st(n),e[t]=n},$:function(e,t){return e=Tt.get(e)[t],At.create(e)},_:function(e){Tt.release(e)},ca:function(e){At.oc(e)},aa:function(e){At.release(e)},Y:function(e){Ot.oc(e)},X:function(e){Ot.release(e)},Z:function(e,t){e=Ot.get(e),t=ht.get(t),e.push(t)},Ua:zt,g:function(e,t,n,r){return zt(e,t,n,r)},W:function(e){return e=mt.get(e),e=new MLGraphBuilder(e),_t.create(e)},V:function(){return yt.create({})},U:function(){return wt.create({})},T:function(){return vt.create({})},R:function(){return Ot.create([])}};!function(){function e(e,t){c.asm=e.exports,$=c.asm.Db,te.unshift(c.asm.ib),ye.Dc.push(c.asm.Ib),C=t,A||(ue--,c.monitorRunDependencies&&c.monitorRunDependencies(ue),0==ue&&(null!==se&&(clearInterval(se),se=null),fe&&(e=fe,fe=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!k&&(y||v)){if(\"function\"==typeof fetch&&!ce.startsWith(\"file://\"))return fetch(ce,{credentials:\"same-origin\"}).then((function(e){if(!e.ok)throw\"failed to load wasm binary file at '\"+ce+\"'\";return e.arrayBuffer()})).catch((function(){return pe()}));if(h)return new Promise((function(e,t){h(ce,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return pe()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){M(\"failed to asynchronously prepare wasm: \"+e),le(e)}))}var r={a:Gt};if(A||(ue++,c.monitorRunDependencies&&c.monitorRunDependencies(ue)),c.instantiateWasm)try{return c.instantiateWasm(r,e)}catch(e){return M(\"Module.instantiateWasm callback failed with error: \"+e),!1}(k||\"function\"!=typeof WebAssembly.instantiateStreaming||de()||ce.startsWith(\"file://\")||\"function\"!=typeof fetch?n(t):fetch(ce,{credentials:\"same-origin\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return M(\"wasm streaming compile failed: \"+e),M(\"falling back to ArrayBuffer instantiation\"),n(t)}))}))).catch(s)}(),c.___wasm_call_ctors=function(){return(c.___wasm_call_ctors=c.asm.ib).apply(null,arguments)},c._OrtInit=function(){return(c._OrtInit=c.asm.jb).apply(null,arguments)},c._OrtCreateSessionOptions=function(){return(c._OrtCreateSessionOptions=c.asm.kb).apply(null,arguments)},c._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(c._OrtSessionOptionsAppendExecutionProviderWebNN=c.asm.lb).apply(null,arguments)},c._OrtAddSessionConfigEntry=function(){return(c._OrtAddSessionConfigEntry=c.asm.mb).apply(null,arguments)},c._OrtReleaseSessionOptions=function(){return(c._OrtReleaseSessionOptions=c.asm.nb).apply(null,arguments)},c._OrtCreateSession=function(){return(c._OrtCreateSession=c.asm.ob).apply(null,arguments)},c._OrtReleaseSession=function(){return(c._OrtReleaseSession=c.asm.pb).apply(null,arguments)},c._OrtGetInputCount=function(){return(c._OrtGetInputCount=c.asm.qb).apply(null,arguments)},c._OrtGetOutputCount=function(){return(c._OrtGetOutputCount=c.asm.rb).apply(null,arguments)},c._OrtGetInputName=function(){return(c._OrtGetInputName=c.asm.sb).apply(null,arguments)},c._OrtGetOutputName=function(){return(c._OrtGetOutputName=c.asm.tb).apply(null,arguments)},c._OrtFree=function(){return(c._OrtFree=c.asm.ub).apply(null,arguments)},c._OrtCreateTensor=function(){return(c._OrtCreateTensor=c.asm.vb).apply(null,arguments)},c._OrtGetTensorData=function(){return(c._OrtGetTensorData=c.asm.wb).apply(null,arguments)},c._OrtReleaseTensor=function(){return(c._OrtReleaseTensor=c.asm.xb).apply(null,arguments)},c._OrtCreateRunOptions=function(){return(c._OrtCreateRunOptions=c.asm.yb).apply(null,arguments)},c._OrtAddRunConfigEntry=function(){return(c._OrtAddRunConfigEntry=c.asm.zb).apply(null,arguments)},c._OrtReleaseRunOptions=function(){return(c._OrtReleaseRunOptions=c.asm.Ab).apply(null,arguments)},c._OrtRun=function(){return(c._OrtRun=c.asm.Bb).apply(null,arguments)},c._OrtEndProfiling=function(){return(c._OrtEndProfiling=c.asm.Cb).apply(null,arguments)};var Ht=c._malloc=function(){return(Ht=c._malloc=c.asm.Eb).apply(null,arguments)},Lt=c.___errno_location=function(){return(Lt=c.___errno_location=c.asm.Fb).apply(null,arguments)},Nt=c._free=function(){return(Nt=c._free=c.asm.Gb).apply(null,arguments)},Vt=c._pthread_self=function(){return(Vt=c._pthread_self=c.asm.Hb).apply(null,arguments)};c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.Ib).apply(null,arguments)},c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.Jb).apply(null,arguments)};var Xt,Jt=c._emscripten_register_main_browser_thread_id=function(){return(Jt=c._emscripten_register_main_browser_thread_id=c.asm.Kb).apply(null,arguments)},Qt=c._emscripten_main_browser_thread_id=function(){return(Qt=c._emscripten_main_browser_thread_id=c.asm.Lb).apply(null,arguments)},Kt=c._emscripten_sync_run_in_main_thread_4=function(){return(Kt=c._emscripten_sync_run_in_main_thread_4=c.asm.Mb).apply(null,arguments)},Zt=c._emscripten_main_thread_process_queued_calls=function(){return(Zt=c._emscripten_main_thread_process_queued_calls=c.asm.Nb).apply(null,arguments)},$t=c._emscripten_run_in_main_runtime_thread_js=function(){return($t=c._emscripten_run_in_main_runtime_thread_js=c.asm.Ob).apply(null,arguments)},en=c.__emscripten_call_on_thread=function(){return(en=c.__emscripten_call_on_thread=c.asm.Pb).apply(null,arguments)},tn=c._pthread_testcancel=function(){return(tn=c._pthread_testcancel=c.asm.Qb).apply(null,arguments)},nn=c._pthread_exit=function(){return(nn=c._pthread_exit=c.asm.Rb).apply(null,arguments)},rn=c.__emscripten_thread_init=function(){return(rn=c.__emscripten_thread_init=c.asm.Sb).apply(null,arguments)},on=c._emscripten_get_global_libc=function(){return(on=c._emscripten_get_global_libc=c.asm.Tb).apply(null,arguments)},an=c.___pthread_tsd_run_dtors=function(){return(an=c.___pthread_tsd_run_dtors=c.asm.Ub).apply(null,arguments)},cn=c.__get_tzname=function(){return(cn=c.__get_tzname=c.asm.Vb).apply(null,arguments)},un=c.__get_daylight=function(){return(un=c.__get_daylight=c.asm.Wb).apply(null,arguments)},sn=c.__get_timezone=function(){return(sn=c.__get_timezone=c.asm.Xb).apply(null,arguments)},fn=c.stackSave=function(){return(fn=c.stackSave=c.asm.Yb).apply(null,arguments)},ln=c.stackRestore=function(){return(ln=c.stackRestore=c.asm.Zb).apply(null,arguments)},dn=c.stackAlloc=function(){return(dn=c.stackAlloc=c.asm._b).apply(null,arguments)},pn=c._emscripten_stack_set_limits=function(){return(pn=c._emscripten_stack_set_limits=c.asm.$b).apply(null,arguments)},mn=c._memalign=function(){return(mn=c._memalign=c.asm.ac).apply(null,arguments)},hn=c.__emscripten_allow_main_runtime_queued_calls=999808,gn=c.__emscripten_main_thread_futex=1003828;function _n(e){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+e+\")\",this.status=e}function bn(){function e(){if(!Xt&&(Xt=!0,c.calledRun=!0,!j)&&(A||he(te),u(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),!A)){if(c.postRun)for(\"function\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var e=c.postRun.shift();re.unshift(e)}he(re)}}if(!(0<ue))if(A)u(c),A||he(te),postMessage({cmd:\"loaded\"});else{if(!A){if(c.preRun)for(\"function\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)ae();he(ee)}0<ue||(c.setStatus?(c.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){c.setStatus(\"\")}),1),e()}),1)):e())}}function yn(e){if(R=e,A)throw postMessage({cmd:\"exitProcess\",returnCode:e}),new _n(e);oe()||(ye.Kc(),A||(he(ne),\"undefined\"!=typeof _fflush&&_fflush(0),ke[1].length&&Se(1,10),ke[2].length&&Se(2,10))),R=e,oe()||(ye.Kc(),c.onExit&&c.onExit(e),j=!0),p(e,new _n(e))}if(c.UTF8ToString=N,c.stringToUTF8=X,c.lengthBytesUTF8=J,c.keepRuntimeAlive=oe,c.PThread=ye,c.stackSave=fn,c.stackRestore=ln,c.stackAlloc=dn,c.PThread=ye,c.wasmMemory=B,c.ExitStatus=_n,fe=function e(){Xt||bn(),Xt||(fe=e)},c.run=bn,c.preInit)for(\"function\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();return A&&(D=!1,ye.Wc()),bn(),e.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e:\"function\"==typeof define&&define.amd?define([],(function(){return e})):\"object\"==typeof exports&&(exports.ortWasmThreaded=e);\n","\nvar ortWasm = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(ortWasm) {\n  ortWasm = ortWasm || {};\n\n\nvar e;e||(e=typeof ortWasm !== 'undefined' ? ortWasm : {});var aa,ba;e.ready=new Promise(function(a,b){aa=a;ba=b});var f={},k;for(k in e)e.hasOwnProperty(k)&&(f[k]=e[k]);var ca=\"./this.program\",da=\"object\"===typeof window,n=\"function\"===typeof importScripts,ea=\"object\"===typeof process&&\"object\"===typeof process.versions&&\"string\"===typeof process.versions.node,q=\"\",fa,ha,ia,r,w;\nif(ea)q=n?require(\"path\").dirname(q)+\"/\":__dirname+\"/\",fa=function(a,b){r||(r=require(\"fs\"));w||(w=require(\"path\"));a=w.normalize(a);return r.readFileSync(a,b?null:\"utf8\")},ia=function(a){a=fa(a,!0);a.buffer||(a=new Uint8Array(a));a.buffer||x(\"Assertion failed: undefined\");return a},ha=function(a,b,c){r||(r=require(\"fs\"));w||(w=require(\"path\"));a=w.normalize(a);r.readFile(a,function(d,h){d?c(d):b(h.buffer)})},1<process.argv.length&&(ca=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",\nfunction(a){throw a;}),process.on(\"unhandledRejection\",x),e.inspect=function(){return\"[Emscripten Module object]\"};else if(da||n)n?q=self.location.href:\"undefined\"!==typeof document&&document.currentScript&&(q=document.currentScript.src),_scriptDir&&(q=_scriptDir),0!==q.indexOf(\"blob:\")?q=q.substr(0,q.lastIndexOf(\"/\")+1):q=\"\",fa=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},n&&(ia=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\n\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),ha=function(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a,!0);d.responseType=\"arraybuffer\";d.onload=function(){200==d.status||0==d.status&&d.response?b(d.response):c()};d.onerror=c;d.send(null)};var ja=e.print||console.log.bind(console),y=e.printErr||console.warn.bind(console);for(k in f)f.hasOwnProperty(k)&&(e[k]=f[k]);f=null;e.thisProgram&&(ca=e.thisProgram);var z;e.wasmBinary&&(z=e.wasmBinary);var noExitRuntime=e.noExitRuntime||!1;\n\"object\"!==typeof WebAssembly&&x(\"no native wasm support detected\");var ka,la=!1,ma=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction na(a,b,c){var d=b+c;for(c=b;a[c]&&!(c>=d);)++c;if(16<c-b&&a.subarray&&ma)return ma.decode(a.subarray(b,c));for(d=\"\";b<c;){var h=a[b++];if(h&128){var l=a[b++]&63;if(192==(h&224))d+=String.fromCharCode((h&31)<<6|l);else{var m=a[b++]&63;h=224==(h&240)?(h&15)<<12|l<<6|m:(h&7)<<18|l<<12|m<<6|a[b++]&63;65536>h?d+=String.fromCharCode(h):(h-=65536,d+=String.fromCharCode(55296|h>>10,56320|h&1023))}}else d+=String.fromCharCode(h)}return d}function A(a,b){return a?na(C,a,b):\"\"}\nfunction oa(a,b,c,d){if(!(0<d))return 0;var h=c;d=c+d-1;for(var l=0;l<a.length;++l){var m=a.charCodeAt(l);if(55296<=m&&57343>=m){var u=a.charCodeAt(++l);m=65536+((m&1023)<<10)|u&1023}if(127>=m){if(c>=d)break;b[c++]=m}else{if(2047>=m){if(c+1>=d)break;b[c++]=192|m>>6}else{if(65535>=m){if(c+2>=d)break;b[c++]=224|m>>12}else{if(c+3>=d)break;b[c++]=240|m>>18;b[c++]=128|m>>12&63}b[c++]=128|m>>6&63}b[c++]=128|m&63}}b[c]=0;return c-h}\nfunction pa(a){for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&(d=65536+((d&1023)<<10)|a.charCodeAt(++c)&1023);127>=d?++b:b=2047>=d?b+2:65535>=d?b+3:b+4}return b}function qa(a){var b=pa(a)+1,c=ra(b);c&&oa(a,D,c,b);return c}var sa,D,C,E,F,G;\nfunction ta(){var a=ka.buffer;sa=a;e.HEAP8=D=new Int8Array(a);e.HEAP16=new Int16Array(a);e.HEAP32=E=new Int32Array(a);e.HEAPU8=C=new Uint8Array(a);e.HEAPU16=new Uint16Array(a);e.HEAPU32=F=new Uint32Array(a);e.HEAPF32=G=new Float32Array(a);e.HEAPF64=new Float64Array(a)}var ua,va=[],wa=[],xa=[],ya=[];function za(){var a=e.preRun.shift();va.unshift(a)}var H=0,Aa=null,I=null;e.preloadedImages={};e.preloadedAudios={};\nfunction x(a){if(e.onAbort)e.onAbort(a);y(a);la=!0;a=new WebAssembly.RuntimeError(\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\");ba(a);throw a;}function Ba(){return K.startsWith(\"data:application/octet-stream;base64,\")}var K;K=\"ort-wasm.wasm\";if(!Ba()){var Ca=K;K=e.locateFile?e.locateFile(Ca,q):q+Ca}function Da(){var a=K;try{if(a==K&&z)return new Uint8Array(z);if(ia)return ia(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){x(b)}}\nfunction Ea(){if(!z&&(da||n)){if(\"function\"===typeof fetch&&!K.startsWith(\"file://\"))return fetch(K,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+K+\"'\";return a.arrayBuffer()}).catch(function(){return Da()});if(ha)return new Promise(function(a,b){ha(K,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return Da()})}\nfunction Fa(a){for(;0<a.length;){var b=a.shift();if(\"function\"==typeof b)b(e);else{var c=b.Ib;\"number\"===typeof c?void 0===b.yb?ua.get(c)():ua.get(c)(b.yb):c(void 0===b.yb?null:b.yb)}}}function Ga(a){this.Ab=a-16;this.Sb=function(b){E[this.Ab+4>>2]=b};this.Pb=function(b){E[this.Ab+8>>2]=b};this.Qb=function(){E[this.Ab>>2]=0};this.Ob=function(){D[this.Ab+12>>0]=0};this.Rb=function(){D[this.Ab+13>>0]=0};this.Kb=function(b,c){this.Sb(b);this.Pb(c);this.Qb();this.Ob();this.Rb()}}\nvar Ha=0,Ia={},Ja=[null,[],[]],L={},Ka;Ka=ea?function(){var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:function(){return performance.now()};var M=[\"explicit\",\"same-upper\",\"same-lower\"],La=[\"iohw\",\"hwoi\",\"ohwi\"],Ma=[\"oihw\",\"hwio\",\"ohwi\",\"ihwo\"],Na=[\"nchw\",\"nhwc\"],Oa=[\"nearest-neighbor\",\"linear\"],Pa=\"float32 float16 int32 uint32 int8 uint8\".split(\" \"),Qa=[\"forward\",\"backward\",\"both\"],Ra=[\"zrn\",\"rzn\"],Sa=[\"floor\",\"ceil\"];\nfunction N(a,b){if(0!==a&&0!==b){for(var c=[],d=0;d<a;++d,b+=4)c.push(E[b>>2]);return c}}function Ta(a,b=\"float32\"){const c=E[a>>2]+F[a+8>>2];a=F[a+4>>2];\"float32\"===b||x(\"Assertion failed: undefined\");return new Float32Array(C.buffer,c,a/Float32Array.BYTES_PER_ELEMENT)}function Ua(a){return{minValue:G[a>>2],maxValue:G[a+4>>2]}}function Va(a){return{type:Pa[F[a>>2]],dimensions:N(F[a+8>>2],E[a+4>>2])}}\nfunction Wa(a){return{windowDimensions:N(F[a>>2],E[a+4>>2]),padding:\"explicit\"===M[E[a+32>>2]]?N(F[a+8>>2],E[a+12>>2]):void 0,strides:N(F[a+16>>2],E[a+20>>2]),dilations:N(F[a+24>>2],E[a+28>>2]),autoPad:M[E[a+32>>2]],layout:Na[E[a+36>>2]],roundingType:Sa[E[a+40>>2]],outputSizes:N(F[a+44>>2],E[a+48>>2])}}var O,P,Q,R,Xa,S,T,V,W,X,Y,Ya={};\nfunction Za(){if(!$a){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"===typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ca||\"./this.program\"},b;for(b in Ya)void 0===Ya[b]?delete a[b]:a[b]=Ya[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);$a=c}return $a}var $a;\nfunction db(a,b){a=new Date(1E3*E[a>>2]);E[b>>2]=a.getUTCSeconds();E[b+4>>2]=a.getUTCMinutes();E[b+8>>2]=a.getUTCHours();E[b+12>>2]=a.getUTCDate();E[b+16>>2]=a.getUTCMonth();E[b+20>>2]=a.getUTCFullYear()-1900;E[b+24>>2]=a.getUTCDay();E[b+36>>2]=0;E[b+32>>2]=0;E[b+28>>2]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0;db.Hb||(db.Hb=qa(\"GMT\"));E[b+40>>2]=db.Hb;return b}\nfunction eb(){function a(m){return(m=m.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?m[1]:\"GMT\"}if(!fb){fb=!0;var b=(new Date).getFullYear(),c=new Date(b,0,1),d=new Date(b,6,1);b=c.getTimezoneOffset();var h=d.getTimezoneOffset(),l=Math.max(b,h);E[gb()>>2]=60*l;E[hb()>>2]=Number(b!=h);c=a(c);d=a(d);c=qa(c);d=qa(d);h<b?(E[Z()>>2]=c,E[Z()+4>>2]=d):(E[Z()>>2]=d,E[Z()+4>>2]=c)}}var fb;function ib(a){return 0===a%4&&(0!==a%100||0===a%400)}function jb(a,b){for(var c=0,d=0;d<=b;c+=a[d++]);return c}\nvar kb=[31,29,31,30,31,30,31,31,30,31,30,31],lb=[31,28,31,30,31,30,31,31,30,31,30,31];function mb(a,b){for(a=new Date(a.getTime());0<b;){var c=a.getMonth(),d=(ib(a.getFullYear())?kb:lb)[c];if(b>d-a.getDate())b-=d-a.getDate()+1,a.setDate(1),11>c?a.setMonth(c+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+b);break}}return a}\nfunction nb(a,b,c,d){function h(g,p,t){for(g=\"number\"===typeof g?g.toString():g||\"\";g.length<p;)g=t[0]+g;return g}function l(g,p){return h(g,p,\"0\")}function m(g,p){function t(ab){return 0>ab?-1:0<ab?1:0}var J;0===(J=t(g.getFullYear()-p.getFullYear()))&&0===(J=t(g.getMonth()-p.getMonth()))&&(J=t(g.getDate()-p.getDate()));return J}function u(g){switch(g.getDay()){case 0:return new Date(g.getFullYear()-1,11,29);case 1:return g;case 2:return new Date(g.getFullYear(),0,3);case 3:return new Date(g.getFullYear(),\n0,2);case 4:return new Date(g.getFullYear(),0,1);case 5:return new Date(g.getFullYear()-1,11,31);case 6:return new Date(g.getFullYear()-1,11,30)}}function U(g){g=mb(new Date(g.wb+1900,0,1),g.Fb);var p=new Date(g.getFullYear()+1,0,4),t=u(new Date(g.getFullYear(),0,4));p=u(p);return 0>=m(t,g)?0>=m(p,g)?g.getFullYear()+1:g.getFullYear():g.getFullYear()-1}var B=E[d+40>>2];d={Vb:E[d>>2],Ub:E[d+4>>2],Db:E[d+8>>2],Cb:E[d+12>>2],xb:E[d+16>>2],wb:E[d+20>>2],Eb:E[d+24>>2],Fb:E[d+28>>2],cc:E[d+32>>2],Tb:E[d+\n36>>2],Wb:B?A(B):\"\"};c=A(c);B={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var v in B)c=c.replace(new RegExp(v,\"g\"),B[v]);var bb=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),\ncb=\"January February March April May June July August September October November December\".split(\" \");B={\"%a\":function(g){return bb[g.Eb].substring(0,3)},\"%A\":function(g){return bb[g.Eb]},\"%b\":function(g){return cb[g.xb].substring(0,3)},\"%B\":function(g){return cb[g.xb]},\"%C\":function(g){return l((g.wb+1900)/100|0,2)},\"%d\":function(g){return l(g.Cb,2)},\"%e\":function(g){return h(g.Cb,2,\" \")},\"%g\":function(g){return U(g).toString().substring(2)},\"%G\":function(g){return U(g)},\"%H\":function(g){return l(g.Db,\n2)},\"%I\":function(g){g=g.Db;0==g?g=12:12<g&&(g-=12);return l(g,2)},\"%j\":function(g){return l(g.Cb+jb(ib(g.wb+1900)?kb:lb,g.xb-1),3)},\"%m\":function(g){return l(g.xb+1,2)},\"%M\":function(g){return l(g.Ub,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(g){return 0<=g.Db&&12>g.Db?\"AM\":\"PM\"},\"%S\":function(g){return l(g.Vb,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(g){return g.Eb||7},\"%U\":function(g){var p=new Date(g.wb+1900,0,1),t=0===p.getDay()?p:mb(p,7-p.getDay());g=new Date(g.wb+1900,g.xb,g.Cb);return 0>\nm(t,g)?l(Math.ceil((31-t.getDate()+(jb(ib(g.getFullYear())?kb:lb,g.getMonth()-1)-31)+g.getDate())/7),2):0===m(t,p)?\"01\":\"00\"},\"%V\":function(g){var p=new Date(g.wb+1901,0,4),t=u(new Date(g.wb+1900,0,4));p=u(p);var J=mb(new Date(g.wb+1900,0,1),g.Fb);return 0>m(J,t)?\"53\":0>=m(p,J)?\"01\":l(Math.ceil((t.getFullYear()<g.wb+1900?g.Fb+32-t.getDate():g.Fb+1-t.getDate())/7),2)},\"%w\":function(g){return g.Eb},\"%W\":function(g){var p=new Date(g.wb,0,1),t=1===p.getDay()?p:mb(p,0===p.getDay()?1:7-p.getDay()+1);g=\nnew Date(g.wb+1900,g.xb,g.Cb);return 0>m(t,g)?l(Math.ceil((31-t.getDate()+(jb(ib(g.getFullYear())?kb:lb,g.getMonth()-1)-31)+g.getDate())/7),2):0===m(t,p)?\"01\":\"00\"},\"%y\":function(g){return(g.wb+1900).toString().substring(2)},\"%Y\":function(g){return g.wb+1900},\"%z\":function(g){g=g.Tb;var p=0<=g;g=Math.abs(g)/60;return(p?\"+\":\"-\")+String(\"0000\"+(g/60*100+g%60)).slice(-4)},\"%Z\":function(g){return g.Wb},\"%%\":function(){return\"%\"}};for(v in B)c.includes(v)&&(c=c.replace(new RegExp(v,\"g\"),B[v](d)));v=ob(c);\nif(v.length>b)return 0;D.set(v,a);return v.length-1}(function(){function a(){return{zb:{},Nb:1,create:function(b,c){c=c||{};var d=this.Nb++;c.Gb=1;c.object=b;this.zb[d]=c;return d},get:function(b){if(0!==b)return this.zb[b].object},Bb:function(b){this.zb[b].Gb++},release:function(b){var c=this.zb[b];c.Gb--;0>=c.Gb&&delete this.zb[b]}}}O||(O=O||a(),P=P||a(),Q=Q||a(),R=R||a(),Xa=Xa||a(),S=S||a(),T=T||a(),V=V||a(),W=W||a(),X=X||a(),Y=Y||a())})();\nfunction ob(a){var b=Array(pa(a)+1);oa(a,b,0,b.length);return b}\nvar sb={a:function(a){return ra(a+16)+16},c:function(a,b){xa.unshift({Ib:a,yb:b})},f:function(a,b){xa.unshift({Ib:a,yb:b})},b:function(a,b,c){(new Ga(a)).Kb(b,c);Ha++;throw a;},Q:function(a,b){a=A(a);return L.Xb(a,b)},p:function(){return 0},T:function(){},P:function(){},t:function(){return 42},H:function(){return 0},R:function(){},U:function(a,b){a=A(a);return L.Yb(a,b)},W:function(a,b,c,d,h,l){l<<=12;if(0!==(d&16)&&0!==a%65536)b=-28;else if(0!==(d&32)){a=65536*Math.ceil(b/65536);var m=pb(65536,a);\nm?(C.fill(0,m,m+a),a=m):a=0;a?(Ia[a]={Mb:a,Lb:b,Jb:!0,fd:h,bc:c,flags:d,offset:l},b=a):b=-48}else b=-52;return b},V:function(a,b){var c=Ia[a];0!==b&&c?(b===c.Lb&&(Ia[a]=null,c.Jb&&qb(c.Mb)),a=0):a=-28;return a},n:function(){},O:function(a,b,c){a=A(a);return L.Zb(a,b,c)},M:function(){},u:function(){},N:function(){},k:function(){x()},B:function(a,b){if(0===a)a=Date.now();else if(1===a||4===a)a=Ka();else return E[rb()>>2]=28,-1;E[b>>2]=a/1E3|0;E[b+4>>2]=a%1E3*1E6|0;return 0},X:function(a,b){return a-\nb},Pa:function(){x(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},j:function(){x(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Qa:function(){x(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Oa:function(){x(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},\nS:function(){return 2147483648},G:function(a,b,c){C.copyWithin(a,b,b+c)},m:function(a){var b=C.length;a>>>=0;if(2147483648<a)return!1;for(var c=1;4>=c;c*=2){var d=b*(1+.2/c);d=Math.min(d,a+100663296);d=Math.max(a,d);0<d%65536&&(d+=65536-d%65536);a:{try{ka.grow(Math.min(2147483648,d)-sa.byteLength+65535>>>16);ta();var h=1;break a}catch(l){}h=void 0}if(h)return!0}return!1},L:function(a){for(var b=Ka();Ka()-b<a;);},Ma:function(a){var b={devicePreference:\"default\",powerPreference:\"default\"},c=[\"default\",\n\"gpu\",\"cpu\"],d=[\"default\",\"high-performance\",\"low-power\"];0!==a&&(b={devicePreference:c[F[a>>2]],powerPreference:d[F[a+4>>2]]});return O.create(navigator.ml.createContext(b))},J:function(a,b){var c=0;Za().forEach(function(d,h){var l=b+c;h=E[a+4*h>>2]=l;for(l=0;l<d.length;++l)D[h++>>0]=d.charCodeAt(l);D[h>>0]=0;c+=d.length+1});return 0},K:function(a,b){var c=Za();E[a>>2]=c.length;var d=0;c.forEach(function(h){d+=h.length+1});E[b>>2]=d;return 0},i:function(){return 0},I:function(a,b){a=1==a||2==a?2:\nx();D[b>>0]=a;return 0},r:function(a,b,c,d){a=L.ac(a);b=L.$b(a,b,c);E[d>>2]=b;return 0},F:function(){},s:function(a,b,c,d){for(var h=0,l=0;l<c;l++){for(var m=E[b+8*l>>2],u=E[b+(8*l+4)>>2],U=0;U<u;U++){var B=C[m+U],v=Ja[a];0===B||10===B?((1===a?ja:y)(na(v,0)),v.length=0):v.push(B)}h+=u}E[d>>2]=h;return 0},sa:function(a){var b=Date.now();E[a>>2]=b/1E3|0;E[a+4>>2]=b%1E3*1E3|0;return 0},da:db,x:function(a,b){eb();a=new Date(1E3*E[a>>2]);E[b>>2]=a.getSeconds();E[b+4>>2]=a.getMinutes();E[b+8>>2]=a.getHours();\nE[b+12>>2]=a.getDate();E[b+16>>2]=a.getMonth();E[b+20>>2]=a.getFullYear()-1900;E[b+24>>2]=a.getDay();var c=new Date(a.getFullYear(),0,1);E[b+28>>2]=(a.getTime()-c.getTime())/864E5|0;E[b+36>>2]=-(60*a.getTimezoneOffset());var d=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();c=c.getTimezoneOffset();a=(d!=c&&a.getTimezoneOffset()==Math.min(c,d))|0;E[b+32>>2]=a;a=E[Z()+(a?4:0)>>2];E[b+40>>2]=a;return b},q:function(a){eb();var b=new Date(E[a+20>>2]+1900,E[a+16>>2],E[a+12>>2],E[a+8>>2],E[a+4>>2],E[a>>\n2],0),c=E[a+32>>2],d=b.getTimezoneOffset(),h=new Date(b.getFullYear(),0,1),l=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),m=h.getTimezoneOffset(),u=Math.min(m,l);0>c?E[a+32>>2]=Number(l!=m&&u==d):0<c!=(u==d)&&(l=Math.max(m,l),b.setTime(b.getTime()+6E4*((0<c?u:l)-d)));E[a+24>>2]=b.getDay();E[a+28>>2]=(b.getTime()-h.getTime())/864E5|0;E[a>>2]=b.getSeconds();E[a+4>>2]=b.getMinutes();E[a+8>>2]=b.getHours();E[a+12>>2]=b.getDate();E[a+16>>2]=b.getMonth();return b.getTime()/1E3|0},E:function(a){O.Bb(a)},\nD:function(a){O.release(a)},La:function(a){P.Bb(a)},g:function(a){P.release(a)},Ia:function(a,b,c){a=R.get(a);b=W.get(b);c=W.get(c);c=a.add(b,c);return W.create(c)},Ha:function(a,b,c){a=R.get(a);b=W.get(b);c=Wa(c);c=a.averagePool2d(b,c);return W.create(c)},Ga:function(a,b,c,d,h){a=R.get(a);b=W.get(b);c=W.get(c);d=W.get(d);h={scale:W.get(E[h>>2]),bias:W.get(E[h+4>>2]),axis:E[h+8>>2],epsilon:G[h+12>>2],activation:P.get(E[h+16>>2])};h=a.batchNormalization(b,c,d,h);return W.create(h)},Fa:function(a,b){a=\nR.get(a);b=V.get(b);try{var c=a.build(b);return Q.create(c)}catch(d){return console.log(\"builder.build failed: \"+d),0}},Ea:function(a,b,c){a=R.get(a);b=W.get(b);c=a.clamp(b,Ua(c));return W.create(c)},Da:function(a,b){a=R.get(a).clamp(Ua(b));return P.create(a)},Ca:function(a,b,c,d){a=R.get(a);b=N(b,c);c=[];for(var h=0;h<b.length;++h)c.push(W.get(b[h]));d=a.concat(c,d);return W.create(d)},Ba:function(a,b,c){a=R.get(a);b=Va(b);c=Ta(c,b.type);c=void 0===b.dimensions?a.constant(c[0]):a.constant(b,c);return W.create(c)},\nza:function(a,b,c,d){a=R.get(a);b=W.get(b);c=W.get(c);d={padding:\"explicit\"===M[E[d+24>>2]]?N(F[d>>2],E[d+4>>2]):void 0,strides:N(F[d+8>>2],E[d+12>>2]),dilations:N(F[d+16>>2],E[d+20>>2]),autoPad:M[E[d+24>>2]],groups:E[d+28>>2],inputLayout:Na[E[d+32>>2]],filterLayout:Ma[E[d+36>>2]],bias:W.get(E[d+40>>2]),activation:P.get(E[d+44>>2])};d=a.conv2d(b,c,d);return W.create(d)},Aa:function(a,b,c,d){a=R.get(a);b=W.get(b);c=W.get(c);d={padding:\"explicit\"===M[E[d+40>>2]]?N(F[d>>2],E[d+4>>2]):void 0,strides:N(F[d+\n8>>2],E[d+12>>2]),dilations:N(F[d+16>>2],E[d+20>>2]),outputPadding:N(F[d+24>>2],E[d+28>>2]),outputSizes:N(F[d+32>>2],E[d+36>>2]),autoPad:M[E[d+40>>2]],groups:E[d+44>>2],inputLayout:Na[E[d+48>>2]],filterLayout:La[E[d+52>>2]],bias:W.get(E[d+56>>2]),activation:P.get(E[d+60>>2])};d=a.convTranspose2d(b,c,d);return W.create(d)},ya:function(a,b,c,d){a=R.get(a);b=W.get(b);c=W.get(c);d={c:W.get(E[d>>2]),alpha:G[d+4>>2],beta:G[d+8>>2],aTranspose:0!==D[d+12>>0],bTranspose:0!==D[d+13>>0]};d=a.gemm(b,c,d);return W.create(d)},\nxa:function(a,b,c,d,h,l,m){a=R.get(a);b=W.get(b);c=W.get(c);d=W.get(d);m={bias:W.get(E[m>>2]),recurrentBias:W.get(E[m+4>>2]),initialHiddenState:W.get(E[m+8>>2]),resetAfter:0!==D[m+12>>0],returnSequence:0!==D[m+13>>0],direction:Qa[E[m+16>>2]],layout:Ra[E[m+20>>2]],activations:Y.get(E[m+24>>2])};h=a.gru(b,c,d,h,l,m);return X.create(h)},wa:function(a,b,c){a=R.get(a);b=A(b);c=Va(c);c=a.input(b,c);return W.create(c)},va:function(a,b,c){a=R.get(a);b=W.get(b);c=a.leakyRelu(b,{alpha:G[c>>2]});return W.create(c)},\nua:function(a,b){a=R.get(a).leakyRelu({alpha:G[b>>2]});return P.create(a)},ta:function(a,b,c){a=R.get(a);b=W.get(b);c=W.get(c);c=a.matmul(b,c);return W.create(c)},ra:function(a,b,c){a=R.get(a);b=W.get(b);c=Wa(c);c=a.maxPool2d(b,c);return W.create(c)},w:function(a){R.release(a)},qa:function(a,b){a=R.get(a);b=W.get(b);b=a.relu(b);return W.create(b)},A:function(a){a=R.get(a).relu();return P.create(a)},pa:function(a,b,c){a=R.get(a);b=W.get(b);var d=Oa[E[c>>2]];var h=F[c+4>>2];var l=E[c+8>>2];if(0!==h&&\n0!==l){for(var m=[],u=0;u<h;++u,l+=4)m.push(G[l>>2]);h=m}else h=void 0;c={mode:d,scales:h,sizes:N(F[c+12>>2],E[c+16>>2]),axes:N(F[c+20>>2],E[c+24>>2])};c=a.resample2d(b,c);return W.create(c)},oa:function(a,b,c,d){a=R.get(a);b=W.get(b);c=N(d,c);c=a.reshape(b,c);return W.create(c)},na:function(a,b){a=R.get(a);b=W.get(b);b=a.sigmoid(b);return W.create(b)},z:function(a){a=R.get(a).sigmoid();return P.create(a)},ma:function(a,b,c,d,h){a=R.get(a);b=W.get(b);if(0!==d&&0!==c){for(var l=[],m=0;m<d;++m,c+=4)l.push(F[c>>\n2]);c=l}else c=void 0;1==d&&(c=c[0]);d=a.split(b,c,{axis:E[h>>2]});return X.create(d)},la:function(a,b){a=R.get(a);b=W.get(b);b=a.tanh(b);return W.create(b)},y:function(a){a=R.get(a).tanh();return P.create(a)},ka:function(a,b,c){a=R.get(a);b=W.get(b);c={permutation:N(F[c>>2],E[c+4>>2])};c=a.transpose(b,c);return W.create(c)},Ka:function(a,b,c){a=Q.get(a);b=S.get(b);c=T.get(c);return a.compute(b,c)},Ja:function(a){Q.Bb(a)},C:function(a){Q.release(a)},ia:function(a){S.release(a)},ja:function(a,b,c){a=\nS.get(a);b=A(b);c=0===E[c+12>>2]?Ta(c+0):{resource:Ta(c+0),dimensions:N(F[c+16>>2],E[c+12>>2])};a[b]=c},ga:function(a){V.release(a)},ha:function(a,b,c){a=V.get(a);b=A(b);c=W.get(c);a[b]=c},ea:function(a){T.release(a)},fa:function(a,b,c){a=T.get(a);b=A(b);c=Ta(c);a[b]=c},l:function(a,b){a=X.get(a)[b];return W.create(a)},v:function(a){X.release(a)},e:function(a){W.Bb(a)},d:function(a){W.release(a)},ba:function(a){Y.Bb(a)},o:function(a){Y.release(a)},ca:function(a,b){a=Y.get(a);b=P.get(b);a.push(b)},\nNa:nb,h:function(a,b,c,d){return nb(a,b,c,d)},aa:function(a){a=O.get(a);a=new MLGraphBuilder(a);return R.create(a)},$:function(){return S.create({})},_:function(){return V.create({})},Z:function(){return T.create({})},Y:function(){return Y.create([])}};\n(function(){function a(h){e.asm=h.exports;ka=e.asm.Ra;ta();ua=e.asm.vb;wa.unshift(e.asm.Sa);H--;e.monitorRunDependencies&&e.monitorRunDependencies(H);0==H&&(null!==Aa&&(clearInterval(Aa),Aa=null),I&&(h=I,I=null,h()))}function b(h){a(h.instance)}function c(h){return Ea().then(function(l){return WebAssembly.instantiate(l,d)}).then(h,function(l){y(\"failed to asynchronously prepare wasm: \"+l);x(l)})}var d={a:sb};H++;e.monitorRunDependencies&&e.monitorRunDependencies(H);if(e.instantiateWasm)try{return e.instantiateWasm(d,\na)}catch(h){return y(\"Module.instantiateWasm callback failed with error: \"+h),!1}(function(){return z||\"function\"!==typeof WebAssembly.instantiateStreaming||Ba()||K.startsWith(\"file://\")||\"function\"!==typeof fetch?c(b):fetch(K,{credentials:\"same-origin\"}).then(function(h){return WebAssembly.instantiateStreaming(h,d).then(b,function(l){y(\"wasm streaming compile failed: \"+l);y(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ba);return{}})();\ne.___wasm_call_ctors=function(){return(e.___wasm_call_ctors=e.asm.Sa).apply(null,arguments)};e._OrtInit=function(){return(e._OrtInit=e.asm.Ta).apply(null,arguments)};e._OrtCreateSessionOptions=function(){return(e._OrtCreateSessionOptions=e.asm.Ua).apply(null,arguments)};e._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(e._OrtSessionOptionsAppendExecutionProviderWebNN=e.asm.Va).apply(null,arguments)};\ne._OrtAddSessionConfigEntry=function(){return(e._OrtAddSessionConfigEntry=e.asm.Wa).apply(null,arguments)};e._OrtReleaseSessionOptions=function(){return(e._OrtReleaseSessionOptions=e.asm.Xa).apply(null,arguments)};e._OrtCreateSession=function(){return(e._OrtCreateSession=e.asm.Ya).apply(null,arguments)};e._OrtReleaseSession=function(){return(e._OrtReleaseSession=e.asm.Za).apply(null,arguments)};e._OrtGetInputCount=function(){return(e._OrtGetInputCount=e.asm._a).apply(null,arguments)};\ne._OrtGetOutputCount=function(){return(e._OrtGetOutputCount=e.asm.$a).apply(null,arguments)};e._OrtGetInputName=function(){return(e._OrtGetInputName=e.asm.ab).apply(null,arguments)};e._OrtGetOutputName=function(){return(e._OrtGetOutputName=e.asm.bb).apply(null,arguments)};e._OrtFree=function(){return(e._OrtFree=e.asm.cb).apply(null,arguments)};e._OrtCreateTensor=function(){return(e._OrtCreateTensor=e.asm.db).apply(null,arguments)};\ne._OrtGetTensorData=function(){return(e._OrtGetTensorData=e.asm.eb).apply(null,arguments)};e._OrtReleaseTensor=function(){return(e._OrtReleaseTensor=e.asm.fb).apply(null,arguments)};e._OrtCreateRunOptions=function(){return(e._OrtCreateRunOptions=e.asm.gb).apply(null,arguments)};e._OrtAddRunConfigEntry=function(){return(e._OrtAddRunConfigEntry=e.asm.hb).apply(null,arguments)};e._OrtReleaseRunOptions=function(){return(e._OrtReleaseRunOptions=e.asm.ib).apply(null,arguments)};\ne._OrtRun=function(){return(e._OrtRun=e.asm.jb).apply(null,arguments)};e._OrtEndProfiling=function(){return(e._OrtEndProfiling=e.asm.kb).apply(null,arguments)};\nvar ra=e._malloc=function(){return(ra=e._malloc=e.asm.lb).apply(null,arguments)},rb=e.___errno_location=function(){return(rb=e.___errno_location=e.asm.mb).apply(null,arguments)},qb=e._free=function(){return(qb=e._free=e.asm.nb).apply(null,arguments)},Z=e.__get_tzname=function(){return(Z=e.__get_tzname=e.asm.ob).apply(null,arguments)},hb=e.__get_daylight=function(){return(hb=e.__get_daylight=e.asm.pb).apply(null,arguments)},gb=e.__get_timezone=function(){return(gb=e.__get_timezone=e.asm.qb).apply(null,\narguments)},tb=e.stackSave=function(){return(tb=e.stackSave=e.asm.rb).apply(null,arguments)},ub=e.stackRestore=function(){return(ub=e.stackRestore=e.asm.sb).apply(null,arguments)},vb=e.stackAlloc=function(){return(vb=e.stackAlloc=e.asm.tb).apply(null,arguments)},pb=e._memalign=function(){return(pb=e._memalign=e.asm.ub).apply(null,arguments)};e.UTF8ToString=A;e.stringToUTF8=function(a,b,c){return oa(a,C,b,c)};e.lengthBytesUTF8=pa;e.stackSave=tb;e.stackRestore=ub;e.stackAlloc=vb;var wb;\nI=function xb(){wb||yb();wb||(I=xb)};\nfunction yb(){function a(){if(!wb&&(wb=!0,e.calledRun=!0,!la)){Fa(wa);aa(e);if(e.onRuntimeInitialized)e.onRuntimeInitialized();if(e.postRun)for(\"function\"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;){var b=e.postRun.shift();ya.unshift(b)}Fa(ya)}}if(!(0<H)){if(e.preRun)for(\"function\"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)za();Fa(va);0<H||(e.setStatus?(e.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){e.setStatus(\"\")},1);a()},1)):a())}}e.run=yb;\nif(e.preInit)for(\"function\"==typeof e.preInit&&(e.preInit=[e.preInit]);0<e.preInit.length;)e.preInit.pop()();yb();\n\n\n  return ortWasm.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return ortWasm; });\nelse if (typeof exports === 'object')\n  exports[\"ortWasm\"] = ortWasm;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable import/no-internal-modules */\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {Session} from './onnxjs/session';\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\n\nclass OnnxjsBackend implements Backend {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async init(): Promise<void> {}\n\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\n    // onnxruntime-common).\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\n    //       Currently we allow this to happen to make test runner work.\n    const session = new Session(options as unknown as Session.Config);\n\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\n    if (typeof pathOrBuffer === 'string') {\n      await session.loadModel(pathOrBuffer);\n    } else {\n      await session.loadModel(pathOrBuffer);\n    }\n\n    return new OnnxjsSessionHandler(session);\n  }\n}\n\nexport const onnxjsBackend = new OnnxjsBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\nimport {promisify} from 'util';\nimport {initWasm} from './wasm/proxy-wrapper';\n\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initWasm();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    let buffer: Uint8Array;\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        buffer = await promisify(readFile)(pathOrBuffer);\n      } else {\n        // browser\n        const response = await fetch(pathOrBuffer);\n        const arrayBuffer = await response.arrayBuffer();\n        buffer = new Uint8Array(arrayBuffer);\n      }\n    } else {\n      buffer = pathOrBuffer;\n    }\n\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(buffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\nimport {onnxjsBackend} from './backend-onnxjs';\nimport {wasmBackend} from './backend-wasm';\n\nregisterBackend('webgl', onnxjsBackend, 1);\nregisterBackend('wasm', wasmBackend, 2);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\n\nimport {Tensor} from './tensor';\nimport {LongUtil} from './util';\n\nexport declare namespace Attribute {\n  export interface DataTypeMap {\n    float: number;\n    int: number;\n    string: string;\n    tensor: Tensor;\n    floats: number[];\n    ints: number[];\n    strings: string[];\n    tensors: Tensor[];\n  }\n\n  export type DataType = keyof DataTypeMap;\n}\n\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\n\ntype Value = [ValueTypes, Attribute.DataType];\n\nexport class Attribute {\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\n    this._attributes = new Map();\n    if (attributes !== null && attributes !== undefined) {\n      for (const attr of attributes) {\n        if (attr instanceof onnx.AttributeProto) {\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        } else if (attr instanceof ortFbs.Attribute) {\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        }\n      }\n      if (this._attributes.size < attributes.length) {\n        throw new Error('duplicated attribute names');\n      }\n    }\n  }\n\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\n    this._attributes.set(key, [value, type]);\n  }\n  delete(key: string): void {\n    this._attributes.delete(key);\n  }\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\n    return this.get(key, 'float', defaultValue);\n  }\n\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\n    return this.get(key, 'int', defaultValue);\n  }\n\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\n    return this.get(key, 'string', defaultValue);\n  }\n\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\n    return this.get(key, 'tensor', defaultValue);\n  }\n\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\n    return this.get(key, 'floats', defaultValue);\n  }\n\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\n    return this.get(key, 'ints', defaultValue);\n  }\n\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\n    return this.get(key, 'strings', defaultValue);\n  }\n\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\n    return this.get(key, 'tensors', defaultValue);\n  }\n\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\n    const valueAndType = this._attributes.get(key);\n    if (valueAndType === undefined) {\n      if (defaultValue !== undefined) {\n        return defaultValue;\n      }\n      throw new Error(`required attribute not found: ${key}`);\n    }\n    if (valueAndType[1] !== type) {\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\n    }\n    return valueAndType[0] as V;\n  }\n\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\n    switch (type) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return 'float';\n      case onnx.AttributeProto.AttributeType.INT:\n        return 'int';\n      case onnx.AttributeProto.AttributeType.STRING:\n        return 'string';\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return 'tensor';\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return 'floats';\n      case onnx.AttributeProto.AttributeType.INTS:\n        return 'ints';\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return 'strings';\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return 'tensors';\n      default:\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\n    }\n  }\n\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\n      throw new Error('graph attribute is not supported yet');\n    }\n\n    const value = this.getValueNoCheck(attr);\n\n    // cast LONG to number\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\n    }\n\n    // cast LONG[] to number[]\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\n      const numberValue: number[] = new Array<number>(arr.length);\n\n      for (let i = 0; i < arr.length; i++) {\n        const maybeLong = arr[i];\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\n      }\n\n      return numberValue;\n    }\n\n    // cast onnx.TensorProto to onnxjs.Tensor\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\n    }\n\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\n      if (attr instanceof onnx.AttributeProto) {\n        const tensorProtos = value as onnx.ITensorProto[];\n        return tensorProtos.map(value => Tensor.fromProto(value));\n      } else if (attr instanceof ortFbs.Attribute) {\n        const tensorProtos = value as ortFbs.Tensor[];\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\n      }\n    }\n\n    // cast Uint8Array to string\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\n      // string attributes are returned as string, so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8String = value as Uint8Array;\n        return Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString();\n      }\n    }\n\n    // cast Uint8Array[] to string[]\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\n      // format strings attributes are returned as string[], so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8Strings = value as Uint8Array[];\n        return utf8Strings.map(\n            utf8String => Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString());\n      }\n    }\n\n    return value as ValueTypes;\n  }\n\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\n  }\n\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\n    switch (attr.type!) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return attr.f;\n      case onnx.AttributeProto.AttributeType.INT:\n        return attr.i;\n      case onnx.AttributeProto.AttributeType.STRING:\n        return attr.s;\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return attr.t;\n      case onnx.AttributeProto.AttributeType.GRAPH:\n        return attr.g;\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return attr.floats;\n      case onnx.AttributeProto.AttributeType.INTS:\n        return attr.ints;\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return attr.strings;\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return attr.tensors;\n      case onnx.AttributeProto.AttributeType.GRAPHS:\n        return attr.graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\n    }\n  }\n\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\n    switch (attr.type()) {\n      case ortFbs.AttributeType.FLOAT:\n        return attr.f();\n      case ortFbs.AttributeType.INT:\n        return attr.i();\n      case ortFbs.AttributeType.STRING:\n        return attr.s();\n      case ortFbs.AttributeType.TENSOR:\n        return attr.t();\n      case ortFbs.AttributeType.GRAPH:\n        return attr.g();\n      case ortFbs.AttributeType.FLOATS:\n        return attr.floatsArray();\n      case ortFbs.AttributeType.INTS: {\n        const ints = [];\n        for (let i = 0; i < attr.intsLength(); i++) {\n          ints.push(attr.ints(i)!);\n        }\n        return ints;\n      }\n      case ortFbs.AttributeType.STRINGS: {\n        const strings = [];\n        for (let i = 0; i < attr.stringsLength(); i++) {\n          strings.push(attr.strings(i));\n        }\n        return strings;\n      }\n      case ortFbs.AttributeType.TENSORS: {\n        const tensors = [];\n        for (let i = 0; i < attr.tensorsLength(); i++) {\n          tensors.push(attr.tensors(i)!);\n        }\n        return tensors;\n      }\n      // case ortFbs.AttributeType.GRAPHS:\n      // TODO: Subgraph not supported yet.\n      // const graphs = [];\n      // for (let i = 0; i < attr.graphsLength(); i++) {\n      //   graphs.push(attr.graphs(i)!);\n      // }\n      // return graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\n    }\n  }\n\n  protected _attributes: Map<string, Value>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGLBackend} from './backends/backend-webgl';\nimport {Graph} from './graph';\nimport {Operator} from './operators';\nimport {OpSet} from './opset';\nimport {Session} from './session';\n\nexport interface InferenceHandler {\n  /**\n   * dispose the inference handler. it will be called as the last step in Session.run()\n   */\n  dispose(): void;\n}\n\nexport interface SessionHandler {\n  /**\n   * transform the graph at initialization time\n   * @param graphTransformer the graph transformer to manipulate the model graph\n   */\n  transformGraph?(graphTransformer: Graph.Transformer): void;\n\n  /**\n   * create an instance of InferenceHandler to use in a Session.run() call\n   */\n  createInferenceHandler(): InferenceHandler;\n\n  /**\n   * dispose the session handler. it will be called when a session is being disposed explicitly\n   */\n  dispose(): void;\n\n  /**\n   * Resolves the operator from the name and opset version; backend specific\n   * @param node the node to resolve\n   * @param opsets a list of opsets that exported from the model\n   * @param graph the completely initialized graph\n   */\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\n\n  /**\n   * This method let's the sessionHandler know that the graph initialization is complete\n   * @param graph the completely initialized graph\n   */\n  onGraphInitialized?(graph: Graph): void;\n\n  /**\n   * a reference to the corresponding backend\n   */\n  readonly backend: Backend;\n\n  /**\n   * a reference to the session context\n   */\n  readonly context: Session.Context;\n}\n\nexport interface Backend {\n  /**\n   * initialize the backend. will be called only once, when the first time the\n   * backend it to be used\n   */\n  initialize(): boolean|Promise<boolean>;\n\n  /**\n   * create an instance of SessionHandler to use in a Session object's lifecycle\n   */\n  createSessionHandler(context: Session.Context): SessionHandler;\n\n  /**\n   * dispose the backend. currently this will not be called\n   */\n  dispose(): void;\n}\n\n// caches all initialized backend instances\nconst backendsCache: Map<string, Backend> = new Map();\n\nexport const backend: {[name: string]: Backend} = {\n  webgl: new WebGLBackend(),\n};\n\n/**\n * Resolve a reference to the backend. If a hint is specified, the corresponding\n * backend will be used.\n */\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\n  if (!hint) {\n    return resolveBackend(['webgl']);\n  } else {\n    const hints = typeof hint === 'string' ? [hint] : hint;\n\n    for (const backendHint of hints) {\n      const cache = backendsCache.get(backendHint);\n      if (cache) {\n        return cache;\n      }\n\n      const backend = await tryLoadBackend(backendHint);\n      if (backend) {\n        return backend;\n      }\n    }\n  }\n\n  throw new Error('no available backend to use');\n}\n\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\n  const backendObj = backend;\n\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\n    const backend = backendObj[backendHint];\n    let init = backend.initialize();\n    if (typeof init === 'object' && 'then' in init) {\n      init = await init;\n    }\n    if (init) {\n      backendsCache.set(backendHint, backend);\n      return backend;\n    }\n  }\n\n  return undefined;\n}\n\nfunction isBackend(obj: unknown) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = obj as any;\n\n  // check if an object is a Backend instance\n  if (\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport type BackendType = Backend;\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\nimport {Backend, SessionHandler} from '../backend';\nimport {Logger} from '../instrument';\nimport {Session} from '../session';\n\nimport {WebGLSessionHandler} from './webgl/session-handler';\nimport {WebGLContext} from './webgl/webgl-context';\nimport {createWebGLContext} from './webgl/webgl-context-factory';\n\n/**\n * WebGLBackend is the entry point for all WebGL opeartions\n * When it starts it created the WebGLRenderingContext\n * and other main framework components such as Program and Texture Managers\n */\nexport class WebGLBackend implements Backend {\n  glContext: WebGLContext;\n\n  get contextId(): 'webgl'|'webgl2'|undefined {\n    return env.webgl.contextId;\n  }\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\n    env.webgl.contextId = value;\n  }\n\n  get matmulMaxBatchSize(): number|undefined {\n    return env.webgl.matmulMaxBatchSize;\n  }\n  set matmulMaxBatchSize(value: number|undefined) {\n    env.webgl.matmulMaxBatchSize = value;\n  }\n\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\n    return env.webgl.textureCacheMode;\n  }\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\n    env.webgl.textureCacheMode = value;\n  }\n\n  get pack(): boolean|undefined {\n    return env.webgl.pack;\n  }\n  set pack(value: boolean|undefined) {\n    env.webgl.pack = value;\n  }\n\n  get async(): boolean|undefined {\n    return env.webgl.async;\n  }\n  set async(value: boolean|undefined) {\n    env.webgl.async = value;\n  }\n\n  initialize(): boolean {\n    try {\n      this.glContext = createWebGLContext(this.contextId);\n      if (typeof this.matmulMaxBatchSize !== 'number') {\n        this.matmulMaxBatchSize = 16;\n      }\n      if (typeof this.textureCacheMode !== 'string') {\n        this.textureCacheMode = 'full';\n      }\n      if (typeof this.pack !== 'boolean') {\n        this.pack = false;\n      }\n      if (typeof this.async !== 'boolean') {\n        this.async = false;\n      }\n\n      Logger.setWithEnv(env);\n\n      Logger.verbose(\n          'WebGLBackend',\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\n              this.async}.`);\n      return true;\n    } catch (e) {\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\n      return false;\n    }\n  }\n  createSessionHandler(context: Session.Context): SessionHandler {\n    return new WebGLSessionHandler(this, context);\n  }\n  dispose(): void {\n    this.glContext.dispose();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\nimport {squeezeShape} from './texture-layout-strategy';\nimport {TextureLayout} from './types';\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class CoordsGlslLib extends GlslLib {\n  returnType: string;\n\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.offsetToCoords(),\n      ...this.coordsToOffset(),\n      ...this.toVec(),\n      ...this.valueFrom(),\n      // TODO return these only when packing is enabled.\n      ...this.getCommonUtilFuncs(),\n      ...this.getInputsSamplingSnippets(),\n      ...this.getOutputSamplingSnippet()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'offsetToCoords';\n    return {\n      offsetToCoords: new GlslLibRoutine(`\n      vec2 ${funcName}(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'coordsToOffset';\n    return {\n      coordsToOffset: new GlslLibRoutine(`\n      int ${funcName}(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Generates code for output sampler.\n   */\n\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    if (outputLayout.isPacked) {\n      return this.getPackedOutputSamplingSnippet(outputLayout);\n    } else {\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\n    }\n  }\n\n  /**\n   * Generates code for packed output sampler.\n   */\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRGBASource = `\n      void setOutput(vec4 val) {\n        ${glsl.output} = val;\n      }\n    `;\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\n    return result;\n  }\n\n  /**\n   * Generates code for unpacked output sampler.\n   */\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] =\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      case 4:\n        result[funcName] = this.getOutputUnpacked4DCoords(\n            outShape as [number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 5:\n        result[funcName] = this.getOutputUnpacked5DCoords(\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 6:\n        result[funcName] = this.getOutputUnpacked6DCoords(\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRSource = `\n        void setOutput(float val) {\n          ${glsl.output} = vec4(val, 0, 0, 0);\n        }\n    `;\n    const floatTextureSetRFuncName = 'floatTextureSetR';\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\n    return result;\n  }\n\n  /**\n   * Scalar output coordinates.\n   */\n  protected getOutputScalarCoords(): GlslLibRoutine {\n    return new GlslLibRoutine(`\n      int getOutputCoords() {\n        return 0;\n      }\n    `);\n  }\n\n  /**\n   * 1D packed output coordinates.\n   */\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = texShape;\n    let source = '';\n    if (packedTexShape[0] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    if (packedTexShape[1] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 2D packed output coordinates.\n   */\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\n      source = `\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\n        }\n      `;\n      return new GlslLibRoutine(source);\n    }\n\n    const packedTexShape = texShape;\n    // texels needed to accommodate a logical row\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 3D packed output coordinates.\n   */\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    const source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          int b = index / ${texelsInBatch};\n          index -= b * ${texelsInBatch};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec3(b, r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * ND packed output coordinates.\n   */\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    let texelsInBatchN = texelsInBatch;\n    let batches = '';\n    let coords = 'b, r, c';\n\n    for (let b = 2; b < shape.length - 1; b++) {\n      texelsInBatchN *= shape[shape.length - b - 1];\n      batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n      coords = `b${b}, ` + coords;\n    }\n    const source = `\n      ivec${shape.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n        ${batches}\n\n        int b = index / ${texelsInBatch};\n        index -= b * ${texelsInBatch};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\n        int c = 2 * (index / ${texelsInLogicalRow});\n\n        return ivec${shape.length}(${coords});\n      }\n    `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 1D output coordinates.\n   */\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 2D output coordinates.\n   */\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          int r = index / ${shape[1]};\n          int c = index - r * ${shape[1]};\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 3D output coordinates.\n   */\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec3(r, c, d);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 4D output coordinates.\n   */\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec4(r, c, d, d2);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 5D output coordinates.\n   */\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 6D output coordinates.\n   */\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\n    number, number\n  ]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n         ${coordsFromIndexSnippet}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Generates code for common UV coords computation utility functions.\n   */\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    let funcName = 'uvFromFlat';\n    result[funcName] = new GlslLibRoutine(`\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    `);\n    funcName = 'packedUVfrom1D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom2D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom3D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'sampleTexture';\n    const glsl = getGlsl(this.context.glContext.version);\n    result[funcName] = new GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${glsl.texture2D}(textureSampler, uv).r;\n        }`);\n    return result;\n  }\n\n  /**\n   * Constructing snippets for inputs\n   */\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const outputLayout = this.context.outputTextureLayout;\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\n      const inputLayout = this.context.inputTextureLayouts[i];\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\n      if (inputLayout.isPacked) {\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\n      } else {\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\n      }\n\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\n        if (inputLayout.isPacked) {\n          result[outCoordFuncName] =\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        } else {\n          result[outCoordFuncName] =\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Constructing snippets for output coordinates of samplers\n   */\n  protected getPackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texName = name;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\n\n    const inRank = inShape.length;\n    const outRank = outShape.length;\n\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n\n    const type = getCoordsDataType(outRank);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n\n    let output = 'return outputValue;';\n    const inSize = ShapeUtil.size(inShape);\n    const isInputScalar = inSize === 1;\n    const outSize = ShapeUtil.size(outShape);\n    const isOutputScalar = outSize === 1;\n\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n      output = `\n        return vec4(outputValue.xy, outputValue.xy);\n      `;\n    } else if (isInputScalar && !isOutputScalar) {\n      if (outRank === 1) {\n        output = `\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        `;\n      } else {\n        output = `\n          return vec4(outputValue.x);\n        `;\n      }\n    } else if (broadcastDims.length) {\n      const rows = inRank - 2;\n      const cols = inRank - 1;\n\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.x);';\n      } else if (broadcastDims.indexOf(rows) > -1) {\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\n            'outputValue.x, outputValue.y);';\n      } else if (broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\n      }\n    }\n\n    const swapLastDimsSnippet = `\n        int lastDim = coords.${fields[outRank - 1]};\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\n        coords.${fields[outRank - 2]} = lastDim;\n      `;\n    const source = `\n      vec4 ${funcName}() {\n        ${type} coords = getOutputCoords();\n        ${swapLastDimsSnippet}\n        ${coordsSnippet}\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\n        ${output}\n      }\n    `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for unpacked output coordinates of samplers\n   */\n  protected getUnpackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const inTexShape = [inputLayout.width, inputLayout.height];\n    const inRank = inputLayout.unpackedShape.length;\n    const outRank = outputLayout.unpackedShape.length;\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\n\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, TexCoords);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const type = getCoordsDataType(outRank);\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n    const source = `\n        float ${funcName}() {\n          ${type} coords = getOutputCoords();\n          ${coordsSnippet}\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for packed operations.\n   */\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    switch (inputLayout.unpackedShape.length) {\n      case 0:\n        return this.getPackedSamplerScalar(funcName, name);\n      case 1:\n        return this.getPackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getPackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getPackedSampler3D(funcName, name, inputLayout);\n      default:\n        return this.getPackedSamplerND(funcName, name, inputLayout);\n    }\n  }\n\n  /**\n   * Constructing snippets for unpacked operations.\n   */\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    switch (shape.length) {\n      case 0:\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\n      case 1:\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\n      case 4:\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\n      case 5:\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\n      case 6:\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\n      default:\n        // TODO support more dimensionalities\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\n    }\n  }\n\n  /**\n   * Packed scalar snippet.\n   */\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\n    const glsl = getGlsl(this.context.glContext.version);\n    const source = `\n          vec4 ${funcName}() {\n            return ${glsl.texture2D}(${name}, halfCR);\n          }\n        `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Packed 1D snippet.\n   */\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[1], texShape[0]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedSampler = `vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\n  }\n\n  /**\n   * Packed 2D snippet.\n   */\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n        return ${glsl.texture2D}(${name}, uv);\n      }`;\n\n      return new GlslLibRoutine(packedSampler);\n    }\n    const packedTexShape = texShape;\n    const valuesPerRow = Math.ceil(shape[1] / 2);\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\n  }\n\n  /**\n   * Packed 3D snippet.\n   */\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[0], texShape[1]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    if (shape[0] === 1) {\n      const squeezedShape = shape.slice(1);\n      const keptDims = [1, 2];\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['b', 'row', 'col'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\n      const packedSampler = `${samplerRoutine.routineBody}\n      vec4 ${funcName}(int b, int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      } `;\n      const source = packedSampler;\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\n    }\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n\n    const valuesPerRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${name}, uv);}`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\n  }\n  /*\n   * Packed ND snippet.\n   */\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const rank = shape.length;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texNumR = packedTexShape[1];\n    const texNumC = packedTexShape[0];\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    let params = 'int b, int row, int col';\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n    for (let b = 2; b < rank - 1; b++) {\n      params = `int b${b}, ` + params;\n      texelsInBatch *= shape[rank - b - 1];\n      index = `b${b} * ${texelsInBatch} + ` + index;\n    }\n    const packedSampler = `vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked scalar snippet.\n   */\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\n    if (texNumR === 1 && texNumC === 1) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, halfCR);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const source = `\n        float ${funcName}() {\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 1D snippet.\n   */\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const tNumR = inputLayout.width;\n    const tNumC = inputLayout.height;\n\n    if (tNumC === 1 && tNumR === 1) {\n      const source = `\n        float ${funcName}(int index) {\n          return sampleTexture(${name}, halfCR);\n        }\n      `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    if (tNumC === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    if (tNumR === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    const source = `\n        float ${funcName}(int index) {\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 2D snippet.\n   */\n\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n\n    // TODO: modify row/col order for other dimensions.\n    const texShape = [inputLayout.height, inputLayout.width];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const texNumR = texShape[1];\n      const texNumC = texShape[0];\n      const source = `\n          float ${funcName}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const params = ['col', 'row'];\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const texNumR = texShape[1];\n    const texNumC = texShape[0];\n    if (texNumC === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    if (texNumR === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    const source = `\n        float ${funcName}(int row, int col) {\n          int index = col * ${shape[1]} + row;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 3D snippet.\n   */\n\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride0 = shape[1] * shape[2];\n    const stride1 = shape[2];\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['batch', 'col', 'row'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\n      // TODO: revisit the logic here to make it simpler\n      const revDims = keptDims.reverse();\n      const source = `\n          ${routine.routineBody}\n          float ${funcName}(int batch, int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, revDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, routine.dependencies);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${stride0} + col * ${stride1} + row;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 4D snippet.\n   */\n\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride2 = shape[3];\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    //\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\n    //\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\n    // if (newShape.length < shape.length) {\n    //   const newInputShape = squeezeInputShape(shape, newShape);\n    //   const params = ['row', 'col', 'depth', 'depth2'];\n    //   // Deep copy of input texture layout.\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n    //   newInputLayout.unpackedShape = newInputShape;\n    //   const source = `\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\n    //       }\n    //     `;\n    //   return new GlslLibRoutine(\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    // }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2) {\n          int index = row * ${stride0} + col * ${stride1} +\n              depth2 * ${stride2} + depth;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 5D snippet.\n   */\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride3 = shape[4];\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth3 * ${stride3} + depth2;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n  }\n\n  /**\n   * Unpacked 6D snippet.\n   */\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride4 = shape[5];\n    const stride3 = shape[4] * stride4;\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n            float ${funcName}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\n            }\n          `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * This is the main function to map from the given texture coordiantes (s,t)\n   * to logical indices for the output\n   * There will only be one single variation of this\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\n   */\n  protected toVec(): {[name: string]: GlslLibRoutine} {\n    const output = this.context.outputTextureLayout;\n    const rank = output.shape.length;\n    const strides = output.strides;\n    const xScale = output.width;\n    const yScale = output.height;\n\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n        c[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= c[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n        c[${rank - 1}] = offset;`);\n    const body = `\n      void toVec(vec2 texCoords, out int c[${rank}]) {\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\n        ${stridesBlock.join('')}\n      }\n      void toVec(int offset, out int c[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n    `;\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\n  }\n  /**\n   * These are value getter functions generated for each input\n   * Each function is hardwired to the name and dimensions of the input\n   * An '_T' variation is also produced which accesses values as if the\n   * input was transposed\n   */\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const layout = this.context.inputTextureLayouts[i];\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\n      const rank = shape.length;\n      let funcName = `_${name}`;\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n      funcName = funcName + '_T';\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n    });\n    return result;\n  }\n  /**\n   * Produces one value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        float ${name}(int m[${rank}]) {\n          int offset = indicesToOffset${name}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\n          return value;\n        }\n        `;\n  }\n\n  /**\n   * Produces a packed value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}_Pack`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        vec4 ${name}(int m[${rank}]) {\n          int offset = indicesToOffset_${varName}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          return ${glsl.texture2D}(${varName}, coords);\n        }\n        `;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ProgramInfo, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum FunctionType {\n  ValueBased,\n  Positional\n}\nexport interface GlslFunction<T extends FunctionType> {\n  body: string;\n  name: string;\n  type: T;\n}\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\n  inputShape: readonly number[];\n  outputShape: readonly number[];\n}\n\nexport class GlslContext {\n  constructor(\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\n      public outputTextureLayout: TextureLayout) {}\n}\nexport abstract class GlslLib {\n  constructor(public context: GlslContext) {}\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\n  abstract getCustomTypes(): {[name: string]: string};\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies\nexport class GlslLibRoutine {\n  constructor(public routineBody: string, public dependencies?: string[]) {}\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\nexport class GlslLibRoutineNode {\n  dependencies: GlslLibRoutineNode[];\n  routineBody: string;\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\n    if (dependencies) {\n      this.dependencies = dependencies;\n    } else {\n      this.dependencies = [];\n    }\n\n    if (routineBody) {\n      this.routineBody = routineBody;\n    }\n  }\n  addDependency(node: GlslLibRoutineNode) {\n    if (node) {\n      this.dependencies.push(node);\n    }\n  }\n}\n\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\nexport class TopologicalSortGlslRoutines {\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\n    if (!nodes || nodes.length === 0) {\n      return [];\n    }\n\n    if (nodes.length === 1) {\n      return nodes;\n    }\n\n    const cycleCheck = new Set<string>();\n    const alreadyTraversed = new Set<string>();\n    const result = new Array<GlslLibRoutineNode>();\n\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\n    return result;\n  }\n\n  private static createOrderedNodes(\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\n      result: GlslLibRoutineNode[]) {\n    for (let i = 0; i < graphNodes.length; ++i) {\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\n    }\n  }\n\n  private static dfsTraverse(\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\n    // if this root has already been traversed return\n    if (!root || alreadyTraversed.has(root.name)) {\n      return;\n    }\n\n    // cyclic dependency has been detected\n    if (cycleCheck.has(root.name)) {\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\n    }\n\n    // hold this node to detect cycles if any\n    cycleCheck.add(root.name);\n\n    // traverse children in a dfs fashion\n    const dependencies = root.dependencies;\n    if (dependencies && dependencies.length > 0) {\n      for (let i = 0; i < dependencies.length; ++i) {\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\n      }\n    }\n\n    // add to result holder\n    result.push(root);\n\n    // mark this node as traversed so that we don't traverse from this again\n    alreadyTraversed.add(root.name);\n\n    // release the hold\n    cycleCheck.delete(root.name);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * This GLSL library handles routines converting\n * float32 to/from Unsigned byte or float 16\n */\nexport class EncodingGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        `)\n    };\n  }\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      encode: new GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${endianness}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode a vec4 of unsigned bytes to float32\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      decode: new GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${endianness}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)\n    };\n  }\n  /**\n   * Determines if the machine is little endian or not\n   * @credit: https://gist.github.com/TooTallNate/4750953\n   */\n  static isLittleEndian(): boolean {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) {\n      return true;\n    }\n    if (c[0] === 0xde) {\n      return false;\n    }\n    throw new Error('unknown endianness');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\n\n/**\n * This GLSL library handles routines around reading a texlet and writing to it\n * Reading and writing could be more than just dealing with one channel\n * It may require encoding/decoding to/from 4 channels into one\n */\nexport class FragColorGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\n    const glsl = getGlsl(this.context.glContext.version);\n    return {\n      setFragColor: new GlslLibRoutine(\n          `\n        void setFragColor(float value) {\n            ${glsl.output} = encode(value);\n        }\n        `,\n          ['encoding.encode'])\n    };\n  }\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\n    return {\n      getColorAsFloat: new GlslLibRoutine(\n          `\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        `,\n          ['encoding.decode'])\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\n/**\n * GLSL preprocessor responsible for resolving @inline directives\n */\nexport function replaceInlines(script: string): string {\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\n  let match;\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\n    const params = match[3]\n                       .split(',')\n                       .map(s => {\n                         const tokens = s.trim().split(' ');\n                         if (tokens && tokens.length === 2) {\n                           return {type: tokens[0], name: tokens[1]};\n                         }\n                         return null;\n                       })\n                       .filter(v => v !== null);\n    inlineDefs[match[2]] = {params, body: match[4]};\n  }\n  for (const name in inlineDefs) {\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\n    const regex = new RegExp(regexString, 'gm');\n    while ((match = regex.exec(script)) !== null) {\n      const type = match[1];\n      const variable = match[2];\n      const params = match[3].split(',');\n      const declLine = (type) ? `${type} ${variable};` : '';\n      let newBody: string = inlineDefs[name].body;\n      let paramRedecLine = '';\n      inlineDefs[name].params.forEach((v, i) => {\n        if (v) {\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\n        }\n      });\n      newBody = `${paramRedecLine}\\n ${newBody}`;\n      newBody = newBody.replace('return', `${variable} = `);\n      const replacement = `\n      ${declLine}\n      {\n        ${newBody}\n      }\n      `;\n      script = script.replace(match[0], replacement);\n    }\n  }\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\n  return script;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\nimport {replaceInlines} from './glsl-function-inliner';\nimport {glslRegistry} from './glsl-registered-libs';\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * Preprocessor for the additions to the GLSL language\n * It deals with:\n *  @include directives\n *  @inline\n *  Loop unrolling (not implemented)\n *  Macro resolution (not implemented)\n */\nexport class GlslPreprocessor {\n  readonly context: GlslContext;\n  readonly libs: {[name: string]: GlslLib} = {};\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\n\n  constructor(\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\n      outputTextureLayout: TextureLayout) {\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n\n    // construct GlslLibs\n    Object.keys(glslRegistry).forEach((name: string) => {\n      const lib = new glslRegistry[name](this.context);\n      this.libs[name] = lib;\n    });\n\n    // construct GlslRoutineDependencyGraph\n    const map = this.glslLibRoutineDependencyGraph;\n    for (const libName in this.libs) {\n      const lib = this.libs[libName];\n      const routinesInLib = lib.getFunctions();\n      for (const routine in routinesInLib) {\n        const key = libName + '.' + routine;\n        let currentNode: GlslLibRoutineNode;\n        if (map[key]) {\n          currentNode = map[key];\n          currentNode.routineBody = routinesInLib[routine].routineBody;\n        } else {\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\n          map[key] = currentNode;\n        }\n        const dependencies = routinesInLib[routine].dependencies;\n        if (dependencies) {\n          for (let i = 0; i < dependencies.length; ++i) {\n            if (!map[dependencies[i]]) {\n              const node = new GlslLibRoutineNode(dependencies[i]);\n              map[dependencies[i]] = node;\n              currentNode.addDependency(node);\n            } else {\n              currentNode.addDependency(map[dependencies[i]]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  preprocess(): string {\n    const programInfo = this.context.programInfo;\n    let source = programInfo.shaderSource;\n\n    // append main() function\n    if (!this.context.programInfo.hasMain) {\n      source = `${source}\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\n    }\n    // replace inlines\n    source = replaceInlines(source);\n\n    // concat final source string\n    return `${getFragShaderPreamble(this.context.glContext.version)}\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\n    ${this.getImports(source)}\n    ${source}`;\n  }\n\n  protected getImports(script: string): string {\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\n\n    if (routinesIncluded.length === 0) {\n      return '';\n    }\n\n    let routines = '';\n    for (let i = 0; i < routinesIncluded.length; ++i) {\n      if (routinesIncluded[i].routineBody) {\n        routines += routinesIncluded[i].routineBody + '\\n';\n      } else {\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\n      }\n    }\n\n    return routines;\n  }\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\n    const nodes: GlslLibRoutineNode[] = [];\n\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\n      const routine = classAndRoutine.split('.')[1];\n      if (script.indexOf(routine) !== -1) {\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\n      }\n    });\n\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\n  }\n\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\n    const uniformLines: string[] = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLines.push(`uniform sampler2D ${sampler};`);\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLines.push(\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\n      }\n    }\n    return uniformLines.join('\\n');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\nimport {GlslContext, GlslLib} from './glsl-definitions';\nimport {EncodingGlslLib} from './glsl-encoding-lib';\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\nimport {VecGlslLib} from './glsl-vec-lib';\n\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\n  'encoding': EncodingGlslLib,\n  'fragcolor': FragColorGlslLib,\n  'vec': VecGlslLib,\n  'shapeUtils': ShapeUtilsGlslLib,\n  'coordinates': CoordsGlslLib,\n  //  'arrays': ArrayGlslSLib\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class ShapeUtilsGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.bcastIndex(),\n      ...this.bcastMatmulIndex(),\n      ...this.offsetToIndices(),\n      ...this.indicesToOffset(),\n      ...this.incrementIndices()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\n      if (shape.length <= outputRank) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      if (!(shape.length < 2 || shape.length > outputRank)) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastMatmulIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank - 2; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `indicesToOffset_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\n      funcName = `indicesToOffset_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\n    let block = '';\n    for (let i = rank - 1; i >= 0; --i) {\n      block += `\n        offset += indices[${i}] * ${strides[i]};\n        `;\n    }\n    return `\n      int ${name}(int indices[${rank}]) {\n        int offset = 0;\n        ${block}\n        return offset;\n      }\n      `;\n  }\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `offsetToIndices_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\n      funcName = `offsetToIndices_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n      indices[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= indices[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n      indices[${rank - 1}] = offset;`);\n    return `\n      void ${name}(int offset, out int indices[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n      `;\n  }\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const rank = shape.length;\n      const funcName = `incrementIndices_${name}`;\n      let shapeInit = '';\n      for (let i = 0; i < rank; ++i) {\n        shapeInit += `\n        shape[${i}] = ${shape[i]};`;\n      }\n      const body = `\n        void ${funcName}(int axis, out int indices[${rank}]) {\n          int shape[${rank}];\n          ${shapeInit};\n          for(int i = ${rank} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;\n      result[funcName] = new GlslLibRoutine(body);\n    });\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * represent a version irrelevant abstraction of for GLSL source code\n */\nexport interface Glsl {\n  readonly version: string;\n  readonly attribute: string;\n  readonly varyingVertex: string;\n  readonly varyingFrag: string;\n  readonly texture2D: string;\n  readonly output: string;\n  readonly outputDeclaration: string;\n}\n\nconst GLSL_ES_2_0: Glsl = {\n  version: '',\n  attribute: 'attribute',\n  varyingVertex: 'varying',\n  varyingFrag: 'varying',\n  texture2D: 'texture2D',\n  output: 'gl_FragColor',\n  outputDeclaration: '',\n};\nconst GLSL_ES_3_0: Glsl = {\n  version: '#version 300 es',\n  attribute: 'in',\n  varyingVertex: 'out',\n  varyingFrag: 'in',\n  texture2D: 'texture',\n  output: 'outputColor',\n  outputDeclaration: 'out vec4 outputColor;',\n};\n\nexport function getGlsl(version: 1|2) {\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\n}\n\nexport function getVertexShaderSource(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n      precision highp float;\n      ${glsl.attribute} vec3 position;\n      ${glsl.attribute} vec2 textureCoord;\n\n      ${glsl.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`;\n}\n\nexport function getFragShaderPreamble(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFrag} vec2 TexCoords;\n    ${glsl.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `;\n}\n\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\n  const glsl = getGlsl(version);\n  return `\n  void main() {\n    int indices[${outputShapeLength}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${glsl.output} = result;\n  }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for vec routines\n * Vec is an varible length int array. The length is fixed at the time of\n * generating the library functions from the dimensions of the output.\n */\nexport class VecGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\n  }\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\n    const result: {[name: string]: GlslLibRoutine} = {};\n    for (const name in nameOp) {\n      const fname = `${name}Vec`;\n      let assignmentBlock = '';\n      for (let i = 0; i < rank; ++i) {\n        assignmentBlock += `\n          dest[${i}] ${nameOp[name]} src[${i}];\n          `;\n      }\n      const body = `\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\n          ${assignmentBlock}\n        }\n        `;\n      result[fname] = new GlslLibRoutine(body);\n    }\n\n    return result;\n  }\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let assignmentBlock = '';\n    for (let i = 0; i < rank; ++i) {\n      assignmentBlock += `\n        dest[${i}] = src[${i}];\n        `;\n    }\n    const body = `\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\n        ${assignmentBlock}\n      }\n      `;\n    return {copyVec: new GlslLibRoutine(body)};\n  }\n\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index =${rank} + index;\n        if (index == 0)\n            m[0] = value;\n        `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            m[${i}] = value;\n            `;\n    }\n    block += `\n        else\n            m[${rank - 1}] = value;\n        `;\n    const body = `\n      void setVecItem(out int m[${rank}], int index, int value) {\n        ${block}\n      }\n        `;\n    return {setVecItem: new GlslLibRoutine(body)};\n  }\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index = ${rank} + index;\n        if (index == 0)\n            return m[0];\n      `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            return m[${i}];\n      `;\n    }\n    block += `\n        else\n            return m[${rank - 1}];\n        `;\n    const body = `\n      int getVecItem(int m[${rank}], int index) {\n        ${block}\n      }\n    `;\n    return {getVecItem: new GlslLibRoutine(body)};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from '../../backend';\nimport {Logger} from '../../instrument';\nimport {Tensor} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {createPackProgramInfoLoader} from './ops/pack';\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\n\nimport {encodeAsUint8} from './ops/uint8-encode';\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\nimport {WebGLSessionHandler} from './session-handler';\nimport {Encoder} from './texture-data-encoder';\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\n\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\n      const inputs =\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\n              .join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputs;\n      return key;\n    };\n\nexport class WebGLInferenceHandler implements InferenceHandler {\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  constructor(public session: WebGLSessionHandler) {\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  /**\n   * @returns [width, height]\n   */\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\n  }\n\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\n    if (inputs.length < program.inputNames.length) {\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\n    }\n    if (program.inputNames.length !== program.inputTypes.length) {\n      throw new Error('input names size does not match input types');\n    }\n\n    // create texture info for input\n    const inputTextureDatas: TextureData[] = [];\n    for (let i = 0; i < program.inputNames.length; ++i) {\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\n    let artifact = this.session.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // create texture info for output\n    const outputTextureLayout = createTextureLayoutFromTextureType(\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\n\n    if (!artifact) {\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\n      this.session.programManager.setArtifact(key, artifact);\n    }\n\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\n    return outputTextureData;\n  }\n\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\n    const outputTextureData = this.executeProgram(program, inputs);\n    return outputTextureData.tensor;\n  }\n\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    // input should match\n    for (let i = 0; i < inputs.length; ++i) {\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\n        throw new Error(`input[${i}] property packed inconsistent`);\n      }\n    }\n\n    // output should match\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\n      throw new Error('output property packed inconsistent');\n    }\n\n    this.session.programManager.run(artifact, inputs, output);\n  }\n\n  /**\n   * Create a TextureData object from a tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * If a related texture data is found in cache, returns it;\n   * Otherwise:\n   *   Creates a new texture layout if not provided;\n   *   Creates WebGLTexture with the layout;\n   *   Upload tensor data to the texture;\n   *   Creates a texture data object associated with the given tensor.\n   * @param tensor the tensor with data to upload\n   */\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\n\n    if (!td) {\n      // check if we have texture data in different type\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\n      if (td) {\n        if (textureType === TextureType.packed) {\n          return this.pack(td);\n        } else {\n          return this.unpack(td);\n        }\n      }\n    }\n\n    if (!td) {\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\n\n      if (textureType === TextureType.packedLastDimension) {\n        const group = 1;\n        const channels = 4;\n        const shape = tensor.dims;\n        if (shape.length === 4) {\n          // pre-processing for kernel data of Conv.\n          //\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\n          // 1. implement texture based const-folding\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\n          // 3. run the program before dotProduct.\n          //\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\n          const adjustedLayout =\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\n          let buffer = tensor.numberData;\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\n            const numFeatureMaps = shape[0];\n            const oldRowSize = shape[1] * shape[2] * shape[3];\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\n            const newSize = numFeatureMaps * newRowSize;\n            buffer = new Float32Array(newSize);\n            for (let f = 0; f < numFeatureMaps; ++f) {\n              const oldOffset = f * oldRowSize;\n              const newOffset = f * newRowSize + f % group * oldRowSize;\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\n            }\n          }\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\n        }\n      }\n\n      if (textureType === TextureType.packed) {\n        const unpackedTextureLayout =\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\n        const unpackedTextureData = this.createTextureData(\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n        td = this.pack(unpackedTextureData);\n      } else {\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n      }\n    }\n    return td;\n  }\n\n  /**\n   * Create a TextureData object using the given data and bind to the given tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\n   * implementation by Graph.Transformer\n   * @param dataType the tensor data type\n   * @param data the actual data to upload\n   * @param tensor the tensor to bind. tensor's data is ignored.\n   */\n  createTextureDataFromLayoutBindTensor(\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\n  }\n\n  private createTextureData(\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\n      usage?: Encoder.Usage): TextureData {\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\n  }\n\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureLayout: TextureLayout = {\n      channels: inputTD.channels,\n      height: inputTD.height,\n      width: inputTD.width,\n      // handle reshaping into scalar Tensors\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n      strides: ShapeUtil.computeStrides(reshapedDims),\n      unpackedShape: reshapedDims,\n    };\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\n\n    // check if the reshape is 'cheap'\n    if (isReshapeCheap(input.dims, reshapedDims)) {\n      const newTextureLayout: TextureLayout = {\n        channels: inputTD.channels,\n        height: inputTD.height,\n        width: inputTD.width,\n        // handle reshaping into scalar Tensors\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n        strides: ShapeUtil.computeStrides(reshapedDims),\n        unpackedShape: reshapedDims,\n        isPacked: true\n      };\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n      return newTextureData.tensor;\n    }\n\n    const squeezedInputShape = processDims3D(input.dims);\n    const squeezedOutputShape = processDims3D(reshapedDims);\n\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\n    const squeezedOutputTensor = this.run(\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\n    return outputTensor;\n  }\n\n  private createTextureDataFromTexture(\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\n    const textureData: TextureData = {\n      ...layout,\n      tensor: tensor ||\n          new Tensor(\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\n      texture\n    };\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\n    return textureData;\n  }\n\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\n    return this.session.isInitializer(tensorId) ?\n        this.session.getTextureData(tensorId, isPacked) :\n        isPacked ? this.packedTextureDataCache.get(tensorId) : this.unpackedTextureDataCache.get(tensorId);\n  }\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\n    if (this.session.isInitializer(tensorId)) {\n      this.session.setTextureData(tensorId, td, isPacked);\n    } else {\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\n    }\n  }\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\n    return !!this.getTextureData(tensor.dataId, isPacked);\n  }\n\n  dispose(): void {\n    this.session.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  readTexture(textureData: TextureData): Tensor.NumberType {\n    if (textureData.isPacked) {\n      return this.readTexture(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\n    if (textureData.isPacked) {\n      return this.readTextureAsync(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  pack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n\n  unpack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OpSet} from '../../opset';\n\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\nimport * as binaryOps from './ops/binary-op';\nimport {concat, parseConcatAttributes} from './ops/concat';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\nimport {gather, parseGatherAttributes} from './ops/gather';\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\nimport {pad, parsePadAttributes} from './ops/pad';\nimport {averagePool, parseAveragePoolAttributes} from './ops/pool';\nimport {globalAveragePool, parseGlobalAveragePoolAttributes} from './ops/pool';\nimport {maxPool, parseMaxPoolAttributes} from './ops/pool';\nimport {globalMaxPool} from './ops/pool';\nimport {reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\nimport {parseReduceAttributes} from './ops/reduce';\nimport {reshape} from './ops/reshape';\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\nimport {shape} from './ops/shape';\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\nimport {parseSoftmaxAttributes, softmax} from './ops/softmax';\nimport {parseSplitAttributes, split} from './ops/split';\nimport {parseSqueezeAttributes, squeeze} from './ops/squeeze';\nimport {sum} from './ops/sum';\nimport {tile} from './ops/tile';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {parseUnsqueezeAttributes, unsqueeze} from './ops/unsqueeze';\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\n\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\n  ['Abs', '', '6+', unaryOps.abs],\n  ['Acos', '', '7+', unaryOps.acos],\n  ['Add', '', '7+', binaryOps.add],\n  ['And', '', '7+', binaryOps.and],\n  ['Asin', '', '7+', unaryOps.asin],\n  ['Atan', '', '7+', unaryOps.atan],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', '', '7-10', averagePool, parseAveragePoolAttributes],\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\n  ['Ceil', '', '6+', unaryOps.ceil],\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\n  ['Concat', '', '4+', concat, parseConcatAttributes],\n  ['Conv', '', '1+', conv, parseConvAttributes],\n  ['Cos', '', '7+', unaryOps.cos],\n  ['Div', '', '7+', binaryOps.div],\n  ['Dropout', '', '7+', unaryOps.identity],\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\n  ['Equal', '', '7+', binaryOps.equal],\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\n  ['Exp', '', '6+', unaryOps.exp],\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\n  ['Floor', '', '6+', unaryOps.floor],\n  ['Gather', '', '1+', gather, parseGatherAttributes],\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\n  ['Greater', '', '7+', binaryOps.greater],\n  ['Identity', '', '1+', unaryOps.identity],\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\n  ['Less', '', '7+', binaryOps.less],\n  ['Log', '', '6+', unaryOps.log],\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', '', '1-9', maxPool, parseMaxPoolAttributes],\n  ['Mul', '', '7+', binaryOps.mul],\n  ['Neg', '', '6+', unaryOps.neg],\n  ['Not', '', '1+', unaryOps.not],\n  ['Or', '', '7+', binaryOps.or],\n  ['Pad', '', '2-10', pad, parsePadAttributes],\n  ['Pow', '', '7+', binaryOps.pow],\n  ['PRelu', '', '7+', binaryOps.pRelu],\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\n  ['ReduceSum', '', '1+', reduceSum, parseReduceAttributes],\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\n  ['Relu', '', '6+', unaryOps.relu],\n  ['Reshape', '', '5+', reshape],\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\n  ['Shape', '', '1+', shape],\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\n  ['Sin', '', '7+', unaryOps.sin],\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\n  ['Softmax', '', '1+', softmax, parseSoftmaxAttributes],\n  // 'Split' operator has an optional attribute 'split'\n  // this attribute determines how the specified axis of input data is split.\n  // When the attribute is missing, we need the count of number of outputs\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\n  ['Split', '', '2+', split, parseSplitAttributes],\n  ['Sqrt', '', '6+', unaryOps.sqrt],\n  ['Squeeze', '', '1+', squeeze, parseSqueezeAttributes],\n  ['Sub', '', '7+', binaryOps.sub],\n  ['Sum', '', '6+', sum],\n  ['Tan', '', '7+', unaryOps.tan],\n  ['Tanh', '', '6+', unaryOps.tanh],\n  ['Tile', '', '6+', tile],\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\n  ['Unsqueeze', '', '1+', unsqueeze, parseUnsqueezeAttributes],\n  ['Xor', '', '7+', binaryOps.xor],\n];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\n  epsilon: number;\n  momentum: number;\n  spatial: number;\n}\n\nconst batchNormalizationProgramMetadata = {\n  name: 'BatchNormalization',\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\n  inputTypes:\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\n};\n\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...batchNormalizationProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\n    (node: Graph.Node): BatchNormalizationAttributes => {\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\n      const momentum = node.attributes.getFloat('momentum', 0.9);\n      const spatial = node.attributes.getInt('spatial', 1);\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\n    };\n\nconst createBatchNormalizationProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\n        ProgramInfo => {\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const rank = inputs[0].dims.length;\n          const [scaleWidth, scaleHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\n          const shaderSource = `\n  float process(int[${rank}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\n  }`;\n          return {\n            ...batchNormalizationProgramMetadata,\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 5) {\n    throw new Error('BatchNormalization requires 5 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n  const mean = inputs[3];\n  const var_ = inputs[4];\n\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\n      var_.dims.length !== 1) {\n    throw new Error('invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\n      var_.dims[0] !== X.dims[1]) {\n    throw new Error('invalid input shape.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport function glslAdd(): GlslValueFunction {\n  const name = 'add_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslDiv(): GlslValueFunction {\n  const name = 'div_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslMul(): GlslValueFunction {\n  const name = 'mul_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSub(): GlslValueFunction {\n  const name = 'sub_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslEqual(): GlslValueFunction {\n  const name = 'equal_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslGreater(): GlslValueFunction {\n  const name = 'greater_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLess(): GlslValueFunction {\n  const name = 'less_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslAnd(): GlslValueFunction {\n  const name = 'and_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslOr(): GlslValueFunction {\n  const name = 'or_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslXor(): GlslValueFunction {\n  const name = 'xor_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslPow(): GlslValueFunction {\n  return glslBuiltinBinary('pow');\n}\nexport function glslPRelu(): GlslValueFunction {\n  const name = 'prelu_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\n  const name = `${fname}_`;\n  const body = `\n  float ${name}(float a, float b) {\n    return ${fname}(a, b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return ${fname}(v1, v2);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nconst createBinaryProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        cacheHint: cacheKey,\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\n      };\n    };\n\nconst createBinaryProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n      let outputShape = inputs[0].dims;\n\n      const usePackedTexture = handler.session.pack;\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        const outputRank = outputShape.length;\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\n\n        const glsl = getGlsl(handler.session.backend.glContext.version);\n        const shaderSource = usePackedTexture ? `\n      ${glslFunc.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${glslFunc.name}(a, b);\n        ${glsl.output} = result;\n      }` :\n                                                `\n      ${glslFunc.body}\n      float process(int indices[${outputRank}]) {\n        int aindices[${aRank}];\n        int bindices[${bRank}];\n        ${aBcast}\n        ${bBcast}\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\n      }`;\n\n        return {\n          name: glslFunc.name,\n          inputNames: ['A', 'B'],\n          inputTypes: [textureType, textureType],\n          output: {dims: outputShape, type: outputTensorType, textureType},\n          shaderSource,\n          hasMain: usePackedTexture\n        };\n      }\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n      const shaderSource = `\n    ${glslFunc.body}\n    void main() {\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\n      vec4 result = ${glslFunc.name}(v1, v2);\n      ${glsl.output} = result;\n    }\n    `;\n\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\n\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\n\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\n\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\n\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\n\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\n\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\n\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\n\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\n\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\n\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\n\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\nimport {ConcatAttributes} from './concat';\n\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat (packed)',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.packed),\n  cacheHint\n});\n\nconst createPackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n      const coords = getChannels('coords', rank);\n      const dtype = getCoordsDataType(rank);\n      const unpackChannel = unpackFromChannel();\n\n      const shapes = inputs.map(i => i.dims);\n      const channels = getGlChannels(rank);\n      const offsets: number[] = new Array(shapes.length - 1);\n\n      offsets[0] = shapes[0][axis];\n      for (let i = 1; i < offsets.length; i++) {\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\n      }\n\n      const channel = channels[axis];\n      const lastChannels = channels.slice(-2);\n      const allChannels = channels.join();\n\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\n        return getChannel(\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\n        }`;\n      for (let i = 1; i < offsets.length; i++) {\n        const shift = offsets[i - 1];\n        getValueSnippet += `\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\n              return getChannel(\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\n            }`;\n      }\n      const lastIndex = offsets.length;\n      const shift = offsets[offsets.length - 1];\n      getValueSnippet += `\n            return getChannel(\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\n\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n\n      const shaderSource = `\n          ${unpackChannel}\n          float getValue(${channels.map(x => 'int ' + x)}) {\n            ${getValueSnippet}\n          }\n\n          void main() {\n            ${dtype} coords = getOutputCoords();\n            int lastDim = coords.${channels[rank - 1]};\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\n            coords.${channels[rank - 2]} = lastDim;\n\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.g = getValue(${coords});\n            }\n\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\n              result.a = getValue(${coords});\n            }\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.b = getValue(${coords});\n            }\n            ${glsl.output} = result;\n          }\n        `;\n\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createPackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\n  const channelIdx = channels.indexOf(channel);\n  const res = channels.map((c, idx) => {\n    if (idx === channelIdx) {\n      return `${c} - ${shift}`;\n    } else {\n      return c;\n    }\n  });\n  return res.join();\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\n\nexport interface ConcatAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const concat: OperatorImplementation<ConcatAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\n      validateInputs(inputs);\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\n        const output =\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      } else {\n        const output =\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      }\n    };\n\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\n  cacheHint\n});\n\nconst createUnpackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n\n      const sizeInConcatAxis = new Array<number>(inputs.length);\n      let previousSum = 0;\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n        previousSum += inputs[i].dims[axis];\n        sizeInConcatAxis[i] = previousSum;\n      }\n\n      let getTextureIndexWhereDataResidesMethod = '';\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\n      if (inputs.length < 5) {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n      } else {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\n      }\n\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\n      const shaderSource = `\n        ${fetchDataFromCorrectTextureMethod}\n        ${getSizeInConcatAxisValueFromIndexMethod}\n        ${getTextureIndexWhereDataResidesMethod}\n        float process(int indices[${rank}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\n\n          if(textureIndex != 0) {\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n      };\n    };\n\nconst createUnpackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\n`);\n  return `int getTextureWhereDataResides(int index) {\n      ${searchAxis.join('')}\n    }`;\n};\n\n// TODO: Implement BinarySearch in GLSL\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\n  for (let i = 0; i < numberOfTensors; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    } else if (i === numberOfTensors - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return _X${i}(indices); }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    } else if (i === sizeInConcatAxis.length - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return ${sizeInConcatAxis[i]}; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n\n  return codeLines.join('\\n');\n};\n\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n\n  const inputType = inputs[0].type;\n  const inputDimensionality = inputs[0].dims.length;\n\n  // TODO: Support string concat\n  if (inputType === 'string') {\n    throw new Error('string tensor is not supported yet');\n  }\n\n  for (const input of inputs) {\n    // make sure types of all inputs match\n    if (input.type !== inputType) {\n      throw new Error('input tensors should be one type');\n    }\n\n    // make sure the dimensionality of all inputs are the same\n    if (input.dims.length !== inputDimensionality) {\n      throw new Error('input tensors should have the same shape');\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../../instrument';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActicationSnippet} from './fuse-utils';\n\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedGroupedConvProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\n      const xShape = inputs[0].dims.slice();\n      const wShape = inputs[1].dims.slice();\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n      Logger.verbose(\n          'GroupedConv',\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\n      const outputShape =\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${outputChannelsPerGroup};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createUnpackedGroupedConvProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\n        ProgramInfoLoader => {\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const conv2DPackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\n    };\n\nexport const conv2DPacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n\n      // run im2col\n      const im2colOutput = inferenceHandler.run(\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\n          [inputs[0]]);\n\n      // reshape kernel\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\n\n      // run matmul\n      const matmulInputs =\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n\n      // reshape output\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\n      return outputReshaped;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {conv2DPacked} from './conv-pack';\nimport {createDotProductProgramInfoLoader} from './dot-product';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createIm2ColProgramInfoLoader} from './im2col';\nimport {createMatmulProgramInfoLoader} from './matmul';\n\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(2);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputSpatialShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n}\n\nexport const conv: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\n      return conv2d(inferenceHandler, inputs, attributes);\n    };\n\nconst conv2d: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n      const packMode = inferenceHandler.session.pack;\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\n      if (adjustedAttributes.group > 1) {\n        const result = inferenceHandler.run(\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\n        return [result];\n      } else if (isPointwise && packMode) {\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\n      } else {\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n      }\n    };\n\nconst conv2DUnpackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\n    };\n\nconst conv2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const xIm2Col = inferenceHandler.run(\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\n\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\n      const output = inferenceHandler.run(\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\n      return output;\n    };\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\n  const attributes = node.attributes;\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\n  const dilations = attributes.getInts('dilations', [1, 1]);\n  const group = attributes.getInt('group', 1);\n  const kernelShape = attributes.getInts('kernel_shape', []);\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n  const strides = attributes.getInts('strides', [1, 1]);\n\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\n};\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface DepthToSpaceAttributes {\n  mode: 'DCR'|'CRD';\n  blocksize: number;\n}\n\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const blocksize = attributes.blocksize;\n      const blocksizeSqr = blocksize * blocksize;\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\n      const firstReshapeShape = attributes.mode === 'DCR' ?\n          [\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ] :\n          [\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ];\n\n      // const transpose = new WebGLTranspose();\n      // const attributes = new Attribute(undefined);\n      // attributes.set('perm', 'ints', transposePerm);\n      // transpose.initialize(attributes);\n\n      // First reshape\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\n\n      // transpose\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\n\n      // Second reshape\n      const secondReshapeShape = [\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\n        inputs[0].dims[3] * blocksize\n      ];\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\n      return [result];\n    };\n\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\n    (node: Graph.Node): DepthToSpaceAttributes => {\n      // processing node attributes\n      const blocksize = node.attributes.getInt('blocksize');\n      if (blocksize < 1) {\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\n      }\n      const mode = node.attributes.getString('mode', 'DCR');\n      if (mode !== 'DCR' && mode !== 'CRD') {\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\n      }\n      return {mode, blocksize};\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (inputs.length !== 1) {\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\n  }\n\n  // Input has to be a 4-D tensor\n  // TODO: Support string depth-to-space.\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {calculateIm2ColDims} from './im2col';\n\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\n  name: 'ConvDotProduct',\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.packedLastDimension],\n  cacheKey: attributes.activationCacheKey\n});\n\nconst createDotProductProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\n      const [kWidth, kHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\n\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\n      const [im2colWidth, im2colHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\n      const rank = outputShape.length;\n\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n${activationFunction}\nfloat process(int indices[${rank}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\n          im2colStrides[2]};\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\n  float value = ${initValue};\n  for (int i = 0; i < ${sharedDim}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${applyActivation}\n  return value;\n}`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nexport const createDotProductProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\n      return {\n        ...metadata,\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const flatten: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\n      validateInputs(inputs, axis);\n\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\n    };\n\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getInt('axis', 1);  // default axis is 1\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Flatten requires 1 input.');\n  }\n\n  const r = inputs[0].dims.length;\n  if (r === 0) {\n    throw new Error('scalar tensor is not supported.');\n  }\n\n  if (axis < -r || axis > r) {\n    throw new Error('Invalid axis');\n  }\n\n  // TODO: Support string type\n  if (inputs[0].type === 'string') {\n    throw new Error('string tensor is not supported.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Attribute} from '../../../attribute';\nimport {GlslValueFunction} from '../glsl-definitions';\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport function getActicationSnippet(attributes: InternalActivationAttributes) {\n  let func: GlslValueFunction;\n  switch (attributes.activation) {\n    case 'Relu':\n      func = glslRelu();\n      break;\n    case 'Sigmoid':\n      func = glslSigmoid();\n      break;\n    case 'Clip':\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\n      break;\n    // TODO: adding other activations that can be fused.\n    default:\n      return {activationFunction: '', applyActivation: ''};\n  }\n\n  const activationName = func.name;\n  const activationFunction = func.body;\n  const applyActivation = `value = ${activationName}_(value);`;\n  return {activationFunction, applyActivation};\n}\n\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\n  const activation = attributes.getString('__internal_activation', '');\n\n  if (activation === 'Clip') {\n    const clipMax = attributes.getFloat('__clip_max', 3.402823e+38);\n    const clipMin = attributes.getFloat('__clip_min', -3.402823e+38);\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n  }\n  return {activation, activationCacheKey: activation};\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\ninterface GatherAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const gather: OperatorImplementation<GatherAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\n      validateInputs(inputs, attributes.axis);\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\n\nconst gatherProgramMetadata = {\n  name: 'Gather',\n  inputNames: ['A', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createGatherProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const indexDataShape = inputs[1].dims.slice();\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\n\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\n      const indexCopyOps: string[] = [];\n      for (let i = 0; i < outputShape.length; i++) {\n        // outputShape is divided into three parts: A, B, C\n        // |0        axis|  axis + indexDataShape.length |          end|\n        // |     A       |             B                 |      C      |\n        //\n        // inputIdx: [A, inputs[1][B], C]\n        if (i < axis) {  // A\n          outputShape[i] = inputShape[i];\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\n        } else {\n          if (i < axis + indexDataShape.length) {  // B\n            outputShape[i] = indexDataShape[i - axis];\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\n          } else {                                                       // C\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\n          }\n        }\n      }\n\n      const orank = outputShape.length || 1;\n      const irank = inputShape.length;\n      const iDrank = indexDataShape.length || 1;\n      const shaderSource = `\n      float process(int outputIdx[${orank}]) {\n        int inputIdx[${irank}];\n        int indexDataIdx[${iDrank}];\n        indexDataIdx[0] = 0;\n        ${indexCopyOps.join('\\n        ')}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\n        return _A(inputIdx);\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createGatherProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Gather requires 2 inputs.');\n  }\n  const tensorRank = inputs[0].dims.length;\n  if (tensorRank < 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (axis < -tensorRank || axis > tensorRank - 1) {\n    throw new Error('Invalid axis.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invaid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invaid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {GemmUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n  isOptionalC: boolean;  // in opset 11, C becomes optional\n}\n\nexport const gemm: OperatorImplementation<GemmAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\n      return [output];\n    };\n\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\n  const transA = node.attributes.getInt('transA', 0) !== 0;\n  const transB = node.attributes.getInt('transB', 0) !== 0;\n  const alpha = node.attributes.getFloat('alpha', 1.0);\n  const beta = node.attributes.getFloat('beta', 1.0);\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\n};\n\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, false);\n\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, true);\n\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                                      [TextureType.unpacked, TextureType.unpacked],\n    key: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      let sharedDim = aShape[aShape.length - 1];\n      let line = '';\n      if (attributes.transA) {\n        sharedDim = aShape[0];\n      }\n      if (attributes.transA && attributes.transB) {\n        line = 'value += _A_T(a) * _B_T(b);';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += _A_T(a) * _B(b);';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += _A(a) * _B_T(b);';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += _A(a) * _B(b);';\n      }\n      const rank = outputShape.length;\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\n      const shaderSource = `\n      float process(int indices[${rank}]) {\n          int a[${rank}];\n          int b[${rank}];\n          ${declareC}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${broadcastC}\n\n          float value = 0.0;\n          for (int k=0; k<${sharedDim}; ++k) {\n              a[${rank - 1}] = k;\n              b[${rank - 2}] = k;\n              ${line}\n          }\n\n          value = value * alpha;\n          ${calculateC}\n          return value;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        variables: [\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\n        ],\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\n    throw new Error('Invaid input shape.');\n  }\n  if (!attributes.isOptionalC && inputs.length !== 3) {\n    throw new Error('Gemm requires 3 inputs');\n  }\n\n  // 'C' can be of dimensionality 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {ConvAttributes} from './conv';\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col (packed)',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed],\n  cacheHint,\n});\n\nconst createPackedIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n      const rowDim = 2;\n      const colDim = 3;\n      const rank = outputShape.length;\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\n      const kernelSize = wshape[2] * wshape[3];\n      const unpackChannel = unpackFromChannel();\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      let unrolled = '';\n\n      for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n          unrolled += `\n            blockIndex = rc.x + ${col};\n            pos = rc.y + ${row};\n\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} - ${\n              attributes.pads[0]};\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\n\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} - ${\n              attributes.pads[1]};\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\n\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${kernelSize}.);\n                    innerDims = vec2(d0, d1);\n                    result[${row * 2 + col}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;\n        }\n      }\n\n      const shaderSource = `\n      ${unpackChannel}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${unrolled}\n          ${glsl.output} = result;\n      }\n            `;\n      return {\n        ...metadata,\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {ConvAttributes} from './conv';\n\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n  cacheHint,\n});\n\nconst createIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n\n      const rank = outputShape.length;\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\n\n      const shaderSource = `\n        const int XC = ${xshape[1]};\n        const int XH = ${xshape[2]};\n        const int XW = ${xshape[3]};\n        const int KH = ${attributes.kernelShape[0]};\n        const int KW = ${attributes.kernelShape[1]};\n        const int dilationH = ${attributes.dilations[0]};\n        const int dilationW = ${attributes.dilations[1]};\n        const int strideH = ${attributes.strides[0]};\n        const int strideW = ${attributes.strides[1]};\n        const int padH = ${attributes.pads[0]};\n        const int padW = ${attributes.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${rank}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${xshape.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;\n      return {\n        ...metadata,\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\n        shaderSource\n      };\n    };\n\nexport const createIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n\n\nexport const calculateIm2ColDims =\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\n        number[] =>\n            [outputShape[0], outputShape[2], outputShape[3],\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\n  scale: number;\n  bias: number[];\n}\n\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output =\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\n    (node: Graph.Node): ImageScalerAttributes => {\n      const scale = node.attributes.getFloat('scale');\n      const bias = node.attributes.getFloats('bias');\n      return createAttributeWithCacheKey({scale, bias});\n    };\n\nconst imageScalerProgramMetadata = {\n  name: 'ImageScaler',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createImageScalerProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\n        ProgramInfo => {\n          const outputShape = inputs[0].dims.slice();\n          const rank = outputShape.length;\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\n          const shaderSource = `\n      ${getBiasMethod}\n      float process(int indices[${rank}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            variables: [\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\n              {name: 'scale', type: 'float', data: attributes.scale}\n            ],\n            shaderSource\n          };\n        };\n\nconst createImageScalerProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\n    };\n\nconst createGetBiasMethod = (numChannels: number): string => {\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\n  for (let i = 0; i < numChannels; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (channel == ${i}) { return bias[${i}]; }`);\n    } else if (i === numChannels - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return bias[${i}]; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (channel == ${i}) { return bias[${i}]; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('ImageScaler requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Invalid input shape.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport const instanceNormalization: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\n      validateInputs(inputs);\n\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\n      const output = inferenceHandler.run(\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\n      return [output];\n    };\n\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getFloat('epsilon', 1e-5);\n\nconst meanAndVarianceProgramMetadata = {\n  name: 'InstanceNormalization_MeanAndVariance',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\n  const xDims = input.dims.slice();\n  const channel = xDims[1];\n  const channelSize = xDims[2] * xDims[3];\n  const outputShape = [xDims[0], channel];\n\n  const shaderSource = `\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${channelSize});\n        temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${channelSize});\n\n        return v;\n      }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\n    shaderSource\n  };\n};\n\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\n  ...meanAndVarianceProgramMetadata,\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\n});\n\nconst computeOutputProgramMetadata = {\n  name: 'InstanceNormalization_ComputeOutput',\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createComputeOutputProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\n      const shaderSource = `\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\n        return ${glsl.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\n        shaderSource\n      };\n    };\n\nconst createComputeOutputProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\n        ProgramInfoLoader => {\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\n          return {\n            ...metadata,\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 3) {\n    throw new Error('InstanceNormalization requires 3 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n\n  // input should at least have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\n    throw new Error('Input shapes are mismatched.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Only support 4-D input shape.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil} from '../../../util';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {getBiasForMatmul} from './matmul';\n\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul (packed)',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\n                        [TextureType.packed, TextureType.packed],\n  cacheHint\n});\n\nconst createPackedMatmulProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n      const aShape = inputs[0].dims;\n      const bShape = inputs[1].dims;\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n\n      if (!outputShape) {\n        throw new Error('Can\\'t use matmul on the given tensors');\n      }\n      const sharedDim = aShape[aShape.length - 1];\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\n      const aRank = aShape.length;\n      const bRank = bShape.length;\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const coordsDataType = getCoordsDataType(outputShape.length);\n      const outRank = outputShape.length;\n      const allGlChannels = getGlChannels();\n      const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n      const getBiasForMatmulSnippet =\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\n\n      const getBcastedSamplerForMatmulSnippet =\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\n\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\n      `;\n      const shaderSource = `\n            ${getBcastedSamplerForMatmulSnippet}\n            ${getBiasForMatmulSnippet}\n            ${activationFunction}\n            void main() {\n              ${getOutputCoordsSnippet}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\n                vec4 a = ${getSamplerAInLoopSnippet};\n                vec4 b = ${getSamplerBInLoopSnippet};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${processBias}\n              ${applyActivation}\n              ${glsl.output} = value;\n            }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedMatmulProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\n      };\n    };\n\nfunction getBcastSamplerForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\n  let unpackedACoordsSnippet = [];\n  let unpackedBCoordsSnippet = [];\n\n  const inAShape = inputs[0].dims;\n  const inBShape = inputs[1].dims;\n\n  const inARank = inAShape.length;\n  const inBRank = inBShape.length;\n\n  const outRank = outShape.length;\n  const rankADiff = outRank - inARank;\n  const rankBDiff = outRank - inBRank;\n\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\n  unpackedACoordsSnippet.join(', ');\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\n  unpackedBCoordsSnippet.join(', ');\n\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\n\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\n\n  const getBcastSamplerMatmulSource = `\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsASnippet}\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsBSnippet}\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\n  return outputValue;\n}`;\n\n  return getBcastSamplerMatmulSource;\n}\n\nfunction getA(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += `rc.${allGlChannels[rank - 2]}, ` +\n      'i*2';\n  return res;\n}\n\nfunction getB(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += 'i*2, ' +\n      `rc.${allGlChannels[rank - 1]}`;\n  return res;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\nimport {getActicationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      if (inferenceHandler.session.pack) {\n        return [inferenceHandler.run(\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\n      } else {\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\n      }\n    };\n\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nfunction createMatmulProgramInfo(\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\n  const aShape = inputs[0].dims;\n  const bShape = inputs[1].dims;\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n  if (!outputShape) {\n    throw new Error('Can\\'t use matmul on the given tensors');\n  }\n  const coordsDataType = getCoordsDataType(outputShape.length);\n  const allGlChannels = getGlChannels();\n  const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n  const hasBias = inputs.length > 2;\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n  const getBiasForMatmulSnippet =\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\n\n  const rank = outputShape.length;\n  const arank = aShape.length;\n  const brank = bShape.length;\n  const sharedDim = aShape[aShape.length - 1];\n  const shaderSource = `\n    ${activationFunction}\n    ${getBiasForMatmulSnippet}\n    float process(int indices[${rank}]) {\n        int a[${arank}];\n        int b[${brank}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${sharedDim}; ++k) {\n            a[${arank - 1}] = k;\n            b[${brank - 2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${processBias}\n        ${applyActivation}\n        return value;\n    }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createMatmulProgramInfoLoader(\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\n    throw new Error('inputs should be float type');\n  }\n\n  if (inputs[0].type !== inputs[1].type) {\n    throw new Error('inputs types should match');\n  }\n};\n\nexport function getBiasForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\n    isPacked: boolean): string {\n  let unpackedCoordsSnippet = '';\n  const inRank = inShape.length;\n  const outRank = outShape.length;\n  const rankDiff = outRank - inRank;\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\n  }\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\n  const inSize = ShapeUtil.size(inShape);\n  const isInputScalar = inSize === 1;\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\n  if (isInputScalar) {\n    output = 'vec4(outputValue.x)';\n  }\n  const getBiasForMatmulSource = isPacked ? `\nvec4 getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\n  return ${output};\n}` :\n                                            `\nfloat getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  return getBias(coords.x);\n}`;\n\n  return getBiasForMatmulSource;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels} from './packing-utils';\n\nconst packProgramMetadata = {\n  name: 'pack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpackedReversed]\n};\n\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const inputShape = input.dims;\n\n  const inputRank = inputShape.length;\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\n  const outputRank = input.dims.length;\n\n  const coordsDataType = getCoordsDataType(outputRank);\n  const channels = getChannels('rc', outputRank);\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\n\n  let reversedInputWH;\n  if (inputRank === 0) {\n    reversedInputWH = [1, 1];\n  } else if (inputRank === 1) {\n    reversedInputWH = [inputShape[0], 1];\n  } else {\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\n  }\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\n  const output = getOutput(inputShape, channels);\n\n  const shaderSource = `\n        void main() {\n          ${coordsDataType} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            ${glsl.output} = vec4(0);\n          } else {\n            ${setup}\n\n            ${glsl.output} = vec4(${output});\n          }\n        }\n      `;\n  return {\n    ...packProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\n    shaderSource\n  };\n};\n\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\n\n/**\n * check output coordinate location and return false if it is outside input's width/height boundary\n */\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\n  if (rank === 0) {\n    return 'false';\n  }\n  if (rank === 1) {\n    return `rc > ${shape[0]}`;\n  }\n\n  let cond = '';\n  for (let i = rank - 2; i < rank; i++) {\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\n/**\n * code snippet to sample input texture with output coordiantes\n */\nfunction getOutput(shape: readonly number[], dims: string[]): string {\n  const rank = shape.length;\n\n  if (rank === 0) {\n    return 'getA(), 0, 0, 0';\n  }\n\n  if (rank === 1) {\n    return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n  }\n\n  const coord00 = 'r, c';\n  const coord01 = 'r, cp1';\n  const coord10 = 'rp1, c';\n  const coord11 = 'rp1, cp1';\n  let D = '';\n  if (rank > 2) {\n    for (let i = 0; i < rank - 2; ++i) {\n      D = D + `${dims[i]},`;\n    }\n  }\n  return `getA(${D}${coord00}),\n          rEdge ? 0. : getA(${D}${coord10}),\n          cEdge ? 0. : getA(${D}${coord01}),\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\n}\n\n/**\n * code snippet to setup 4 coordinates and edge conditions\n */\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\n  if (rank === 0 || rank === 1) {\n    return '';\n  }\n  // rank >= 2 for width+height pack.\n  else {\n    const setup = `\n    int r = ${dims[rank - 2]};\n    int c = ${dims[rank - 1]};\n    int rp1 = ${dims[rank - 2]} + 1;\n    int cp1 = ${dims[rank - 1]} + 1;\n    bool rEdge = rp1 >= ${cols};\n    bool cEdge = cp1 >= ${rows};\n    `;\n    return setup;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlChannels} from '../utils';\n\nexport function getVecChannels(name: string, rank: number): string[] {\n  return getGlChannels(rank).map(d => `${name}.${d}`);\n}\n\nexport function getChannels(name: string, rank: number): string[] {\n  if (rank === 1) {\n    return [name];\n  }\n  return getVecChannels(name, rank);\n}\n\nexport function unpackFromChannel(): string {\n  return `\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl, Glsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface PadAttributes extends AttributeWithCacheKey {\n  readonly mode: string;\n  readonly pads: number[];\n  readonly value: number;\n}\n\nconst padProgramMetadata = {\n  name: 'Pad',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const pad: OperatorImplementation<PadAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...padProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPadProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parsePadAttributes: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\n  const mode = node.attributes.getString('mode', 'constant');\n  const value = node.attributes.getFloat('value', 0.0);\n  const pads = node.attributes.getInts('pads');\n  return createAttributeWithCacheKey({mode, value, pads});\n};\n\nconst createPadProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): ProgramInfo => {\n      const outputShape = ShapeUtil.padShape(inputs[0].dims.slice(), attributes.pads);\n      const rank = outputShape.length;\n      const padFunction = getPadFunction(inferenceHandler, inputs[0], attributes);\n      const shaderSource = `\n      ${padFunction}\n      float process(int[${rank}] indices) {\n          return padA(indices);\n      }`;\n      return {\n        name: 'Pad',\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pad requires 1 input');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n  const strides = ShapeUtil.computeStrides(input.dims);\n\n  switch (attributes.mode) {\n    case 'constant':\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\n    case 'reflect':\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\n    case 'edge':\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\n    default:\n      throw new Error('Invalid mode');\n  }\n};\n\nconst getPadConstant =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\n     value: number): string => {\n      const rank = shape.length;\n      let block = '';\n      for (let i = rank - 1; i >= 0; --i) {\n        block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  return constant;\n        if (k >= ${shape[i]}) return constant;\n        offset += k * ${strides[i]};\n        `;\n      }\n      return `\n      float padA(int m[${rank}]) {\n        const float constant = float(${value});\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n    };\n\nconst getPadReflect =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2 * (shape[i] - 1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${strides[i]};\n        `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n\nconst getPadEdge =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  k = 0;\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\n        offset += k * ${strides[i]};\n      `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly countIncludePad: boolean;\n  readonly kernelShape: number[];\n  readonly strides: number[];\n  readonly pads: number[];\n}\n\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n\n      // TODO: support attribute 'ceil_mode'\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n      }\n\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\n    };\n\nconst createAveragePoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\n        ProgramInfo => {\n          const inputShape = inputs[0].dims.slice();\n          PoolConvUtil.adjustPoolAttributes(\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\n              attributes.autoPad);\n          const kernelSize = ShapeUtil.size(attributes.kernelShape);\n          const op1 = 'value += _X(x);';\n          let op2 = '';\n          if (attributes.countIncludePad) {\n            op2 += `value /= float(${kernelSize});`;\n          } else {\n            op2 += `value /= float(${kernelSize} - pad);`;\n          }\n          const poolingCode = generatePoolingCode(inputs[0].dims, attributes, op1, op2, '0.0');\n          const shaderSource = `\n        ${poolingCode}\n      `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata = {\n        name: 'GlobalAveragePool',\n        inputNames: ['X'],\n        inputTypes: [TextureType.unpacked],\n        cacheHint: `${attributes.countIncludePad}`\n      };\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      return createAttributeWithCacheKey(\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\n    };\n\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\n  readonly storageOrder: number;\n}\n\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\n    (node: Graph.Node): MaxPoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n      const storageOrder = node.attributes.getInt('storage_order', 0);\n\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\n      if (storageOrder !== 0) {\n        throw new Error('column major storage order is not yet supported for MaxPool');\n      }\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n      }\n\n      return createAttributeWithCacheKey(\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder});\n    };\n\nconst createMaxPoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\n        ProgramInfo => {\n          const inputShape = inputs[0].dims.slice();\n          PoolConvUtil.adjustPoolAttributes(\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\n              attributes.autoPad);\n          const op1 = `\n      value = max(_X(x), value);\n    `;\n          const op2 = '';\n          const poolingCode = generatePoolingCode(inputShape, attributes, op1, op2, '-1e5');\n          const shaderSource = `\n      ${poolingCode}\n    `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst globalMaxPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  cacheKey: ''\n};\n\nconst globalMaxPoolMetadata = {\n  name: 'GlobalMaxPool',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  const output = inferenceHandler.run(\n      {\n        ...globalMaxPoolMetadata,\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\n      },\n      inputs);\n  return [output];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst generatePoolingCode =\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\n        string => {\n          const rank = inputDims.length;\n          if (attributes.kernelShape.length <= 2) {\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n            const sw = attributes.strides[attributes.strides.length - 1];\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\n            const dimW = inputDims[rank - 1];\n            let codeW = '';\n            let codeH = '';\n            let codeHEnd = '';\n            if (pwStart + pwEnd !== 0) {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\n              pad++;\n              continue;\n            }\n            ${op1}\n          }`;\n            } else {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            ${op1}\n          }`;\n            }\n\n            if (attributes.kernelShape.length === 2) {\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n              const sh = attributes.strides[attributes.strides.length - 2];\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n              const phEnd = attributes.pads[attributes.pads.length - 2];\n              const dimH = inputDims[rank - 2];\n              if (phStart + phEnd !== 0) {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\n                pad+= ${kw};\n                continue;\n              }\n          `;\n              } else {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n            `;\n              }\n              codeHEnd = `\n          }\n        `;\n            }\n\n            const poolingCode = `\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n\n          float value = ${start};\n          int pad = 0;\n          ${codeH}\n          ${codeW}\n          ${codeHEnd}\n          ${op2}\n          return value;\n        }\n      `;\n            return poolingCode;\n          } else {\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n            const stridesRank = kernelStrides.length;\n            const padsRank = attributes.pads.length;\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\n            const copyInputDims = copyArray(inputDims, 'inputDims');\n            const copyPads = copyArray(attributes.pads, 'pads');\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\n            const copyStrides = copyArray(attributes.strides, 'strides');\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n            let padCode = '';\n            if (hasPads) {\n              padCode = `\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${op1}\n          }`;\n            } else {\n              padCode = `\n          }\n          ${op1}\n        `;\n            }\n            const poolingCode = `\n        ${offsetToIndicesFunction}\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n          int offset[${stridesRank}];\n          int pads[${padsRank}];\n          int inputDims[${rank}];\n          int kernelStrides[${stridesRank}];\n          int strides[${stridesRank}];\n          ${copyPads}\n          ${copyInputDims}\n          ${copyStrides}\n          ${copyKernelStrides}\n\n          float value = ${start};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${kernelSize}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\n              ${padCode}\n          }\n          ${op2}\n\n          return value;\n        }\n      `;\n            return poolingCode;\n          }\n        };\n\nconst copyArray = (array: readonly number[], arrayName: string): string => {\n  let block = '';\n  for (let i = 0; i < array.length; i++) {\n    block += `\n      ${arrayName}[${i}] = ${array[i]};\n    `;\n  }\n  return block;\n};\n\nconst offsetToIndices = (rank: number): string => `\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\n    if (${rank} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${rank} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${rank} - 1] = offset;\n  }`;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface ReduceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly keepDims: boolean;\n}\n\n// return [init ops, reduce ops, final ops]\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\n\nconst reduce =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\n     reduceOp: ReduceOp): Tensor[] => {\n      validateInputs(inputs);\n\n      const reduceProgramMetadata = {\n        name,\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n      };\n\n      const output = inferenceHandler.run(\n          {\n            ...reduceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () =>\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\n  const axes = node.attributes.getInts('axes', []);\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\n  return createAttributeWithCacheKey({axes, keepDims});\n};\n\nconst createReduceProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const outputShape: number[] = [];\n      const iRank = inputs[0].dims.length || 1;\n\n      const idxCopy = [];  // copy output indexes to input indexes\n\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\n      const ops = reduceOp(inputs, axes);\n      let reduceOps = ops[1];\n\n      for (let k = 0; k < inputs[0].dims.length; k++) {\n        // if this axis is reduced\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\n          if (attributes.keepDims) {\n            outputShape.push(1);\n          }  // else { remove the axis from outputShape; }\n\n          // loop over the d-th axis\n          reduceOps = `\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\n            inputIdx[${k}] = j${k};\n            ${reduceOps}\n          }`;\n        } else {\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\n\n          outputShape.push(inputs[0].dims[k]);\n        }\n      }\n\n      const oRank = outputShape.length || 1;\n\n      const shaderSource = `\n      float process(int outputIdx[${oRank}]) {\n        float value;                 // final result\n        int inputIdx[${iRank}];      // addressing input data\n        ${idxCopy.join('\\n')}\n        ${ops[0]}       // init ops for reduce max/min\n        ${reduceOps}\n        ${ops[2]}       // final computation for reduce mean\n        return value;\n      }`;\n\n      return {\n        ...reduceProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Reduce op requires 1 input.');\n  }\n\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\n    };\n\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        let size = 1.0;\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            size *= inputs[0].dims[k];\n          }\n        }\n\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\n    };\n\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\n    };\n\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\n    };\n\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\n    };\n\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\n    };\n\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\n    };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\n\nconst createPackedReshape3DProgramInfo =\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\n        ProgramInfo => {\n          const inputShape3D = input3D.dims as [number, number, number];\n          const squeezedOutputShape = outputShape3D as [number, number, number];\n\n          let mainLoop = '';\n          for (let i = 0; i < 4; i++) {\n            let outputCoords = '';\n            switch (i) {\n              case 0:\n                outputCoords = 'outputCoords = rc;';\n                break;\n              case 1:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\n                break;\n              case 2:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\n                break;\n              case 3:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\n                break;\n              default:\n                throw new Error();\n            }\n\n            mainLoop += `\n        ${outputCoords}\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${i > 0 ? '}' : ''}\n      `;\n          }\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n\n          const shaderSource = `\n      ${getReshapedInputCoords(inputShape3D)}\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\n      ${unpackFromChannel()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${squeezedOutputShape[2]};\n        int cols = ${squeezedOutputShape[1]};\n\n        ${mainLoop}\n        ${glsl.output} = result;\n      }\n    `;\n\n          return {\n            ...metadata,\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\n            shaderSource,\n            hasMain: true\n          };\n        };\n\nexport const createPackedReshape3DProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\n    };\n\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\n  if (shape.length === 0) {\n    return [1, 1, 1];\n  }\n  // TODO: squeeze other shapes to 2D case\n  let batch = 1;\n  for (let i = 0; i < shape.length - 2; ++i) {\n    batch *= shape[i];\n  }\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\n\n// For packed reshape, we need to re-arrange texel data for output shape.\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\n// for the reshaped new tensor, we just need to re-arrange the last h and\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\n// first convert it to 3D by collapsing other dimension to batch dim, then\n// process with the last two dimensions.\n// Note: we only need the shape tensor to calculate output shape, so the\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\n// the same between input shape and output shape, the packed reshape can be\n// treated as no-op.\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\n  let isCheapReshape = false;\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\n    isCheapReshape = true;\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\n  } else {  // 2D +\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\n  }\n\n  return isCheapReshape;\n}\n\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n  const coords = ['b', 'r', 'c'];\n  const index = 'index';\n  const coordsFromIndexSnippet = strides\n                                     .map((stride, i) => {\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n                                       const line2 = i === strides.length - 1 ?\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n                                           `index -= ${coords[i]} * ${stride}`;\n                                       return `${line1}; ${line2};`;\n                                     })\n                                     .join('');\n\n  return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(b, r, c);\n    }\n  `;\n}\n\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n\n  return `\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\n  }\n`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\n  if (handler.session.pack) {\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\n  } else {\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {unpackFromChannel} from './packing-utils';\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\n\nconst resizeProgramMetadata = {\n  name: 'Resize',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const resize: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...resizeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\n\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\n\nconst createPackedResizeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\n\n      const isSame =\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\n      if (isSame) {\n        return {\n          ...resizeProgramMetadata,\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n          hasMain: true,\n          shaderSource: `void main() {\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\n                    ${glsl.output} = v;\n                }`\n        };\n      }\n\n      const dim = outputShape.length;\n      if (dim < 2) {\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\n      }\n\n      const outputHeight = outputShape[dim - 2];\n      const outputWidth = outputShape[dim - 1];\n\n      const inputShape = inputs[0].dims;\n      if (dim !== inputShape.length) {\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\n      }\n      const inputHeight = inputShape[dim - 2];\n      const inputWidth = inputShape[dim - 1];\n\n      const scalesHeight = scales[dim - 2];\n      const scalesWidth = scales[dim - 1];\n\n      let getSourceFracIndex = '';\n\n      if (attributes.mode !== 'linear') {\n        // TODO: support other modes\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\n      }\n      switch (attributes.coordinateTransformMode) {\n        case 'asymmetric':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                `;\n          break;\n        case 'half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                `;\n          break;\n        case 'align_corners':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\n                            ${outputHeight}.0 - 1.0);\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\n                            ${inputHeight}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;\n          break;\n        default:\n          // TODO:supporting other coordinateTransformModes\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\n                                '${attributes.coordinateTransformMode}'`);\n      }\n\n      const coordsDataType = getCoordsDataType(dim);\n      const unpackChannel = unpackFromChannel();\n      const shaderSource = `\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\n            const vec4 scaleWHWH = vec4(${scalesHeight}.0, ${scalesWidth}.0, ${scalesHeight}.0, ${scalesWidth}.0);\n            ${unpackChannel}\n            ${getSourceFracIndex}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${coordsDataType} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${outputHeight - 1};\n                bool hasNextCol = rc.z < ${outputWidth - 1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${glsl.output} = vec4(newValue);\n            }\n        `;\n      return {\n        ...resizeProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\n\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\n  const x = inputs[0];\n  const xDims = x.dims;\n\n  let scales = attributes.scales;\n  let outputSizes: number[]|undefined;\n  if (scales.length === 0) {\n    const scalesTensor = inputs[attributes.scalesInputIdx];\n    if (scalesTensor && scalesTensor.size !== 0) {\n      if (inputs[attributes.sizesInputIdx]) {\n        throw new Error('Only one of scales or sizes must be provided as input.');\n      }\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\n    } else {\n      const sizesTensor = inputs[attributes.sizesInputIdx];\n      if (!sizesTensor || sizesTensor.size === 0) {\n        throw new Error('Either scales or sizes MUST be provided as input.');\n      }\n\n      outputSizes = Array.from(sizesTensor.integerData);\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\n    }\n  } else {\n    if (inputs[attributes.sizesInputIdx]) {\n      throw new Error('Only one of scales or sizes must be provided as input.');\n    }\n  }\n\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\n\n  return [scales, yDims];\n};\n\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\n  const scales = Array.from(scale.floatData);\n  scalesValidation(scales, mode, isResize);\n  return scales;\n};\n\nconst parseScalesDataFromOutputSize =\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\n      const length = xDims.length;\n      const scales = new Array<number>(length);\n\n      for (let i = 0, end = length; i < end; i++) {\n        if (xDims[i] === 0) {\n          if (yDims[i] !== 0) {\n            throw new Error('Input dim is zero but required output dim is non-zero.');\n          }\n          scales[i] = 1;\n        } else {\n          scales[i] = yDims[i] / xDims[i];\n        }\n      }\n      scalesValidation(scales, mode, isResize);\n      return scales;\n    };\n\n// roi data is not used yet. but leave here for future usage.\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\n//     let roi: number[] = [];\n//     if (attributes.needRoiInput) {\n//         if (attributes.roiInputIdx <= 0) {\n//             throw new Error('Invalid roi input index.');\n//         }\n//         const roiTensor = inputs[attributes.roiInputIdx];\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\n//     } else {\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\n//     }\n//     return roi;\n// };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Shape requires 1 input.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SliceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly ends: number[];\n  readonly starts: number[];\n}\n\nconst sliceProgramMetadata = {\n  name: 'Slice',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const slice: OperatorImplementation<SliceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...sliceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\n  const starts = node.attributes.getInts('starts');\n  const ends = node.attributes.getInts('ends');\n  const axes = node.attributes.getInts('axes', []);\n  return createAttributeWithCacheKey({starts, ends, axes});\n};\n\nconst createSliceProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\n      const starts = attributes.starts.map((start, i) => {\n        if (start > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\n      });\n      const ends = attributes.ends.map((end, i) => {\n        if (end > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\n      });\n\n      const outputShape = input.dims.slice();\n\n      const sliceOps: string[] = [];\n      for (let i = 0; i < normalizedAxes.length; i++) {\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\n        if (starts[i] > 0) {\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        ${sliceOps.join('\\n      ')}\n        return _A(outputIdx);\n      }`;\n      return {\n        ...sliceProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Slice requires 1 input.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV10(inputs);\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\n  const output = inferenceHandler.run(\n      {\n        ...sliceProgramMetadata,\n        cacheHint: attributes.cacheKey,\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n      },\n      [inputs[0]]);\n  return [output];\n};\n\nconst generateSliceAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\n        throw new Error('dynamic slice attributes are not allowed');\n      }\n\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\n        throw new Error('currently non-1 steps is not supported for Slice');\n      }\n\n      const starts = Array.from(inputs[1].integerData);\n      const ends = Array.from(inputs[2].integerData);\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\n      const cacheKey = `${axes};${starts};${ends}`;\n      return {starts, ends, axes, cacheKey};\n    };\n\nconst validateInputsV10 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\n    throw new Error('Invalid input number.');\n  }\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nconst softmaxComputeMaxProgramMetadata = {\n  name: 'SoftmaxComputeMax',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst softmaxComputeScaleProgramMetadata = {\n  name: 'SoftmaxComputeScale',\n  inputNames: ['A', 'Max'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst softmaxProgramMetadata = {\n  name: 'SoftMax',\n  inputNames: ['A', 'Max', 'Norm'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\n};\n\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const N = ShapeUtil.sizeToDimension(inputShape, axis);\n      const D = ShapeUtil.sizeFromDimension(inputShape, axis);\n\n      const computeMaxProgramInfo = createComputeMaxProgramInfo(inferenceHandler, inputs[0], N, D, [N]);\n      const max = inferenceHandler.run(\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\n          inputs);\n\n      const computeScaleProgramInfo =\n          createComputScaleProgramInfo(inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, [N]);\n      const scale = inferenceHandler.run(\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\n          [inputs[0], max]);\n\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\n          inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, computeScaleProgramInfo.output.dims);\n      const output = inferenceHandler.run(\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\n          [inputs[0], max, scale]);\n      return [output];\n    };\n\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\n\n/**\n * Create a texture that contains the maximum value of each of the 'N' rows\n */\nconst createComputeMaxProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number, outputShape: number[]):\n        ProgramInfo => {\n          const [textureWidth, textureHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n          const rank = outputShape.length;\n\n          if (N < 1 || D < 1) {\n            throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n          }\n\n          if (outputShape.length !== 1) {\n            throw new Error('Dimensionality of the output should be 1');\n          }\n\n          if (outputShape[0] !== N) {\n            throw new Error('Shape of the output should be equal to logical row count');\n          }\n\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${D};\n\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\n        ${textureHeight} )));\n        for(int i=1; i<${D}; ++i)\n        {\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;\n          return {\n            ...softmaxComputeMaxProgramMetadata,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\n/**\n * Create a texture that contains the normalization factor for each of the 'N' rows\n */\nconst createComputScaleProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (N < 1 || D < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== N) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== N) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${D};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${D}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight}))) - max);\n        }\n\n        return norm_factor;\n      }`;\n      return {\n        ...softmaxComputeScaleProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createSoftMaxProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = input.dims.length;\n\n      if (N < 1 || D < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== N || normalizationPerLogicalRow[0] !== N) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${D};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;\n      return {\n        ...softmaxProgramMetadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Softmax requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil, SplitUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SplitAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n  readonly split: number[];\n  readonly numOutputs: number;\n}\n\nconst splitProgramMetadata = {\n  name: 'Split',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const split: OperatorImplementation<SplitAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\n      const output: Tensor[] = [];\n      for (let i = 0; i < count; ++i) {\n        output.push(inferenceHandler.run(\n            {\n              ...splitProgramMetadata,\n              cacheHint: `${attributes.cacheKey};${i}`,\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\n            },\n            inputs));\n      }\n\n      return output;\n    };\n\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\n  const axis = node.attributes.getInt('axis', 0);\n  const split = node.attributes.getInts('split', []);\n  const numOutputs = node.outputs.length;\n  return createAttributeWithCacheKey({axis, split, numOutputs});\n};\n\nconst getProgramCount =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\n      return offsets.length;\n    };\n\nconst createSplitProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\n        ProgramInfo => {\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\n          const offset = offsets[index];\n          const outputShape = shapes[index];\n          const rank = outputShape.length;\n          const shaderSource = `\n      float process(int indices[${rank}]) {\n        indices[${axis}] += ${offset};\n        return _A(indices);\n      }\n    `;\n          return {\n            ...splitProgramMetadata,\n            cacheHint: `${attributes.cacheKey}:${index}`,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Split requires one input.');\n  }\n\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const squeeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Squeeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const sumProgramMetadata = {\n    name: 'Sum',\n    inputNames: inputs.map((v, i) => `X${i}`),\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\n  };\n\n  const output = inferenceHandler.run(\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\n  return [output];\n};\n\nconst createSumProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const outputShape = inputs[0].dims.slice();\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\n      const shaderSource = `\n      void main() {\n        vec4 result = ${sumLine};\n        ${glsl.output} = result;\n      }\n    `;\n      return {\n        ...sumProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length === 0) {\n    throw new Error('Sum requires inputs.');\n  }\n\n  const length = inputs[0].dims.length;\n  for (let i = 1; i < inputs.length; i++) {\n    if (length !== inputs[i].dims.length) {\n      throw new Error('Input shapes are mismatched.');\n    }\n\n    for (let j = 0; j < length; j++) {\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\n        throw new Error('Input shapes are not matched.');\n      }\n    }\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n  for (let i = 1; i < inputs.length; i++) {\n    if (inputs[0].type !== inputs[i].type) {\n      throw new Error('Input types are not matched.');\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {NUMBER_TYPES} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const tileProgramMetadata = {\n    name: 'Tile',\n    inputNames: ['A'],\n    inputTypes: [TextureType.unpacked],\n  };\n\n  const output = inferenceHandler.run(\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\n      inputs);\n  return [output];\n};\n\nconst createTileProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const outputShape = new Array(inputShape.length);\n\n      const tileOps: string[] = [];\n      for (let i = 0; i < inputShape.length; i++) {\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        int inputIdx[${rank}];\n        ${tileOps.join('\\n')}\n        return _A(inputIdx);\n      }\n    `;\n      return {\n        ...tileProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Tile requires 2 input.');\n  }\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('The second input shape must 1 dimension.');\n  }\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\n    throw new Error('Invalid input shape.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invalid repeat type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nconst transposeProgramMetadata = {\n  name: 'Transpose',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const transpose: OperatorImplementation<TransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\n\nconst createTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\n      const inputShape = input.dims;\n      perm = getAdjustedPerm(inputShape, perm);\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\n      const rank = inputShape.length;\n      // A dims=[${inputs[0].dims.toString()}]\n      // out Dims=[${unpackedOutputShape.toString()}]\n      // based on perm=[${perm.toString()}]\n      const shaderSource = `\n      ${getPermFunctionBody('perm', perm, rank)}\n      float process(int indices[${rank}]) {\n        int a[${rank}];\n        perm(a, indices);\n        return _A(a);\n      }`;\n      return {\n        ...transposeProgramMetadata,\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\n  if (perm && perm.length !== inputShape.length) {\n    perm = [...(inputShape.keys())].reverse();\n  }\n  return perm;\n};\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\n  perm = getAdjustedPerm(inputShape, perm);\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\n};\n\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('input should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {TextureData, TextureType} from '../types';\n\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\n  const outputShape = input.shape;\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  /**\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\n   */\n  const shaderSource = `\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${glsl.texture2D}(X,TexCoords).r;\n      ${glsl.output} = encodeAsUint8(value);\n    }`;\n  const programInfo = {\n    name: 'Uint8Encode',\n    inputTypes: [TextureType.unpacked],\n    inputNames: ['X'],\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\n    shaderSource,\n    hasMain: true\n  };\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {Tensor} from '../../../tensor';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport function glslAbs(): GlslValueFunction {\n  return glslBuiltinUnary('abs');\n}\nexport function glslAcos(): GlslValueFunction {\n  return glslBuiltinUnary('acos');\n}\nexport function glslAsin(): GlslValueFunction {\n  return glslBuiltinUnary('asin');\n}\nexport function glslAtan(): GlslValueFunction {\n  return glslBuiltinUnary('atan');\n}\nexport function glslCeil(): GlslValueFunction {\n  return glslBuiltinUnary('ceil');\n}\nexport function glslCos(): GlslValueFunction {\n  return glslBuiltinUnary('cos');\n}\nexport function glslElu(alpha: number): GlslValueFunction {\n  const name = 'elu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslExp(): GlslValueFunction {\n  return glslBuiltinUnary('exp');\n}\nexport function glslFloor(): GlslValueFunction {\n  return glslBuiltinUnary('floor');\n}\nexport function glslClip(min: number, max: number): GlslValueFunction {\n  const name = 'clip';\n  const body = `\n  const float min = float(${min});\n  const float max = float(${max});\n\n  float ${name}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${name}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslIdentity(): GlslValueFunction {\n  const name = 'indentity';\n  const body = `\n  float ${name}_(float a) {\n    return a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\n  const name = 'leakyRelu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLog(): GlslValueFunction {\n  return glslBuiltinUnary('log');\n}\nexport function glslNeg(): GlslValueFunction {\n  const name = 'neg';\n  const body = `\n  float ${name}_(float a) {\n    return -a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return -v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslNot(): GlslValueFunction {\n  const name = 'not';\n  const body = `\n  float ${name}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${name}_(bool a) {\n    return !a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${name}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSin(): GlslValueFunction {\n  return glslBuiltinUnary('sin');\n}\nexport function glslRelu(): GlslValueFunction {\n  const name = 'relu';\n  const body = `\n  float ${name}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${name}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSigmoid(): GlslValueFunction {\n  const name = 'sigmoid';\n  const body = `\n  float ${name}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${name}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSqrt(): GlslValueFunction {\n  return glslBuiltinUnary('sqrt');\n}\nexport function glslTan(): GlslValueFunction {\n  return glslBuiltinUnary('tan');\n}\nexport function glslTanh(): GlslValueFunction {\n  const name = 'tanh';\n  const body = `\n  float ${name}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${name}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\n  const body = `\n  float ${name}_(float a) {\n    return ${name}(a);\n  }\n  vec4 ${name}_(vec4 v) {\n    return ${name}(v);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\n/////\n/////\n/////\n\nconst createElementwiseProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\n        ProgramInfo => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n          return {\n            ...metadata,\n            output: {dims: input.dims, type: input.type, textureType},\n            shaderSource: `\n     ${glslFunc.body}\n     void main() {\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\n       v = ${glslFunc.name}_(v);\n       ${glsl.output} = v;\n     }\n     `,\n            hasMain: true\n          };\n        };\n\nconst createElementwiseProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\n        ProgramInfoLoader => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\n        };\n\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\n\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\n\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\n\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clip =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\n        inputs)];\n\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey({\n  min: node.attributes.getFloat('min', -3.4028234663852886e+38),\n  max: node.attributes.getFloat('max', 3.4028234663852886e+38)\n});\n\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\n\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\n\nexport interface EluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const elu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\n\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\n\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\n\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\n\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const leakyRelu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\n\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\n\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\n\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\n\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\n\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\n\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\n\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\n\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\n\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst unpackProgramMetadata = {\n  name: 'unpack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const rank = input.dims.length;\n\n  const channels = getChannels('rc', rank);\n  const innerDims = channels.slice(-2);\n  const coordsDataType = getCoordsDataType(rank);\n  const unpackChannel = unpackFromChannel();\n  const isScalar = (input.dims.length === 0);\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const shaderSource = `\n    ${unpackChannel}\n    void main() {\n      ${coordsDataType} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${sourceCoords});\n\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\n     }\n   `;\n\n  return {\n    ...unpackProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n    shaderSource\n  };\n};\n\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\n\nfunction getSourceCoords(rank: number, dims: string[]): string {\n  if (rank === 1) {\n    return 'rc';\n  }\n\n  let coords = '';\n  for (let i = 0; i < rank; i++) {\n    coords += dims[i];\n    if (i < rank - 1) {\n      coords += ',';\n    }\n  }\n  return coords;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const unsqueeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Unsqueeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\n  readonly opset: number;\n  readonly isResize: boolean;\n  readonly mode: string;\n  readonly scales: number[];\n  readonly extrapolationValue: number;\n  readonly coordinateTransformMode: string;\n  readonly useExtrapolation: boolean;\n  readonly needRoiInput: boolean;\n  readonly nearestMode: string;\n  readonly cubicCoefficientA: number;\n  readonly excludeOutside: boolean;\n  readonly useNearest2xOptimization: boolean;\n  readonly roiInputIdx: number;\n  readonly scalesInputIdx: number;\n  readonly sizesInputIdx: number;\n}\n\nconst upsampleProgramMetadata = {\n  name: 'Upsample',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...upsampleProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\n\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\n\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\n  const isResize = (opset >= 10);\n\n  // processing node attributes\n  const mode = node.attributes.getString('mode', 'nearest');\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\n    throw new Error(`unrecognized mode: ${mode}`);\n  }\n\n  let scales: number[] = [];\n  if (opset < 9) {\n    scales = node.attributes.getFloats('scales');\n    scalesValidation(scales, mode, isResize);\n  }\n\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\n\n  const coordinateTransformMode =\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\n  if ([\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\n      ].indexOf(coordinateTransformMode) === -1) {\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\n  }\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\n  const useExtrapolation = needRoiInput;\n\n  const nearestMode =\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\n  }\n\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\n  if (excludeOutside && mode !== 'cubic') {\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\n  }\n\n  const useNearest2xOptimization =\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\n\n  let roiInputIdx = 0;\n  let scalesInputIdx = 0;\n  let sizesInputIdx = 0;\n\n  if (opset > 10) {\n    roiInputIdx = 1;\n    scalesInputIdx = 2;\n    sizesInputIdx = 3;\n  } else if (opset === 9) {\n    scalesInputIdx = 1;\n  }\n\n  return createAttributeWithCacheKey({\n    opset,\n    isResize,\n    mode,\n    scales,\n    extrapolationValue,\n    coordinateTransformMode,\n    useExtrapolation,\n    needRoiInput,\n    nearestMode,\n    cubicCoefficientA,\n    excludeOutside,\n    useNearest2xOptimization,\n    roiInputIdx,\n    scalesInputIdx,\n    sizesInputIdx\n  });\n};\n\nconst createUpsampleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [inputWidth, inputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\n\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\n      const [outputWidth, outputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\n      const dim = outputShape.length;\n\n      const outputPitches = new Array<number>(dim);\n      const inputPitches = new Array<number>(dim);\n      let precalculatedPitches = `\n      int output_pitches[${dim}];\n      int input_pitches[${dim}];\n      `;\n      for (let d = dim - 1; d >= 0; d--) {\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\n\n        precalculatedPitches += `\n        output_pitches[${d}] = ${outputPitches[d]};\n        input_pitches[${d}] = ${inputPitches[d]};\n        `;\n      }\n      const getInputFloatFunction = `\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\n        return value;\n      }\n      `;\n\n      const shaderSource = attributes.mode === 'nearest' ?\n          // nearest\n          `\n    ${getInputFloatFunction}\n    float process(int indices[${dim}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int d, m;\n      for (int dim = 0; dim < ${dim}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }` :\n          dim === 4 ?\n          // bilinear 4D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }` :\n              // bilinear 2D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;\n      return {\n        ...upsampleProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        variables: [{\n          name: 'scales',\n          type: 'int',\n          arrayLength: attributes.scales.length,\n          data: attributes.scales.map(x => Math.ceil(x))\n        }]\n      };\n    };\n\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\n      (attribute.opset >= 11 && inputs.length !== 3 && inputs.length !== 4)) {\n    throw new Error('invalid inputs.');\n  }\n\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\n    throw new Error('Invalid input shape.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input tensor types.');\n  }\n};\n\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\n  if (!isResize) {\n    for (const scale of scales) {\n      if (scale < 1) {\n        throw new Error('Scale value should be greater than or equal to 1.');\n      }\n    }\n  } else {\n    for (const scale of scales) {\n      if (scale <= 0) {\n        throw new Error('Scale value should be greater than 0.');\n      }\n    }\n  }\n  if (mode === 'linear' || mode === 'cubic') {\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\nimport {Logger, Profiler} from '../../instrument';\n\nimport {GlslPreprocessor} from './glsl-preprocessor';\nimport {getVertexShaderSource} from './glsl-source';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  vertexShader: WebGLShader;\n  attributesBound: boolean;\n\n  constructor(\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\n      public textureLayoutStrategy: TextureLayoutStrategy) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\n      const gl = this.glContext.gl;\n      const program = buildArtifact.program;\n      gl.useProgram(program);\n      try {\n        this.bindOutput(output);\n        if (!this.attributesBound) {\n          this.bindAttributes(buildArtifact.attribLocations);\n        }\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\n      } catch (err) {\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\n        throw err;\n      }\n      this.profiler.event('backend', 'GlContext.draw()', () => {\n        this.glContext.draw();\n      });\n    }, this.glContext);\n  }\n  dispose(): void {\n    if (this.vertexShader) {\n      this.glContext.deleteShader(this.vertexShader);\n    }\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n      const fragScript = preprocessor.preprocess();\n      const program = this.compile(fragScript);\n      const artifact = {\n        programInfo,\n        program,\n        uniformLocations: this.getUniformLocations(\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\n        attribLocations: this.getAttribLocations(program)\n      };\n      return artifact;\n    });\n  }\n  protected compile(fragShaderScript: string): WebGLProgram {\n    if (!this.vertexShader) {\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\n    }\n    if (env.debug) {\n      Logger.verbose('ProrgramManager', `FragShader:\n${fragShaderScript}\n`);\n    }\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\n    this.glContext.deleteShader(fragShader);\n    return program;\n  }\n  bindOutput(td: TextureData): void {\n    const width = td.width;\n    const height = td.height;\n    Logger.verbose(\n        'ProrgramManager',\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\n    this.glContext.attachFramebuffer(td.texture, width, height);\n  }\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\n    const positionHandle = attribLocations.position;\n    const textureCoordHandle = attribLocations.textureCoord;\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\n    this.attributesBound = true;\n  }\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\n      void {\n    const gl = this.glContext.gl;\n    let texturePosition = 0;\n    for (const {name, type, location, arrayLength} of uniformLocations) {\n      const value = variables.find(v => v.name === name)?.data;\n      if (type !== 'sampler2D' && !value) {\n        throw new Error(`variable '${name}' does not have data defined in program info`);\n      }\n      switch (type) {\n        case 'sampler2D':\n          this.bindTexture(textures[texturePosition], location, texturePosition);\n          texturePosition++;\n          break;\n        case 'float':\n          if (arrayLength) {\n            gl.uniform1fv(location, value as number[]);\n          } else {\n            gl.uniform1f(location, value as number);\n          }\n          break;\n        case 'int':\n          if (arrayLength) {\n            gl.uniform1iv(location, value as number[]);\n          } else {\n            gl.uniform1i(location, value as number);\n          }\n          break;\n        default:\n          throw new Error(`Uniform not implemented: ${type}`);\n      }\n    }\n  }\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\n  }\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\n    return {\n      position: this.getAttribLocation(program, 'position'),\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\n    };\n  }\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\n      Artifact.UniformLocations {\n    const uniformLocations: Artifact.UniformLocations = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\n      }\n    }\n    return uniformLocations;\n  }\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\n    const gl = this.glContext.gl;\n    const reference = gl.getUniformLocation(program, name);\n    if (reference === null) {\n      throw new Error(`Uniform ${name} not found.`);\n    }\n    return reference;\n  }\n  getAttribLocation(program: WebGLProgram, name: string): number {\n    const gl = this.glContext.gl;\n    const attributeLocation: number = gl.getAttribLocation(program, name);\n    return attributeLocation;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from '../../backend';\nimport {Graph} from '../../graph';\nimport {Logger} from '../../instrument';\nimport {Operator} from '../../operators';\nimport {OpSet, resolveOperator} from '../../opset';\nimport {Session} from '../../session';\nimport {Tensor} from '../../tensor';\nimport {WebGLBackend} from '../backend-webgl';\n\nimport {WebGLInferenceHandler} from './inference-handler';\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\nimport {ProgramManager} from './program-manager';\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureManager} from './texture-manager';\nimport {TextureData} from './types';\n\nexport class WebGLSessionHandler implements SessionHandler {\n  programManager: ProgramManager;\n  textureManager: TextureManager;\n  layoutStrategy: TextureLayoutStrategy;\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\n  initializers: Set<Tensor.Id>;\n  pack?: boolean;\n\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\n    this.textureManager = new TextureManager(\n        backend.glContext, this.layoutStrategy, this.context.profiler,\n        {reuseTextures: backend.textureCacheMode === 'full'});\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n    this.pack = backend.pack;\n    this.pack2unpackMap = new Map();\n    this.unpack2packMap = new Map();\n  }\n\n  createInferenceHandler() {\n    return new WebGLInferenceHandler(this);\n  }\n  onGraphInitialized(graph: Graph): void {\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\n    this.initializers = new Set(initializers);\n  }\n  isInitializer(tensorId: Tensor.Id): boolean {\n    return this.initializers ? this.initializers.has(tensorId) : false;\n  }\n  addInitializer(tensorId: Tensor.Id): void {\n    this.initializers.add(tensorId);\n  }\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\n    if (isPacked) {\n      return this.packedTextureDataCache.get(tensorId);\n    } else {\n      return this.unpackedTextureDataCache.get(tensorId);\n    }\n  }\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\n    if (isPacked) {\n      this.packedTextureDataCache.set(tensorId, textureData);\n    } else {\n      this.unpackedTextureDataCache.set(tensorId, textureData);\n    }\n  }\n  dispose(): void {\n    this.programManager.dispose();\n    this.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.unpackedTextureDataCache = new Map();\n  }\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nexport declare namespace Encoder {\n  export interface DataTypeMap {\n    float: Float32Array;\n    byte: Uint8Array;\n    int: Uint32Array;\n  }\n  export type DataType = keyof DataTypeMap;\n  type DataArrayType = DataTypeMap[DataType];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  export const enum Usage {\n    Default = 0,\n    UploadOnly,\n    Download4BytesAsFloat32,\n  }\n}\n\n/**\n * Abstraction for mapping data types to texture texlets\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\n * Decoding means how a texlet's channels are mapped to a resulting Float32\n */\nexport interface DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\n  allocate(size: number): Encoder.DataArrayType;\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\n}\n/**\n * WebGL2 data encoder\n * Uses R32F as the format for texlet\n */\nexport class RedFloat32DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.R32F;\n      this.format = gl.RED;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA32F;\n      this.format = gl.RGBA;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\n    let result: Float32Array;\n    let source: Float32Array;\n    if (src.constructor !== Float32Array) {\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\n      source = new Float32Array(src);\n    }\n    if (textureSize * this.channelSize > src.length) {\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\n      source = src as Float32Array;\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\n      source.forEach((v, i) => result[i] = v);\n    } else {\n      source = src as Float32Array;\n      result = source;\n    }\n    return result;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n/**\n * Data encoder for WebGL 1 with support for floating point texture\n */\nexport class RGBAFloatDataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\n    if (channels !== 1 && channels !== 4) {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n    this.internalFormat = gl.RGBA;\n    this.format = gl.RGBA;\n    this.channelSize = channels;\n    this.textureType = textureType || gl.FLOAT;\n  }\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\n    let dest = src;\n    if (this.channelSize === 1) {\n      Logger.verbose('Encoder', 'Exploding into a larger array');\n      dest = this.allocate(textureSize) as Float32Array;\n      src.forEach((v, i) => dest[i * 4] = v);\n    }\n    return dest;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n\nexport class Uint8DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize = 4;\n  constructor(gl: WebGLRenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.ALPHA;\n      this.format = gl.ALPHA;  // not tested\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA;\n      this.format = gl.RGBA;\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Uint8Array(size * this.channelSize);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\n    if (buffer instanceof Uint8Array) {\n      return buffer.subarray(0, dataSize);\n    }\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\nimport {assert} from '../../util';\n/** Layout preferences */\nexport interface WidthHeightPrefs {\n  breakAxis?: number;\n  isPacked?: boolean;\n  reverseWH?: boolean;\n}\n/**\n * TextureLayoutStrategy is an abstraction for different plans\n * for mapping n-dimensional arrays to 2D textures (and back)\n */\nexport interface TextureLayoutStrategy {\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\n}\n\n/**\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\n */\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    // scalar tensor\n    if (shape.length === 0) {\n      return [1, 1];\n    }\n    const maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    const totalSize = shape.reduce((a, b) => a * b);\n\n    let width = Math.floor(Math.sqrt(totalSize));\n\n    for (; width < maxTextureSize && width < totalSize; width++) {\n      if (totalSize % width === 0) {\n        break;\n      }\n    }\n\n    if (width >= maxTextureSize || totalSize % width !== 0) {\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\n    }\n    return [width, totalSize / width];\n  }\n}\n\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const wh = this.computeTexture(shape, prefs);\n    if (prefs && prefs.isPacked) {\n      wh[0] /= 2;\n      wh[1] /= 2;\n    }\n    if (prefs && prefs.reverseWH) {\n      return [wh[1], wh[0]];\n    }\n    return wh;\n  }\n\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const isPacked = prefs && prefs.isPacked;\n    // scalar tensor\n    if (shape.length === 0) {\n      return isPacked ? [2, 2] : [1, 1];\n    }\n    let maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    let logShape = shape.slice(0);\n    if (isPacked) {\n      maxTextureSize = maxTextureSize * 2;\n\n      // This logic ensures we accurately count the number of packed texels needed\n      // to accommodate the tensor. We can only pack values in the same texel if\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n      // fact that the texels containing the third row are half empty.\n      logShape = logShape.map(\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\n\n      // Packed texture height is at least 2 (the channel height of a single\n      // texel).\n      if (logShape.length === 1) {\n        logShape = [2, logShape[0]];\n      }\n    }\n\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n      const squeezeResult = squeezeShape(logShape);\n      logShape = squeezeResult.newShape;\n    }\n\n    const size = sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTextureSize) {\n      return [1, size];\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\n      return logShape as [number, number];\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\n      return [logShape[0] * logShape[1], logShape[2]];\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2]];\n    } else if (\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\n        logShape[3] <= maxTextureSize) {\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    } else if (\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    } else {\n      if (isPacked) {\n        // For packed textures size equals the number of channels required to\n        // accommodate the texture data. However in order to squarify such that\n        // inner dimensions stay even, we rewrite size to equal the number of\n        // texels. Then in the return statement we rehydrate the squarified\n        // dimensions to channel units.\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\n      }\n      return sizeToSquarishShape(size);\n    }\n  }\n}\n\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(isInt),\n      () => 'All values in axis param must be integers but ' +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\nexport function getRowsCols(shape: number[]): [number, number] {\n  if (shape.length === 0) {\n    throw Error('Cannot get rows and columns of an empty shape array.');\n  }\n\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\nimport {TextureLayout, TextureType} from './types';\n\nexport const createTextureLayoutFromTextureType =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\n     textureType: TextureType): TextureLayout => {\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\n      const isPacked = textureType === TextureType.packed;\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\n          undefined;\n      return createTextureLayoutFromShape(\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\n    };\n\nexport const calculateTextureWidthAndHeight =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\n        [number, number] => {\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\n          return [layout.width, layout.height];\n        };\n\n/**\n * Create a TextureLayout object from shape.\n */\nexport const createTextureLayoutFromShape =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\n      const isPacked = !!(prefs && prefs.isPacked);\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\n      const rank = shape.length;\n      let inferredDims = shape.slice(0);\n      if (rank === 0) {\n        inferredDims = [1];\n      }\n      if (channels === 1) {\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\n        unpackedShape = shape;\n      } else if (isPacked) {\n        if (channels !== 4) {\n          throw new Error('a packed texture must be 4-channel');\n        }\n        unpackedShape = shape;\n        if (rank > 0) {\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\n        }\n        if (rank > 1) {\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\n        }\n      } else if (!unpackedShape) {\n        throw new Error('Unpacked shape is needed when using channels > 1');\n      }\n      return {\n        width,\n        height,\n        channels,\n        isPacked,\n        shape: inferredDims,\n        strides: ShapeUtil.computeStrides(inferredDims),\n        unpackedShape,\n        reversedWH: (prefs && prefs.reverseWH)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger, Profiler} from '../../instrument';\nimport {Tensor} from '../../tensor';\n\nimport {Encoder} from './texture-data-encoder';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureData, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\nexport interface TextureManagerConfig {\n  reuseTextures?: boolean;\n}\n\n/**\n * TextureManager is the mainly responsible for caching Textures\n * Textures are cached in 2 levels:\n *   1. the texures which are associated with a dataId (from Tensor)\n *    Caching these is crucial to performance. These are In-use Textures\n *   2. textures which are not in use by any current ProgramInfo/Tensor\n *     These are called Free Textures\n * TextureManager is also used to help creating textures. For this it\n * uses WebGLContext and TextureLayoutStrategy\n */\nexport class TextureManager {\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\n  private readonly textureLookup: Map<WebGLTexture, string>;\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\n\n  constructor(\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\n      private config: TextureManagerConfig) {\n    if (config.reuseTextures) {\n      this.inUseTextures = new Map();\n      this.idleTextures = new Map();\n      this.textureLookup = new Map();\n    }\n  }\n  createTextureFromLayout(\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\n    const textureDataType = this.toEncoderType(dataType);\n\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\n      throw new Error('not implemented');\n    }\n    const width = layout.width;\n    const height = layout.height;\n\n    let key: string|undefined;\n    let inUseTextures: WebGLTexture[]|undefined;\n    if (this.config.reuseTextures) {\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\n      inUseTextures = this.inUseTextures.get(key);\n      if (!inUseTextures) {\n        inUseTextures = [];\n        this.inUseTextures.set(key, inUseTextures);\n      }\n\n      const idleTextures = this.idleTextures.get(key);\n      if (idleTextures && idleTextures.length > 0) {\n        const texture = idleTextures.pop()!;\n        inUseTextures.push(texture);\n        if (usage === Encoder.Usage.UploadOnly) {\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\n        }\n        return texture;\n      }\n    }\n\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\n\n    if (this.config.reuseTextures) {\n      inUseTextures!.push(texture);\n      this.textureLookup.set(texture, key!);\n    }\n    return texture;\n  }\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\n    if (!channels) {\n      channels = 1;\n    }\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      return this.toTensorData(dataType, data);\n    });\n  }\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\n    const dataId = td.tensor.dataId;\n    if (!channels) {\n      channels = 1;\n    }\n    if (this.pendingRead.has(dataId)) {\n      const subscribers = this.pendingRead.get(dataId);\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\n    }\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\n      this.pendingRead.set(dataId, []);\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      // add a fence waiting for the data to be ready\n      await this.glContext.createAndWaitForFence();\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      const tensorData = this.toTensorData(dataType, data);\n      const subscribers = this.pendingRead.get(dataId);\n      this.pendingRead.delete(dataId);\n      subscribers?.forEach(resolve => resolve(tensorData));\n      return tensorData;\n    });\n  }\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b);\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\n    });\n  }\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\n    let key: string|undefined;\n    if (this.config.reuseTextures) {\n      key = this.textureLookup.get(textureData.texture);\n      if (key) {\n        if (deleteTexture) {\n          this.textureLookup.delete(key);\n        }\n        const inUseTextures = this.inUseTextures.get(key);\n        if (inUseTextures) {\n          const index = inUseTextures.indexOf(textureData.texture);\n          if (index !== -1) {\n            inUseTextures.splice(index, 1);\n            let idleTextures = this.idleTextures.get(key);\n            if (!idleTextures) {\n              idleTextures = [];\n              this.idleTextures.set(key, idleTextures);\n            }\n            idleTextures.push(textureData.texture);\n          }\n        }\n      }\n    }\n\n    if (!key || deleteTexture) {\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\n      this.glContext.deleteTexture(textureData.texture);\n    }\n  }\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\n    switch (dataType) {\n      case 'int16':\n        return data instanceof Int16Array ? data : Int16Array.from(data);\n      case 'int32':\n        return data instanceof Int32Array ? data : Int32Array.from(data);\n      case 'int8':\n        return data instanceof Int8Array ? data : Int8Array.from(data);\n      case 'uint16':\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\n      case 'uint32':\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\n      case 'uint8':\n      case 'bool':\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\n      case 'float32':\n        return data instanceof Float32Array ? data : Float32Array.from(data);\n      case 'float64':\n        return data instanceof Float64Array ? data : Float64Array.from(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n  }\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\n    if (!data) {\n      return undefined;\n    }\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\n    /*\n    switch (dataType) {\n      case 'int16':\n      case 'int32':\n      case 'uint16':\n      case 'uint32':\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\n      case 'int8':\n      case 'uint8':\n      case 'bool':\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\n      case 'float32':\n      case 'float64':\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n    */\n  }\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\n    return 'float';\n    // switch (dataType) {\n    //   case 'int16':\n    //   case 'int32':\n    //   case 'uint16':\n    //   case 'uint32':\n    //     return 'int';\n    //   case 'uint8':\n    //   case 'bool':\n    //     return 'byte';\n    //   case 'float32':\n    //   case 'float64':\n    //     return 'float';\n    //   default:\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\n    // }\n  }\n  clearActiveTextures(): void {\n    this.glContext.clearActiveTextures();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../tensor';\n\n/**\n * Layout info is used for mapping n-dimensional array to 2D textures\n * The layout is created by the TextureLayoutStrategy based on\n * the Tensor's dimensions and strides\n */\nexport interface TextureLayout {\n  width: number;\n  height: number;\n  /**\n   * specify the number of value that encoded in a single pixel\n   */\n  channels: 1|2|3|4;\n  /**\n   * whether in packed mode or not\n   */\n  isPacked?: boolean;\n  /**\n   * the normalized shape\n   */\n  shape: readonly number[];\n  /**\n   * the stride of each dimensions, calculated according to shape\n   */\n  strides: readonly number[];\n  /**\n   * the original shape(dims) of the corresponding tensor\n   */\n  unpackedShape: readonly number[];\n\n  reversedWH?: boolean;\n}\nexport interface TextureData extends TextureLayout {\n  tensor: Tensor;\n  texture: WebGLTexture;\n}\n\nexport enum TextureType {\n  unpacked,              // <-- normal unpacked texture\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\n  packed,                // <-- normal packed texture\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  type: Tensor.DataType;\n  textureType: TextureType;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * A set of metadata of a shader program.\n */\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n  /**\n   * texture types for each input\n   */\n  inputTypes: TextureType[];\n  /**\n   * names of each input\n   */\n  inputNames: string[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for output\n   */\n  output: TensorInfo;\n  /**\n   * the shader's processing source code\n   */\n  shaderSource: string;\n  /**\n   * whether the shader source contains a customized main function implementation\n   */\n  hasMain?: boolean;\n}\n\nexport interface VariableInfo {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * Information of uniforms that shader uses\n */\nexport interface UniformInfo {\n  type: 'sampler2D'|VariableInfo['type'];\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface UniformLocation extends UniformInfo {\n  location: WebGLUniformLocation;\n}\n\n/**\n * Artifact is the result of compilation\n * It does not contain input of output data\n * However anything that could be run as a \"program\"\n */\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  program: WebGLProgram;\n  uniformLocations: UniformLocation[];\n  attribLocations: {position: number; textureCoord: number};\n}\nexport declare namespace Artifact {\n  type UniformLocations = Artifact['uniformLocations'];\n  type AttribLocations = Artifact['attribLocations'];\n}\n\nexport interface UniformData {\n  [name: string]: number|number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {assert} from '../../util';\n/**\n * Given a non RGBA shape calculate the R version\n * It is assumed that the dimensions are multiples of given channels\n * NOTE: it is always the last dim that gets packed.\n * @param unpackedShape original shape to create a packed version from\n */\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\n  const len = unpackedShape.length;\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\n}\n\nexport async function repeatedTry(\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Generates the function name from an input sampler name.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\n}\n\n/**\n * Generates the function name from an input sampler name at output coordinates.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\n}\n\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\n  // Deep copy.\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\n  newInputShape = squeezedShape;\n  return newInputShape;\n}\n\n/** Returns a list of squeezed parameters for shader functions */\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\n  return keptDims.map(d => params[d]).join(', ');\n}\n\n/** Returns the data type for different ranks. */\nexport function getCoordsDataType(rank: number): string {\n  if (rank <= 1) {\n    return 'int';\n  } else if (rank === 2) {\n    return 'ivec2';\n  } else if (rank === 3) {\n    return 'ivec3';\n  } else if (rank === 4) {\n    return 'ivec4';\n  } else if (rank === 5) {\n    return 'ivec5';\n  } else if (rank === 6) {\n    return 'ivec6';\n  } else {\n    throw Error(`GPU for rank ${rank} is not yet supported`);\n  }\n}\n\nexport function getGlChannels(rank = 6): string[] {\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nimport {WebGLContext} from './webgl-context';\n\nconst cache: {[contextId: string]: WebGLContext} = {};\n\n/**\n * This factory function creates proper WebGLRenderingContext based on\n * the current browsers capabilities\n * The order is from higher/most recent versions to most basic\n */\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  let context: WebGLContext|undefined;\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\n    context = cache.webgl2;\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\n    context = cache.webgl;\n  }\n\n  context = context || createNewWebGLContext(contextId);\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\n  const gl = context.gl;\n\n  cache[contextId] = context;\n\n  if (gl.isContextLost()) {\n    delete cache[contextId];\n    return createWebGLContext(contextId);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n\n  return context;\n}\n\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  const canvas = createCanvas();\n  const contextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    depth: false,\n    antialias: false,\n    stencil: false,\n    preserveDrawingBuffer: false,\n    premultipliedAlpha: false,\n    failIfMajorPerformanceCaveat: false\n  };\n  let gl: WebGLRenderingContext|null;\n  const ca = contextAttributes;\n  if (!contextId || contextId === 'webgl2') {\n    gl = canvas.getContext('webgl2', ca);\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 2);\n      } catch (err) {\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\n      }\n    }\n  }\n  if (!contextId || contextId === 'webgl') {\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 1);\n      } catch (err) {\n        Logger.warning(\n            'GlContextFactory',\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\n      }\n    }\n  }\n\n  throw new Error('WebGL is not supported');\n}\n\nfunction createCanvas(): HTMLCanvasElement {\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  return canvas;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport * as DataEncoders from './texture-data-encoder';\nimport {DataEncoder, Encoder} from './texture-data-encoder';\nimport {repeatedTry} from './utils';\n\nexport interface FenceContext {\n  query: WebGLSync|null;\n  isFencePassed(): boolean;\n}\n\ntype PollItem = {\n  isDoneFn: () => boolean; resolveFn: () => void;\n};\n\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\n  let i = 0;\n  for (; i < arr.length; ++i) {\n    const isDone = arr[i]();\n    if (!isDone) {\n      break;\n    }\n  }\n  return i - 1;\n}\n\n/**\n * Abstraction and wrapper around WebGLRenderingContext and its operations\n */\nexport class WebGLContext {\n  gl: WebGLRenderingContext;\n  version: 1|2;\n\n  private vertexbuffer: WebGLBuffer;\n  private framebuffer: WebGLFramebuffer;\n\n  // WebGL flags and vital parameters\n  private isFloatTextureAttachableToFrameBuffer: boolean;\n  isFloat32DownloadSupported: boolean;\n  isRenderFloat32Supported: boolean;\n  isBlendSupported: boolean;\n  maxTextureSize: number;\n  // private maxCombinedTextureImageUnits: number;\n  private maxTextureImageUnits: number;\n  // private maxCubeMapTextureSize: number;\n  // private shadingLanguageVersion: string;\n  // private webglVendor: string;\n  // private webglVersion: string;\n\n  // WebGL2 flags and vital parameters\n  // private max3DTextureSize: number;\n  // private maxArrayTextureLayers: number;\n  // private maxColorAttachments: number;\n  // private maxDrawBuffers: number;\n\n  // WebGL extensions\n  // eslint-disable-next-line camelcase\n  textureFloatExtension: OES_texture_float|null;\n  // eslint-disable-next-line camelcase\n  textureHalfFloatExtension: OES_texture_half_float|null;\n\n  // WebGL2 extensions\n  colorBufferFloatExtension: unknown|null;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\n\n  private disposed: boolean;\n  private frameBufferBound = false;\n\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\n    this.gl = gl;\n    this.version = version;\n\n    this.getExtensions();\n    this.vertexbuffer = this.createVertexbuffer();\n    this.framebuffer = this.createFramebuffer();\n    this.queryVitalParameters();\n  }\n\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\n    const gl = this.gl;\n    // create the texture\n    const texture = gl.createTexture();\n    // bind the texture so the following methods effect this texture.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    const buffer = data ? encoder.encode(data, width * height) : null;\n    gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,  // Level of detail.\n        encoder.internalFormat, width, height,\n        0,  // Always 0 in OpenGL ES.\n        encoder.format, encoder.textureType, buffer);\n    this.checkError();\n    return texture as WebGLTexture;\n  }\n  updateTexture(\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\n    const gl = this.gl;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const buffer = encoder.encode(data, width * height);\n    gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,  // level\n        0,  // xoffset\n        0,  // yoffset\n        width, height, encoder.format, encoder.textureType, buffer);\n    this.checkError();\n  }\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\n    const gl = this.gl;\n    // Make it the target for framebuffer operations - including rendering.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    this.checkError();\n    gl.viewport(0, 0, width, height);\n    gl.scissor(0, 0, width, height);\n  }\n  readTexture(\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\n      channels: number): Encoder.DataArrayType {\n    const gl = this.gl;\n    if (!channels) {\n      channels = 1;\n    }\n    if (!this.frameBufferBound) {\n      this.attachFramebuffer(texture, width, height);\n    }\n    const encoder = this.getEncoder(dataType, channels);\n    const buffer = encoder.allocate(width * height);\n    // bind texture to framebuffer\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    // TODO: Check if framebuffer is ready\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\n    this.checkError();\n    // unbind FB\n    return encoder.decode(buffer, dataSize);\n  }\n\n  isFramebufferReady(): boolean {\n    // TODO: Implement logic to check if the framebuffer is ready\n    return true;\n  }\n  getActiveTexture(): string {\n    const gl = this.gl;\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\n  }\n  getTextureBinding(): WebGLTexture {\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n  }\n  getFramebufferBinding(): WebGLFramebuffer {\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n  }\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\n    const gl = this.gl;\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\n    gl.enableVertexAttribArray(positionHandle);\n    if (textureCoordHandle !== -1) {\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\n      gl.enableVertexAttribArray(textureCoordHandle);\n    }\n    this.checkError();\n  }\n  createProgram(\n      vertexShader: WebGLShader,\n      fragShader: WebGLShader,\n      ): WebGLProgram {\n    const gl = this.gl;\n    const program = gl.createProgram()!;\n\n    // the program consists of our shaders\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    return program;\n  }\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\n    const gl = this.gl;\n    const shader = gl.createShader(shaderType);\n    if (!shader) {\n      throw new Error(`createShader() returned null with type ${shaderType}`);\n    }\n\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\nShader source:\n${shaderSource}`);\n    }\n    return shader;\n  }\n  deleteShader(shader: WebGLShader): void {\n    this.gl.deleteShader(shader);\n  }\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\n    const gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0 + position);\n    this.checkError();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    this.checkError();\n    gl.uniform1i(uniformHandle, position);\n    this.checkError();\n  }\n  draw(): void {\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n    this.checkError();\n  }\n  checkError(): void {\n    if (env.debug) {\n      const gl = this.gl;\n      const error = gl.getError();\n      let label = '';\n      switch (error) {\n        case (gl.NO_ERROR):\n          return;\n        case (gl.INVALID_ENUM):\n          label = 'INVALID_ENUM';\n          break;\n        case (gl.INVALID_VALUE):\n          label = 'INVALID_VALUE';\n          break;\n        case (gl.INVALID_OPERATION):\n          label = 'INVALID_OPERATION';\n          break;\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\n          break;\n        case (gl.OUT_OF_MEMORY):\n          label = 'OUT_OF_MEMORY';\n          break;\n        case (gl.CONTEXT_LOST_WEBGL):\n          label = 'CONTEXT_LOST_WEBGL';\n          break;\n        default:\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\n      }\n      throw new Error(label);\n    }\n  }\n  deleteTexture(texture: WebGLTexture): void {\n    this.gl.deleteTexture(texture);\n  }\n  deleteProgram(program: WebGLProgram): void {\n    this.gl.deleteProgram(program);\n  }\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\n    if (this.version === 2) {\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\n    }\n\n    switch (dataType) {\n      case 'float':\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\n        } else {\n          return new DataEncoders.RGBAFloatDataEncoder(\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\n        }\n      case 'int':\n        throw new Error('not implemented');\n      case 'byte':\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\n      default:\n        throw new Error(`Invalid dataType: ${dataType}`);\n    }\n  }\n  clearActiveTextures(): void {\n    const gl = this.gl;\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n  }\n  dispose(): void {\n    if (this.disposed) {\n      return;\n    }\n    const gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteFramebuffer(this.framebuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.deleteBuffer(this.vertexbuffer);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.finish();\n    this.disposed = true;\n  }\n\n  private createDefaultGeometry(): Float32Array {\n    // Sets of x,y,z(=0),s,t coordinates.\n    return new Float32Array([\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\n    ]);\n  }\n  private createVertexbuffer(): WebGLBuffer {\n    const gl = this.gl;\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n      throw new Error('createBuffer() returned null');\n    }\n    const geometry = this.createDefaultGeometry();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\n    this.checkError();\n    return buffer;\n  }\n  private createFramebuffer(): WebGLFramebuffer {\n    const fb = this.gl.createFramebuffer();\n    if (!fb) {\n      throw new Error('createFramebuffer returned null');\n    }\n    return fb;\n  }\n\n  private queryVitalParameters(): void {\n    const gl = this.gl;\n\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\n\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\n      throw new Error('both float32 and float16 TextureType are not supported');\n    }\n\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\n\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\n    // this.webglVersion = gl.getParameter(gl.VERSION);\n\n    if (this.version === 2) {\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\n    }\n  }\n  private getExtensions(): void {\n    if (this.version === 2) {\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n    } else {\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\n    }\n  }\n\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\n    // test whether Float32 texture is supported:\n    // STEP.1 create a float texture\n    const gl = this.gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    // STEP.2 bind a frame buffer\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    // STEP.3 attach texture to framebuffer\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    // STEP.4 test whether framebuffer is complete\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isComplete;\n  }\n\n  private checkRenderFloat32(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  private checkFloat32Download(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  /**\n   * Check whether GL_BLEND is supported\n   */\n  private checkFloat32Blend(): boolean {\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\n    // https://github.com/microsoft/onnxjs/issues/145\n\n    const gl = this.gl;\n\n    let texture: WebGLTexture|null|undefined;\n    let frameBuffer: WebGLFramebuffer|null|undefined;\n    let vertexShader: WebGLShader|null|undefined;\n    let fragmentShader: WebGLShader|null|undefined;\n    let program: WebGLProgram|null|undefined;\n\n    try {\n      texture = gl.createTexture();\n      frameBuffer = gl.createFramebuffer();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n      gl.enable(gl.BLEND);\n\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      if (!vertexShader) {\n        return false;\n      }\n      gl.shaderSource(vertexShader, 'void main(){}');\n      gl.compileShader(vertexShader);\n\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      if (!fragmentShader) {\n        return false;\n      }\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\n      gl.compileShader(fragmentShader);\n\n      program = gl.createProgram();\n      if (!program) {\n        return false;\n      }\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      gl.useProgram(program);\n\n      gl.drawArrays(gl.POINTS, 0, 1);\n      return gl.getError() === gl.NO_ERROR;\n\n    } finally {\n      gl.disable(gl.BLEND);\n\n      if (program) {\n        gl.deleteProgram(program);\n      }\n      if (vertexShader) {\n        gl.deleteShader(vertexShader);\n      }\n      if (fragmentShader) {\n        gl.deleteShader(fragmentShader);\n      }\n      if (frameBuffer) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.deleteFramebuffer(frameBuffer);\n      }\n      if (texture) {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.deleteTexture(texture);\n      }\n    }\n  }\n\n  beginTimer(): WebGLQuery {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      const query = gl2.createQuery() as WebGLQuery;\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n      return query;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported.');\n    }\n  }\n\n  endTimer() {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\n      return;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n  }\n\n  isTimerResultAvailable(query: WebGLQuery): boolean {\n    let available = false, disjoint = false;\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n\n    return available && !disjoint;\n  }\n\n  getTimerResult(query: WebGLQuery): number {\n    let timeElapsed = 0;\n    if (this.version === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n      gl2.deleteQuery(query);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n    // return miliseconds\n    return timeElapsed / 1000000;\n  }\n\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\n    await repeatedTry(() => this.isTimerResultAvailable(query));\n    return this.getTimerResult(query);\n  }\n\n  public async createAndWaitForFence(): Promise<void> {\n    const fenceContext = this.createFence(this.gl);\n    return this.pollFence(fenceContext);\n  }\n\n  private createFence(gl: WebGLRenderingContext): FenceContext {\n    let isFencePassed: () => boolean;\n    const gl2 = gl as WebGL2RenderingContext;\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    gl.flush();\n    if (query === null) {\n      isFencePassed = () => true;\n    } else {\n      isFencePassed = () => {\n        const status = gl2.clientWaitSync(query, 0, 0);\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\n      };\n    }\n    return {query, isFencePassed};\n  }\n\n  async pollFence(fenceContext: FenceContext) {\n    return new Promise<void>(resolve => {\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n    });\n  }\n\n  private itemsToPoll: PollItem[] = [];\n\n  pollItems(): void {\n    // Find the last query that has finished.\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n    for (let i = 0; i <= index; ++i) {\n      const {resolveFn} = this.itemsToPoll[i];\n      resolveFn();\n    }\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n  }\n\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\n    this.itemsToPoll.push({isDoneFn, resolveFn});\n    if (this.itemsToPoll.length > 1) {\n      // We already have a running loop that polls.\n      return;\n    }\n    // Start a new loop that polls.\n    await repeatedTry(() => {\n      this.pollItems();\n      // End the loop if no more items to poll.\n      return this.itemsToPoll.length === 0;\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from './backend';\nimport {Graph} from './graph';\nimport {Logger, Profiler} from './instrument';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nclass KernelOp {\n  constructor(public op: Operator, public node: Graph.Node) {}\n}\n\nexport class ExecutionPlan {\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\n    this.initialize(ops);\n  }\n\n  initialize(ops: Operator[]) {\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\n      const graphNodes = this.graph.getNodes();\n      if (graphNodes.length !== ops.length) {\n        throw new Error('The size of nodes and OPs do not match.');\n      }\n\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\n      this.reset();\n\n      // look for starter node(s)\n      this._starter = [];\n      this._ops.forEach((op, i) => {\n        let resolved = true;\n        for (const input of op.node.inputs) {\n          if (\n              !this._values[input]                                   // not an initialized input\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\n          ) {\n            resolved = false;\n            break;\n          }\n        }\n        if (resolved) {\n          this._starter.push(i);\n        }\n      });\n    });\n  }\n\n  reset() {\n    this._values = this.graph.getValues().map(i => i.tensor);\n  }\n\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\n      // reset mediem result\n      this.reset();\n\n      // create inference handler\n      const inferenceHandler = sessionHandler.createInferenceHandler();\n\n      // populate inputs value\n      const graphInputs = this.graph.getInputIndices();\n      if (modelInputs.length !== graphInputs.length) {\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\n            modelInputs.length} expected: ${graphInputs.length}`);\n      }\n\n      modelInputs.forEach((input, i) => {\n        const index = graphInputs[i];\n        this._values[index] = input;\n      });\n\n      // prepare running sequence\n      const sequence: number[] = this._starter.slice(0);\n\n      // execution iterations\n      const graphValues = this.graph.getValues();\n      const graphNodes = this.graph.getNodes();\n\n      let rear = 0;\n      while (rear < sequence.length) {\n        const thisOpIndex = sequence[rear++];\n        const thisOp = this._ops[thisOpIndex];\n\n        // check input\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\n        if (inputList.indexOf(undefined) !== -1) {\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\n        }\n\n        // run\n        const inputTensors = inputList as Tensor[];\n        Logger.verbose(\n            'ExecPlan',\n            `Runing op:${thisOp.node.name} (${\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\n\n        const outputList = await this.profiler.event(\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\n\n        // check output\n        if (outputList.length !== thisOp.node.outputs.length) {\n          throw new Error('the size of output does not match model definition.');\n        }\n\n        // fill value\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          if (this._values[j]) {\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\n          }\n          this._values[j] = output;\n        });\n\n        // resolve downstream nodes\n        const downstreamNodes = new Set<number>();\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\n            let resolved = true;\n            for (const k of currentDownstreamNode.inputs) {\n              if (!this._values[k]) {\n                resolved = false;\n                break;\n              }\n            }\n            if (resolved) {\n              downstreamNodes.add(currentDownstreamNodeIndex);\n            }\n          }\n        });\n        sequence.push(...downstreamNodes);\n      }\n\n      const output: Tensor[] = [];\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\n        const outputIndex = this.graph.getOutputIndices()[i];\n        const outputTensor = this._values[outputIndex];\n        if (outputTensor === undefined) {\n          throw new Error(`required output [${outputIndex}] does not have value`);\n        }\n        if (outputIndex === 0) {\n          await outputTensor.getData();\n        } else {\n          // eslint-disable-next-line no-unused-expressions\n          outputTensor.data;\n        }\n        output.push(outputTensor);\n      }\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\n      inferenceHandler.dispose();\n      return output;\n    });\n  }\n\n  _values: Array<Tensor|undefined>;\n  _ops: KernelOp[];\n  _starter: number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {onnx} from 'onnx-proto';\n\nimport {Attribute} from './attribute';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\nimport {Tensor} from './tensor';\nimport {LongUtil, ProtoUtil} from './util';\n\nexport declare namespace Graph {\n  export interface Shape {\n    readonly dims: readonly number[];\n  }\n  export interface ValueType {\n    readonly tensorType: Tensor.DataType;\n    readonly shape: Shape;\n  }\n  export interface Value {\n    // the tensor data. empty for non-initialized inputs\n    readonly tensor?: Tensor;\n\n    // index to the Node where the value comes from. -1 for initializer.\n    readonly from: number;\n\n    // indices to the Nodes where the values go to.\n    readonly to: readonly number[];\n\n    // value type specification. empty for non-input values.\n    readonly type?: ValueType;\n  }\n  export interface Node {\n    // name of the node\n    readonly name: string;\n\n    // the operator type\n    readonly opType: string;\n\n    // indices to the Values where the inputs come from.\n    readonly inputs: readonly number[];\n\n    // indices to the Values where the outpus go to.\n    readonly outputs: readonly number[];\n\n    // the attributes that used by the operator\n    readonly attributes: Attribute;\n  }\n\n  /**\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\n   */\n  export interface Transformer {\n    removeAllIdentityNodes(): void;\n    removeAllDropoutNodes(): void;\n    fuseConvActivationNodes(): void;\n    // TODO: add generic functions to manipulate the graph\n  }\n\n  // an initializer can use transformer to transform the graph\n  export interface Initializer {\n    transformGraph(transformer: Transformer): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Graph {\n  getInputIndices(): readonly number[];\n  getInputNames(): readonly string[];\n  getOutputIndices(): readonly number[];\n  getOutputNames(): readonly string[];\n  getValues(): readonly Graph.Value[];\n  getNodes(): readonly Graph.Node[];\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\nexport const Graph = {\n  /**\n   * construct a graph from a graph protobuf type\n   */\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\n      new GraphImpl(graphProto, initializer),\n};\n\nclass Value implements Graph.Value {\n  constructor(valueInfo?: onnx.IValueInfoProto) {\n    this._from = undefined;\n    this._to = [];\n    this.tensor = undefined;\n    this.type = undefined;\n\n    if (valueInfo) {\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\n    }\n  }\n\n  _from?: number;  // -1 represent from initializer\n  get from() {\n    return this._from!;\n  }\n  _to: number[];\n  get to() {\n    return this._to;\n  }\n  type?: Graph.ValueType;\n  tensor?: Tensor;\n}\n\nclass Node implements Graph.Node {\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\n    if (_nodeProto instanceof onnx.NodeProto) {\n      this.name = _nodeProto.name;\n      this.opType = _nodeProto.opType;\n      this.attributes = new Attribute(_nodeProto.attribute);\n    } else if (_nodeProto instanceof ortFbs.Node) {\n      this.name = name ?? _nodeProto.name()!;\n      this.opType = _nodeProto.opType()!;\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\n    }\n\n    this.inputs = [];\n    this.outputs = [];\n    this.executeNode = true;\n  }\n\n  name: string;\n  opType: string;\n  inputs: number[];\n  outputs: number[];\n  attributes: Attribute;\n  executeNode: boolean;\n}\n\nclass GraphImpl implements Graph, Graph.Transformer {\n  private _allData: Value[];\n\n  private _allInputIndices: number[];\n  private _allInputNames: string[];\n\n  private _allOutputIndices: number[];\n  private _allOutputNames: string[];\n\n  private _nodes: Node[];\n\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\n    if (!graph) {\n      throw new TypeError('graph is empty');\n    }\n\n    // build the graph - will throw exceptions if something fatal is detected\n    this.buildGraph(graph);\n\n    // execute any transformation logic for the graph (if applicable)\n    this.transformGraph(graphInitializer);\n\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\n    this.checkIsAcyclic();\n  }\n\n  getInputIndices(): readonly number[] {\n    return this._allInputIndices;\n  }\n\n  getInputNames(): readonly string[] {\n    return this._allInputNames;\n  }\n\n  getOutputIndices(): readonly number[] {\n    return this._allOutputIndices;\n  }\n\n  getOutputNames(): readonly string[] {\n    return this._allOutputNames;\n  }\n\n  getValues(): readonly Graph.Value[] {\n    return this._allData;\n  }\n\n  getNodes(): readonly Graph.Node[] {\n    return this._nodes;\n  }\n\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\n    // build the graph - will throw exceptions if something fatal is detected\n    if (graph instanceof onnx.GraphProto) {\n      this.buildGraphFromOnnxFormat(graph);\n    } else if (graph instanceof ortFbs.Graph) {\n      this.buildGraphFromOrtFormat(graph);\n    } else {\n      throw new TypeError('Graph type is not supported.');\n    }\n  }\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    if (!graph.input) {\n      throw new Error('missing information in graph: input');\n    }\n    const inputValueNames = [];\n    for (const i of graph.input) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated input name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      inputValueNames.push(i.name!);\n    }\n\n    // scan all initializers\n    if (!graph.initializer) {\n      throw new Error('missing information in graph: initializer');\n    }\n    for (const i of graph.initializer) {\n      let index = dataIndices.get(i.name!);\n      if (index === undefined) {\n        const value = new Value();\n        value.type = {\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\n        };\n        index = this._allData.push(value) - 1;\n        dataIndices.set(i.name!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromProto(i);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    if (!graph.output) {\n      throw new Error('missing information in graph: output');\n    }\n    for (const i of graph.output) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated output name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(i.name!);\n    }\n\n    // scan all nodes\n    if (!graph.node) {\n      throw new Error('missing information in graph: node');\n    }\n    for (const nodeProto of graph.node) {\n      if (!nodeProto.name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            nodeProto.name = name;\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(nodeProto.name)) {\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\n      nodesIndices.set(nodeProto.name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n      if (!nodeProto.output) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (const output of nodeProto.output) {\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType === 'Constant') {\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n\n      if (!nodeProto.input) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (const input of nodeProto.input) {\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n\n    return true;\n  }\n\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    const inputValueNames = [];\n    for (let i = 0; i < graph.inputsLength(); i++) {\n      const inputName = graph.inputs(i);\n      if (dataIndices.has(inputName)) {\n        throw new Error(`duplicated input name: ${inputName}`);\n      }\n      // Find the input typeInfo from nodeargs\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\n        if (graph.nodeArgs(j)?.name() === inputName) {\n          const value = new Value();\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\n            throw new Error('Unexpected value type for the nodeArg.');\n          }\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\n          const shape = valueInfo.shape()!;\n          const dims = [];\n          for (let k = 0; k < shape.dimLength()!; k++) {\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\n          }\n          value.type = {shape: {dims}, tensorType: type};\n          const currentIndex = this._allData.push(value) - 1;\n          dataIndices.set(inputName, currentIndex);\n          inputValueNames.push(inputName);\n        }\n      }\n    }\n    // check initializers\n    for (let i = 0; i < graph.initializersLength(); i++) {\n      const initializer = graph.initializers(i)!;\n      let index = dataIndices.get(initializer.name()!);\n      if (index === undefined) {\n        const value = new Value();\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\n        value.type = {shape: {dims}, tensorType: type};\n        index = this._allData.push(value) - 1;\n        dataIndices.set(initializer.name()!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    for (let i = 0; i < graph.outputsLength(); i++) {\n      const outputName = graph.outputs(i);\n      if (dataIndices.has(outputName)) {\n        throw new Error(`duplicated output name: ${outputName}`);\n      }\n      const currentIndex = this._allData.push(new Value()) - 1;\n      dataIndices.set(outputName, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(outputName);\n    }\n\n    // scan all nodes\n    if (!graph.nodes) {\n      throw new Error('missing information in graph: node');\n    }\n    for (let i = 0; i < graph.nodesLength(); i++) {\n      const nodeProto = graph.nodes(i);\n      let name = nodeProto!.name();\n      if (!name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            // an unique name is found. break.\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(name)) {\n        throw new Error(`duplicated node name: ${name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\n      nodesIndices.set(name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i);\n      if (nodeProto == null) {\n        throw new Error(`No node exists at index ${i}`);\n      }\n      if (nodeProto?.outputsLength() === 0) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\n        const output = nodeProto?.outputs(j);\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType() === 'Constant') {\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (nodeProto.outputsLength() !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i)!;\n\n      if (nodeProto.inputsLength() === 0) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\n        const input = nodeProto.inputs(j)!;\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n  }\n\n  private checkIsAcyclic() {\n    // go through the graph and check for cycles or other fatal inconsistencies\n    const starters: Set<number> = new Set<number>();\n    this._allInputIndices.forEach(i => {\n      const data = this._allData[i];\n      data._to.forEach(j => {\n        starters.add(j);\n      });\n    });\n\n    // Iterative DFS to check for cycles\n    const nodesStack = Array.from(starters);\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\n\n    while (nodesStack.length > 0) {\n      const nodeIndex = nodesStack.pop()!;\n      // this node has now been processed completely. Mark this node 'black' to denote this.\n      if (nodesState[nodeIndex] === 'gray') {\n        nodesState[nodeIndex] = 'black';\n      } else {\n        // this node is under processing stage. mark this node 'gray' to denote this.\n        nodesStack.push(nodeIndex);\n        nodesState[nodeIndex] = 'gray';\n\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\n          const data = this._allData[outgoingEdgeIndex];\n          if (typeof data.tensor !== 'undefined') {\n            throw new Error('node outputs should not be initialized');\n          }\n          if (data._from !== nodeIndex) {\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\n          }\n          data._to.forEach((downstreamNodeIndex) => {\n            // back edge found - cyclic\n            if (nodesState[downstreamNodeIndex] === 'gray') {\n              throw new Error('model graph is cyclic');\n            }\n            // tree edge found - continue processing by adding it to stack\n            else if (nodesState[downstreamNodeIndex] === 'white') {\n              nodesStack.push(downstreamNodeIndex);\n            }\n          });\n        });\n      }\n    }\n  }\n\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\n    // apply common transform\n    this.removeAllIdentityNodes();\n    this.removeAllDropoutNodes();\n    this.fuseConvActivationNodes();\n    // apply initializer specific transform\n    if (graphInitializer) {\n      graphInitializer.transformGraph(this);\n    }\n\n    // finalize graph\n    this.finalizeGraph();\n  }\n\n  /**\n   * finalize the graph.\n   *\n   * this function should be called after all the transformation completed.\n   * this function removes all unnecessary nodes and values from the graph\n   */\n  finalizeGraph() {\n    let offset = 0;\n    // delete all nodes that are not being executed\n    for (let i = 0; i < this._nodes.length; i++) {\n      if (!this._nodes[i].executeNode) {\n        // delete this node and shift all subsequent nodes up\n        offset++;\n        // delete all output values\n        this._nodes[i].outputs.forEach(ind => {\n          this._allData[ind]._from = -2;\n        });\n        this._nodes.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        // update the value table\n        this._nodes[i].inputs.forEach(value => {\n          const ind = this._allData[value]._to.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allData[value]._to[ind] = i;\n          }\n        });\n        this._nodes[i].outputs.forEach(value => {\n          if (this._allData[value]._from && this._allData[value]._from! === i + offset) {\n            this._allData[value]._from! = i;\n          }\n        });\n      }\n    }\n    offset = 0;\n    // delete all values that are not being referenced\n    for (let i = 0; i < this._allData.length; i++) {\n      // if current value is neither linked to next node, nor an output value, remove it.\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\n        offset++;\n        this._allData.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        let ind = -1;\n        // if current value is neither an input value nor an initializer, find the node it's\n        // coming from and update the corresponding node output\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[this._allData[i].from].outputs[ind] = i;\n          }\n        } else {\n          // if current value is an input value, update its reference in inputIndices\n          ind = this._allInputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allInputIndices[ind] = i;\n          }\n        }\n\n        // find the node that the current value is linking to and update its input reference\n        this._allData[i].to.forEach(node => {\n          ind = this._nodes[node].inputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[node].inputs[ind] = i;\n          }\n        });\n        if (this._allData[i].to.length === 0) {\n          // if current value is a graph output, update its reference in outputIndices\n          ind = this._allOutputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allOutputIndices[ind] = i;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete the specifed node. Assume the node has only one input and the first output connected to other nodes\n   * @param nodeIndex The index of node to be deleted\n   */\n  private deleteNode(nodeIndex: number) {\n    const node = this._nodes[nodeIndex];\n    if (node.inputs.length > 1) {\n      throw new Error('Node deletion with multiple inputs is not supported. ');\n    }\n    if (node.outputs.length > 1) {\n      for (let i = 1; i < node.outputs.length; i++) {\n        if (this._allData[node.outputs[i]].to.length > 0) {\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\n        }\n      }\n    }\n\n    // this node wil not be executed\n    node.executeNode = false;\n    const inputValueIndex = node.inputs[0];\n    const outputValueIndex = node.outputs[0];\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\n\n    // remove this node from the to property of the input Value\n    const delIndex = this._allData[inputValueIndex].to.indexOf(nodeIndex);\n    // should not happen\n    if (delIndex === -1) {\n      throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\n    }\n    this._allData[inputValueIndex].to.splice(delIndex, 1);\n\n    // clear node indices consuming this output Value\n    this._allData[outputValueIndex]._to = [];\n\n    // if the output of this node is a graph output, adjust the index appropriately\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\n    if (index !== -1) {\n      this._allOutputIndices[index] = inputValueIndex;\n    }\n\n    // override the inputs for nodes consuming this node's output with the input to this node\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\n      for (const nodeIndex of nodesConsumingOutput) {\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\n        // should not happen\n        if (replaceIndex === -1) {\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\n        }\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\n        this._allData[inputValueIndex].to.push(nodeIndex);\n      }\n    }\n  }\n\n  removeAllDropoutNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Dropout' nodes so that no time is wasted in execution\n      if (node.opType === 'Dropout') {\n        // the node should have exactly 1 input and 1 or 2 outputs\n        if (node.inputs.length !== 1) {\n          throw new Error('Dropout nodes should only contain one input. ');\n        }\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\n        }\n        // the second output should not be referenced by any other node\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\n        }\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  removeAllIdentityNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Identity' nodes so that no time is wasted in execution\n      if (node.opType === 'Identity') {\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  isActivation(n: Node): boolean {\n    switch (n.opType) {\n      // TODO: add other activation methods\n      case 'Relu':\n      case 'Sigmoid':\n      case 'Clip':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  fuseConvActivationNodes() {\n    for (const node of this._nodes) {\n      if (node.opType === 'Conv') {\n        const next = this._allData[node.outputs[0]]._to;\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\n          const child = this._nodes[next[0]];\n          node.attributes.set('__internal_activation', 'string', (child.opType));\n          // TODO: need add support for Clip after opset 11, which has min/max as inputs\n          if (child.opType === 'Clip') {\n            node.attributes.set('__clip_min', 'float', child.attributes.getFloat('min'));\n            node.attributes.set('__clip_max', 'float', child.attributes.getFloat('max'));\n          }\n          this.deleteNode(next[0]);\n        }\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {WebGLContext} from './backends/webgl/webgl-context';\n\nexport declare namespace Logger {\n  export interface SeverityTypeMap {\n    verbose: 'v';\n    info: 'i';\n    warning: 'w';\n    error: 'e';\n    fatal: 'f';\n  }\n\n  export type Severity = keyof SeverityTypeMap;\n\n  export type Provider = 'none'|'console';\n\n  /**\n   * Logging config that used to control the behavior of logger\n   */\n  export interface Config {\n    /**\n     * Specify the logging provider. 'console' by default\n     */\n    provider?: Provider;\n    /**\n     * Specify the minimal logger serverity. 'warning' by default\n     */\n    minimalSeverity?: Logger.Severity;\n    /**\n     * Whether to output date time in log. true by default\n     */\n    logDateTime?: boolean;\n    /**\n     * Whether to output source information (Not yet supported). false by default\n     */\n    logSourceLocation?: boolean;\n  }\n\n  export interface CategorizedLogger {\n    verbose(content: string): void;\n    info(content: string): void;\n    warning(content: string): void;\n    error(content: string): void;\n    fatal(content: string): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Logger {\n  (category: string): Logger.CategorizedLogger;\n\n  verbose(content: string): void;\n  verbose(category: string, content: string): void;\n  info(content: string): void;\n  info(category: string, content: string): void;\n  warning(content: string): void;\n  warning(category: string, content: string): void;\n  error(content: string): void;\n  error(category: string, content: string): void;\n  fatal(content: string): void;\n  fatal(category: string, content: string): void;\n\n  /**\n   * Reset the logger configuration.\n   * @param config specify an optional default config\n   */\n  reset(config?: Logger.Config): void;\n  /**\n   * Set the logger's behavior on the given category\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\n   * '' is specified, the default behavior will be updated.\n   * @param config the config object to indicate the logger's behavior\n   */\n  set(category: string, config: Logger.Config): void;\n\n  /**\n   * Set the logger's behavior from ort-common env\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\n   */\n  setWithEnv(env: Env): void;\n}\n\ninterface LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string): void;\n}\nclass NoOpLoggerProvider implements LoggerProvider {\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\n    // do nothing\n  }\n}\nclass ConsoleLoggerProvider implements LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string) {\n    // eslint-disable-next-line no-console\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\n  }\n\n  private color(severity: Logger.Severity) {\n    switch (severity) {\n      case 'verbose':\n        return '\\x1b[34;40mv\\x1b[0m';\n      case 'info':\n        return '\\x1b[32mi\\x1b[0m';\n      case 'warning':\n        return '\\x1b[30;43mw\\x1b[0m';\n      case 'error':\n        return '\\x1b[31;40me\\x1b[0m';\n      case 'fatal':\n        return '\\x1b[101mf\\x1b[0m';\n      default:\n        throw new Error(`unsupported severity: ${severity}`);\n    }\n  }\n}\n\nconst SEVERITY_VALUE = {\n  verbose: 1000,\n  info: 2000,\n  warning: 4000,\n  error: 5000,\n  fatal: 6000\n};\n\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\n  ['none']: new NoOpLoggerProvider(),\n  ['console']: new ConsoleLoggerProvider()\n};\nconst LOGGER_DEFAULT_CONFIG = {\n  provider: 'console',\n  minimalSeverity: 'warning',\n  logDateTime: true,\n  logSourceLocation: false\n};\nlet LOGGER_CONFIG_MAP:\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\n\nfunction log(category: string): Logger.CategorizedLogger;\nfunction log(severity: Logger.Severity, content: string): void;\nfunction log(severity: Logger.Severity, category: string, content: string): void;\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\nfunction log(\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\n  if (arg1 === undefined) {\n    // log(category: string): Logger.CategorizedLogger;\n    return createCategorizedLogger(arg0);\n  } else if (arg2 === undefined) {\n    // log(severity, content);\n    logInternal(arg0 as Logger.Severity, arg1, 1);\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\n    // log(severity, content, stack)\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\n    // log(severity, category, content)\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\n    // log(severity, category, content, stack)\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\n  } else {\n    throw new TypeError('input is valid');\n  }\n}\n\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\n  return {\n    verbose: log.verbose.bind(null, category),\n    info: log.info.bind(null, category),\n    warning: log.warning.bind(null, category),\n    error: log.error.bind(null, category),\n    fatal: log.fatal.bind(null, category)\n  };\n}\n\n// NOTE: argument 'category' is put the last parameter beacause typescript\n// doesn't allow optional argument put in front of required argument. This\n// order is different from a usual logging API.\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\n    return;\n  }\n\n  if (config.logDateTime) {\n    content = `${new Date().toISOString()}|${content}`;\n  }\n\n  if (config.logSourceLocation) {\n    // TODO: calculate source location from 'stack'\n  }\n\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace log {\n  export function verbose(content: string): void;\n  export function verbose(category: string, content: string): void;\n  export function verbose(arg0: string, arg1?: string) {\n    log('verbose', arg0, arg1);\n  }\n  export function info(content: string): void;\n  export function info(category: string, content: string): void;\n  export function info(arg0: string, arg1?: string) {\n    log('info', arg0, arg1);\n  }\n  export function warning(content: string): void;\n  export function warning(category: string, content: string): void;\n  export function warning(arg0: string, arg1?: string) {\n    log('warning', arg0, arg1);\n  }\n  export function error(content: string): void;\n  export function error(category: string, content: string): void;\n  export function error(arg0: string, arg1?: string) {\n    log('error', arg0, arg1);\n  }\n  export function fatal(content: string): void;\n  export function fatal(category: string, content: string): void;\n  export function fatal(arg0: string, arg1?: string) {\n    log('fatal', arg0, arg1);\n  }\n\n  export function reset(config?: Logger.Config): void {\n    LOGGER_CONFIG_MAP = {};\n    set('', config || {});\n  }\n  export function set(category: string, config: Logger.Config): void {\n    if (category === '*') {\n      reset(config);\n    } else {\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\n      LOGGER_CONFIG_MAP[category] = {\n        provider: config.provider || previousConfig.provider,\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\n                                                                      config.logSourceLocation\n      };\n    }\n\n    // TODO: we want to support wildcard or regex?\n  }\n\n  export function setWithEnv(env: Env): void {\n    const config: Logger.Config = {};\n    if (env.logLevel) {\n      config.minimalSeverity = env.logLevel as Logger.Severity;\n    }\n    set('', config);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\nexport const Logger: Logger = log;\n\nexport declare namespace Profiler {\n  export interface Config {\n    maxNumberEvents?: number;\n    flushBatchSize?: number;\n    flushIntervalInMilliseconds?: number;\n  }\n\n  export type EventCategory = 'session'|'node'|'op'|'backend';\n\n  export interface Event {\n    end(): void|Promise<void>;\n  }\n}\n// TODO\n// class WebGLEvent implements Profiler.Event {}\n\nclass Event implements Profiler.Event {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\n\n  end() {\n    return this.endCallback(this);\n  }\n\n  async checkTimer(): Promise<number> {\n    if (this.ctx === undefined || this.timer === undefined) {\n      throw new Error('No webgl timer found');\n    } else {\n      this.ctx.endTimer();\n      return this.ctx.waitForQueryAndGetTime(this.timer);\n    }\n  }\n}\n\nclass EventRecord {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\n}\n\nexport class Profiler {\n  static create(config?: Profiler.Config): Profiler {\n    if (config === undefined) {\n      return new this();\n    }\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\n  }\n\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\n    this._started = false;\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\n  }\n\n  // start profiling\n  start() {\n    this._started = true;\n    this._timingEvents = [];\n    this._flushTime = now();\n    this._flushPointer = 0;\n  }\n\n  // stop profiling\n  stop() {\n    this._started = false;\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\n    }\n  }\n\n  // create an event scope for the specific function\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\n\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\n      |Promise<T> {\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\n    let isPromise = false;\n\n    const res = func();\n\n    // we consider a then-able object is a promise\n    if (res && typeof (res as Promise<T>).then === 'function') {\n      isPromise = true;\n      return new Promise<T>((resolve, reject) => {\n        (res as Promise<T>)\n            .then(\n                async value => {  // fulfilled\n                  if (event) {\n                    await event.end();\n                  }\n                  resolve(value);\n                },\n                async reason => {  // rejected\n                  if (event) {\n                    await event.end();\n                  }\n                  reject(reason);\n                });\n      });\n    }\n    if (!isPromise && event) {\n      const eventRes = event.end();\n      if (eventRes && typeof eventRes.then === 'function') {\n        return new Promise<T>((resolve, reject) => {\n          (eventRes).then(\n              () => {  // fulfilled\n                resolve(res);\n              },\n              (reason) => {  // rejected\n                reject(reason);\n              });\n        });\n      }\n    }\n    return res;\n  }\n\n  // begin an event\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\n    if (!this._started) {\n      throw new Error('profiler is not started yet');\n    }\n    if (ctx === undefined) {\n      const startTime = now();\n      this.flush(startTime);\n      return new Event(category, name, startTime, e => this.endSync(e));\n    } else {\n      const timer: WebGLQuery = ctx.beginTimer();\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\n    }\n  }\n\n  // end the specific event\n  private async end(event: Event): Promise<void> {\n    const endTime: number = await event.checkTimer();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private endSync(event: Event): void {\n    const endTime: number = now();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private logOneEvent(event: EventRecord) {\n    Logger.verbose(\n        `Profiler.${event.category}`,\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\n  }\n\n  private flush(currentTime: number) {\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\n      // should flush when either batch size accumlated or interval elepsed\n\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\n           this._flushPointer < this._timingEvents.length;\n           this._flushPointer++) {\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\n      }\n\n      this._flushTime = now();\n    }\n  }\n\n  get started() {\n    return this._started;\n  }\n  private _started = false;\n  private _timingEvents: EventRecord[];\n\n  private readonly _maxNumberEvents: number;\n\n  private readonly _flushBatchSize: number;\n  private readonly _flushIntervalInMilliseconds: number;\n\n  private _flushTime: number;\n  private _flushPointer = 0;\n}\n\n/**\n * returns a number to represent the current timestamp in a resolution as high as possible.\n */\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {OpSet} from './opset';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\nimport {LongUtil} from './util';\n\nexport class Model {\n  // empty model\n  constructor() {}\n\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\n    if (!isOrtFormat) {\n      // isOrtFormat === false || isOrtFormat === undefined\n      try {\n        this.loadFromOnnxFormat(buf, graphInitializer);\n        return;\n      } catch (e) {\n        if (isOrtFormat !== undefined) {\n          throw e;\n        }\n      }\n    }\n\n    this.loadFromOrtFormat(buf, graphInitializer);\n  }\n\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const modelProto = onnx.ModelProto.decode(buf);\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n\n    this._opsets =\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\n\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\n  }\n\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const fb = new flatbuffers.ByteBuffer(buf);\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n    this._opsets = [];\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\n      const opsetId = ortModel.opsetImport(i)!;\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\n    }\n\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\n  }\n\n  private _graph: Graph;\n  get graph(): Graph {\n    return this._graph;\n  }\n\n  private _opsets: OpSet[];\n  get opsets(): readonly OpSet[] {\n    return this._opsets;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from './backend';\nimport {Graph} from './graph';\nimport {Tensor} from './tensor';\n\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\n\nexport interface Operator {\n  readonly impl: OperatorImplementation<unknown>;\n  readonly context: Graph.Node|unknown;\n}\n\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from './graph';\nimport {OperatorImplementation, OperatorInitialization} from './operators';\n\nexport interface OpSet {\n  domain: string;\n  version: number;\n}\n\nexport declare namespace OpSet {\n  /**\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\n   */\n  type Domain = ''|'ai.onnx.ml';\n\n  /**\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\n   * operatorInitialization (optional)\n   */\n  type ResolveRule = [\n    string, Domain, string, OperatorImplementation<Graph.Node>\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\n}\n\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\n  for (const rule of rules) {\n    const opType = rule[0];\n    const domain = rule[1];\n    const versionSelector = rule[2];\n    const opImpl = rule[3];\n    const opInit = rule[4];\n\n    if (node.opType === opType) {  // operator type matches\n      for (const opset of opsets) {\n        // opset '' and 'ai.onnx' are considered the same.\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\n          if (matchSelector(opset.version, versionSelector)) {\n            return {opImpl, opInit};\n          }\n        }\n      }\n    }\n  }\n\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\n}\n\nfunction matchSelector(version: number, selector: string): boolean {\n  if (selector.endsWith('+')) {\n    // minimum version match ('7+' expects version>=7)\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\n    return !isNaN(rangeStart) && rangeStart <= version;\n  } else if (selector.split('-').length === 2) {\n    // range match ('6-8' expects 6<=version<=8)\n    const pair = selector.split('-');\n    const rangeStart = Number.parseInt(pair[0], 10);\n    const rangeEnd = Number.parseInt(pair[1], 10);\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\n  } else {\n    // exact match ('7' expects version===7)\n    return Number.parseInt(selector, 10) === version;\n  }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n/* eslint-disable */\n\nimport {flatbuffers} from 'flatbuffers';\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum AttributeType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    INT = 2,\n    STRING = 3,\n    TENSOR = 4,\n    GRAPH = 5,\n    FLOATS = 6,\n    INTS = 7,\n    STRINGS = 8,\n    TENSORS = 9,\n    GRAPHS = 10,\n    SPARSE_TENSOR = 11,\n    SPARSE_TENSORS = 12\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TensorDataType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    UINT8 = 2,\n    INT8 = 3,\n    UINT16 = 4,\n    INT16 = 5,\n    INT32 = 6,\n    INT64 = 7,\n    STRING = 8,\n    BOOL = 9,\n    FLOAT16 = 10,\n    DOUBLE = 11,\n    UINT32 = 12,\n    UINT64 = 13,\n    COMPLEX64 = 14,\n    COMPLEX128 = 15,\n    BFLOAT16 = 16\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum NodeType {Primitive = 0, Fused = 1}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\n}\n\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Shape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Shape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Dimension= obj\n     * @returns onnxruntime.experimental.fbs.Dimension\n     */\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    dimLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startShape(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimOffset\n     */\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, dimOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Shape.startShape(builder);\n      Shape.addDim(builder, dimOffset);\n      return Shape.endShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Dimension {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Dimension\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\n     */\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimension(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimension(\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Dimension.startDimension(builder);\n      Dimension.addValue(builder, valueOffset);\n      Dimension.addDenotation(builder, denotationOffset);\n      return Dimension.endDimension(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class DimensionValue {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns DimensionValue\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\n     */\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    dimValue(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    dimParam(): string|null;\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimensionValue(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\n     */\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long dimValue\n     */\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimParamOffset\n     */\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimParamOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimensionValue(\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\n      DimensionValue.startDimensionValue(builder);\n      DimensionValue.addDimType(builder, dimType);\n      DimensionValue.addDimValue(builder, dimValue);\n      DimensionValue.addDimParam(builder, dimParamOffset);\n      return DimensionValue.endDimensionValue(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TensorTypeAndShape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TensorTypeAndShape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\n        TensorTypeAndShape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Shape= obj\n     * @returns onnxruntime.experimental.fbs.Shape|null\n     */\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\n     */\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset shapeOffset\n     */\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, shapeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensorTypeAndShape(\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\n      TensorTypeAndShape.addElemType(builder, elemType);\n      TensorTypeAndShape.addShape(builder, shapeOffset);\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class MapType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns MapType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startMapType(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\n     */\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueTypeOffset\n     */\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, valueTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createMapType(\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      MapType.startMapType(builder);\n      MapType.addKeyType(builder, keyType);\n      MapType.addValueType(builder, valueTypeOffset);\n      return MapType.endMapType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SequenceType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SequenceType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSequenceType(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset elemTypeOffset\n     */\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, elemTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SequenceType.startSequenceType(builder);\n      SequenceType.addElemType(builder, elemTypeOffset);\n      return SequenceType.endSequenceType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class EdgeEnd {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns EdgeEnd\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      return this.bb!.readUint32(this.bb_pos);\n    }\n\n    /**\n     * @returns number\n     */\n    srcArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 4);\n    }\n\n    /**\n     * @returns number\n     */\n    dstArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number node_index\n     * @param number src_arg_index\n     * @param number dst_arg_index\n     * @returns flatbuffers.Offset\n     */\n    static createEdgeEnd(\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\n        dst_arg_index: number): flatbuffers.Offset {\n      builder.prep(4, 12);\n      builder.writeInt32(dst_arg_index);\n      builder.writeInt32(src_arg_index);\n      builder.writeInt32(node_index);\n      return builder.offset();\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class NodeEdge {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns NodeEdge\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNodeEdge(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number nodeIndex\n     */\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\n      builder.addFieldInt32(0, nodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputEdgesOffset\n     */\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputEdgesOffset\n     */\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNodeEdge(\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      NodeEdge.startNodeEdge(builder);\n      NodeEdge.addNodeIndex(builder, nodeIndex);\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\n      return NodeEdge.endNodeEdge(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Node {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Node\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    sinceVersion(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    index(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    opType(): string|null;\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    opType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.NodeType\n     */\n    type(): onnxruntime.experimental.fbs.NodeType {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    executionProviderType(): string|null;\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Attribute= obj\n     * @returns onnxruntime.experimental.fbs.Attribute\n     */\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\n        |null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    attributesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    inputArgCounts(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    inputArgCountsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Int32Array\n     */\n    inputArgCountsArray(): Int32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ?\n          new Int32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    implicitInputs(index: number): string;\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    implicitInputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNode(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number sinceVersion\n     */\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\n      builder.addFieldInt32(3, sinceVersion, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number index\n     */\n    static addIndex(builder: flatbuffers.Builder, index: number) {\n      builder.addFieldInt32(4, index, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opTypeOffset\n     */\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, opTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.NodeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset executionProviderTypeOffset\n     */\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset attributesOffset\n     */\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, attributesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputArgCountsOffset\n     */\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset implicitInputsOffset\n     */\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNode(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Node.startNode(builder);\n      Node.addName(builder, nameOffset);\n      Node.addDocString(builder, docStringOffset);\n      Node.addDomain(builder, domainOffset);\n      Node.addSinceVersion(builder, sinceVersion);\n      Node.addIndex(builder, index);\n      Node.addOpType(builder, opTypeOffset);\n      Node.addType(builder, type);\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\n      Node.addInputs(builder, inputsOffset);\n      Node.addOutputs(builder, outputsOffset);\n      Node.addAttributes(builder, attributesOffset);\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\n      Node.addImplicitInputs(builder, implicitInputsOffset);\n      return Node.endNode(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class ValueInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns ValueInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startValueInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset typeOffset\n     */\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, typeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createValueInfo(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      ValueInfo.startValueInfo(builder);\n      ValueInfo.addName(builder, nameOffset);\n      ValueInfo.addDocString(builder, docStringOffset);\n      ValueInfo.addType(builder, typeOffset);\n      return ValueInfo.endValueInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TypeInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TypeInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\n     */\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\n    }\n\n    /**\n     * @param flatbuffers.Table obj\n     * @returns ?flatbuffers.Table\n     */\n    value<T extends flatbuffers.Table>(obj: T): T|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTypeInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\n     */\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTypeInfo(\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TypeInfo.startTypeInfo(builder);\n      TypeInfo.addDenotation(builder, denotationOffset);\n      TypeInfo.addValueType(builder, valueType);\n      TypeInfo.addValue(builder, valueOffset);\n      return TypeInfo.endTypeInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class OperatorSetId {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns OperatorSetId\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    version(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startOperatorSetId(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long version\n     */\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createOperatorSetId(\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\n      OperatorSetId.startOperatorSetId(builder);\n      OperatorSetId.addDomain(builder, domainOffset);\n      OperatorSetId.addVersion(builder, version);\n      return OperatorSetId.endOperatorSetId(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Tensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Tensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    rawData(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    rawDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint8Array\n     */\n    rawDataArray(): Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ?\n          new Uint8Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    stringData(index: number): string;\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensor(builder: flatbuffers.Builder) {\n      builder.startObject(6);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\n     */\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset rawDataOffset\n     */\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, rawDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(1, data.length, 1);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt8(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(1, numElems, 1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringDataOffset\n     */\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, stringDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensor(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Tensor.startTensor(builder);\n      Tensor.addName(builder, nameOffset);\n      Tensor.addDocString(builder, docStringOffset);\n      Tensor.addDims(builder, dimsOffset);\n      Tensor.addDataType(builder, dataType);\n      Tensor.addRawData(builder, rawDataOffset);\n      Tensor.addStringData(builder, stringDataOffset);\n      return Tensor.endTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SparseTensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SparseTensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSparseTensor(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valuesOffset\n     */\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valuesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset indicesOffset\n     */\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, indicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSparseTensor(\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SparseTensor.startSparseTensor(builder);\n      SparseTensor.addValues(builder, valuesOffset);\n      SparseTensor.addIndices(builder, indicesOffset);\n      SparseTensor.addDims(builder, dimsOffset);\n      return SparseTensor.endSparseTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Attribute {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Attribute\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.AttributeType\n     */\n    type(): onnxruntime.experimental.fbs.AttributeType {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\n    }\n\n    /**\n     * @returns number\n     */\n    f(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    i(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    s(): string|null;\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    s(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    floats(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    floatsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Float32Array\n     */\n    floatsArray(): Float32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ?\n          new Float32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    ints(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    intsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    strings(index: number): string;\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    tensorsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph\n     */\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    graphsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startAttribute(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.AttributeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number f\n     */\n    static addF(builder: flatbuffers.Builder, f: number) {\n      builder.addFieldFloat32(3, f, 0.0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long i\n     */\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sOffset\n     */\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, sOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tOffset\n     */\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, tOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset gOffset\n     */\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, gOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset floatsOffset\n     */\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, floatsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addFloat32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset intsOffset\n     */\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, intsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringsOffset\n     */\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, stringsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tensorsOffset\n     */\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, tensorsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphsOffset\n     */\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, graphsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createAttribute(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Attribute.startAttribute(builder);\n      Attribute.addName(builder, nameOffset);\n      Attribute.addDocString(builder, docStringOffset);\n      Attribute.addType(builder, type);\n      Attribute.addF(builder, f);\n      Attribute.addI(builder, i);\n      Attribute.addS(builder, sOffset);\n      Attribute.addT(builder, tOffset);\n      Attribute.addG(builder, gOffset);\n      Attribute.addFloats(builder, floatsOffset);\n      Attribute.addInts(builder, intsOffset);\n      Attribute.addStrings(builder, stringsOffset);\n      Attribute.addTensors(builder, tensorsOffset);\n      Attribute.addGraphs(builder, graphsOffset);\n      return Attribute.endAttribute(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Graph {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Graph\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    initializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\n     * @returns onnxruntime.experimental.fbs.ValueInfo\n     */\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeArgsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Node= obj\n     * @returns onnxruntime.experimental.fbs.Node\n     */\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    maxNodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\n     * @returns onnxruntime.experimental.fbs.NodeEdge\n     */\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\n     * @returns onnxruntime.experimental.fbs.SparseTensor\n     */\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\n        onnxruntime.experimental.fbs.SparseTensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    sparseInitializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startGraph(builder: flatbuffers.Builder) {\n      builder.startObject(8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset initializersOffset\n     */\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, initializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeArgsOffset\n     */\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodesOffset\n     */\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, nodesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number maxNodeIndex\n     */\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\n      builder.addFieldInt32(3, maxNodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeEdgesOffset\n     */\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sparseInitializersOffset\n     */\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createGraph(\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Graph.startGraph(builder);\n      Graph.addInitializers(builder, initializersOffset);\n      Graph.addNodeArgs(builder, nodeArgsOffset);\n      Graph.addNodes(builder, nodesOffset);\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\n      Graph.addInputs(builder, inputsOffset);\n      Graph.addOutputs(builder, outputsOffset);\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\n      return Graph.endGraph(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Model {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Model\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    irVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\n     */\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\n        onnxruntime.experimental.fbs.OperatorSetId|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    opsetImportLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerName(): string|null;\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerVersion(): string|null;\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    modelVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphDocString(): string|null;\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startModel(builder: flatbuffers.Builder) {\n      builder.startObject(9);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long irVersion\n     */\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opsetImportOffset\n     */\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, opsetImportOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerNameOffset\n     */\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, producerNameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerVersionOffset\n     */\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(3, producerVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long modelVersion\n     */\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphOffset\n     */\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, graphOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphDocStringOffset\n     */\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createModel(\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Model.startModel(builder);\n      Model.addIrVersion(builder, irVersion);\n      Model.addOpsetImport(builder, opsetImportOffset);\n      Model.addProducerName(builder, producerNameOffset);\n      Model.addProducerVersion(builder, producerVersionOffset);\n      Model.addDomain(builder, domainOffset);\n      Model.addModelVersion(builder, modelVersion);\n      Model.addDocString(builder, docStringOffset);\n      Model.addGraph(builder, graphOffset);\n      Model.addGraphDocString(builder, graphDocStringOffset);\n      return Model.endModel(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class KernelCreateInfos {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns KernelCreateInfos\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\n        KernelCreateInfos {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    nodeIndices(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndicesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint32Array\n     */\n    nodeIndicesArray(): Uint32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ?\n          new Uint32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    kernelDefHashes(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    kernelDefHashesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeIndicesOffset\n     */\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelDefHashesOffset\n     */\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createKernelCreateInfos(\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      KernelCreateInfos.startKernelCreateInfos(builder);\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\n      return KernelCreateInfos.endKernelCreateInfos(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SubGraphSessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SubGraphSessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\n        SubGraphSessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphId(): string|null;\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphIdOffset\n     */\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, graphIdOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      builder.requiredField(offset, 4);  // graph_id\n      return offset;\n    }\n\n    static createSubGraphSessionState(\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SubGraphSessionState.startSubGraphSessionState(builder);\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\n      return SubGraphSessionState.endSubGraphSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\n     */\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\n     */\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    subGraphSessionStatesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelsOffset\n     */\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, kernelsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\n     */\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSessionState(\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SessionState.startSessionState(builder);\n      SessionState.addKernels(builder, kernelsOffset);\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\n      return SessionState.endSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class InferenceSession {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns InferenceSession\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @returns boolean\n     */\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\n      return bb.__has_identifier('ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    ortVersion(): string|null;\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Model= obj\n     * @returns onnxruntime.experimental.fbs.Model|null\n     */\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startInferenceSession(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset ortVersionOffset\n     */\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, ortVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset modelOffset\n     */\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, modelOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM', true);\n    }\n\n    static createInferenceSession(\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      InferenceSession.startInferenceSession(builder);\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\n      InferenceSession.addModel(builder, modelOffset);\n      InferenceSession.addSessionState(builder, sessionStateOffset);\n      return InferenceSession.endInferenceSession(builder);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {Session} from './session';\nimport {Tensor as OnnxjsTensor} from './tensor';\n\nexport class OnnxjsSessionHandler implements SessionHandler {\n  constructor(private session: Session) {\n    this.inputNames = this.session.inputNames;\n    this.outputNames = this.session.outputNames;\n  }\n\n  async dispose(): Promise<void> {}\n  inputNames: readonly string[];\n  outputNames: readonly string[];\n  async run(\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const inputMap = new Map<string, OnnxjsTensor>();\n    for (const name in feeds) {\n      if (Object.hasOwnProperty.call(feeds, name)) {\n        const feed = feeds[name];\n        inputMap.set(\n            name,\n            new OnnxjsTensor(\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\n                feed.data as OnnxjsTensor.NumberType));\n      }\n    }\n    const outputMap = await this.session.run(inputMap);\n    const output: SessionHandler.ReturnType = {};\n    outputMap.forEach((tensor, name) => {\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\n    });\n    return output;\n  }\n  startProfiling(): void {\n    this.session.startProfiling();\n  }\n  endProfiling(): void {\n    this.session.endProfiling();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {promisify} from 'util';\n\nimport {resolveBackend, SessionHandlerType} from './backend';\nimport {ExecutionPlan} from './execution-plan';\nimport {Graph} from './graph';\nimport {Profiler} from './instrument';\nimport {Model} from './model';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nexport declare namespace Session {\n  export interface Config {\n    backendHint?: string;\n    profiler?: Profiler.Config;\n  }\n\n  export interface Context {\n    profiler: Readonly<Profiler>;\n    graphInputTypes?: Tensor.DataType[];\n    graphInputDims?: Array<readonly number[]>;\n  }\n}\n\nexport class Session {\n  constructor(config: Session.Config = {}) {\n    this._initialized = false;\n    this.backendHint = config.backendHint;\n    this.profiler = Profiler.create(config.profiler);\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\n  }\n\n  get inputNames(): readonly string[] {\n    return this._model.graph.getInputNames();\n  }\n  get outputNames(): readonly string[] {\n    return this._model.graph.getOutputNames();\n  }\n\n  startProfiling() {\n    this.profiler.start();\n  }\n\n  endProfiling() {\n    this.profiler.stop();\n  }\n\n  async loadModel(uri: string): Promise<void>;\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\n  async loadModel(buffer: Uint8Array): Promise<void>;\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\n    await this.profiler.event('session', 'Session.loadModel', async () => {\n      // resolve backend and session handler\n      const backend = await resolveBackend(this.backendHint);\n      this.sessionHandler = backend.createSessionHandler(this.context);\n\n      this._model = new Model();\n      if (typeof arg === 'string') {\n        const isOrtFormat = arg.endsWith('.ort');\n        if (typeof fetch === 'undefined') {\n          // node\n          const buf = await promisify(readFile)(arg);\n          this.initialize(Buffer.from(buf), isOrtFormat);\n        } else {\n          // browser\n          const response = await fetch(arg);\n          const buf = await response.arrayBuffer();\n          this.initialize(new Uint8Array(buf), isOrtFormat);\n        }\n      } else if (!ArrayBuffer.isView(arg)) {\n        // load model from ArrayBuffer\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\n        this.initialize(arr);\n      } else {\n        // load model from Uint8array\n        this.initialize(arg);\n      }\n    });\n  }\n\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\n    if (this._initialized) {\n      throw new Error('already initialized');\n    }\n\n    this.profiler.event('session', 'Session.initialize', () => {\n      // load graph\n      const graphInitializer =\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\n\n      // graph is completely initialzied at this stage , let the interested handlers know\n      if (this.sessionHandler.onGraphInitialized) {\n        this.sessionHandler.onGraphInitialized(this._model.graph);\n      }\n      // initialize each operator in the graph\n      this.initializeOps(this._model.graph);\n\n      // instantiate an ExecutionPlan object to be used by the Session object\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\n    });\n\n    this._initialized = true;\n  }\n\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\n    if (!this._initialized) {\n      throw new Error('session not initialized yet');\n    }\n\n    return this.profiler.event('session', 'Session.run', async () => {\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\n\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\n\n      return this.createOutput(outputTensors);\n    });\n  }\n\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\n    const modelInputNames = this._model.graph.getInputNames();\n\n    // normalize inputs\n    // inputs: Tensor[]\n    if (Array.isArray(inputs)) {\n      if (inputs.length !== modelInputNames.length) {\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\n      }\n    }\n    // convert map to array\n    // inputs: Map<string, Tensor>\n    else {\n      if (inputs.size !== modelInputNames.length) {\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\n      }\n\n      const sortedInputs = new Array<Tensor>(inputs.size);\n      let sortedInputsIndex = 0;\n      for (let i = 0; i < modelInputNames.length; ++i) {\n        const tensor = inputs.get(modelInputNames[i]);\n        if (!tensor) {\n          throw new Error(`missing input tensor for: '${name}'`);\n        }\n        sortedInputs[sortedInputsIndex++] = tensor;\n      }\n\n      inputs = sortedInputs;\n    }\n\n    // validate dims requirements\n    // First session run - graph input data is not cached for the session\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\n        this.context.graphInputDims.length === 0) {\n      const modelInputIndices = this._model.graph.getInputIndices();\n      const modelValues = this._model.graph.getValues();\n\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\n\n      for (let i = 0; i < modelInputIndices.length; ++i) {\n        const graphInput = modelValues[modelInputIndices[i]];\n        graphInputDims[i] = graphInput.type!.shape.dims;\n\n        // cached for second and subsequent runs.\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\n        this.context.graphInputDims!.push(inputs[i].dims);\n      }\n\n      this.validateInputTensorDims(graphInputDims, inputs, true);\n    }\n\n    // Second and subsequent session runs - graph input data is cached for the session\n    else {\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\n    }\n\n    // validate types requirement\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\n\n    return inputs;\n  }\n\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedType = graphInputTypes[i];\n      const actualType = givenInputs[i].type;\n      if (expectedType !== actualType) {\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\n      }\n    }\n  }\n\n  private validateInputTensorDims(\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedDims = graphInputDims[i];\n      const actualDims = givenInputs[i].dims;\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\n            actualDims.join(',')}]`);\n      }\n    }\n  }\n\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\n      boolean {\n    if (expectedDims.length !== actualDims.length) {\n      return false;\n    }\n\n    for (let i = 0; i < expectedDims.length; ++i) {\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\n        // data shape mis-match AND not a 'None' dimension.\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\n    const modelOutputNames = this._model.graph.getOutputNames();\n    if (outputTensors.length !== modelOutputNames.length) {\n      throw new Error('expected number of outputs do not match number of generated outputs');\n    }\n\n    const output = new Map<string, Tensor>();\n    for (let i = 0; i < modelOutputNames.length; ++i) {\n      output.set(modelOutputNames[i], outputTensors[i]);\n    }\n\n    return output;\n  }\n\n  private initializeOps(graph: Graph): void {\n    const nodes = graph.getNodes();\n    this._ops = new Array(nodes.length);\n\n    for (let i = 0; i < nodes.length; i++) {\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\n    }\n  }\n\n  private _model: Model;\n  private _initialized: boolean;\n\n  private _ops: Operator[];\n  private _executionPlan: ExecutionPlan;\n\n  private backendHint?: string;\n\n  private sessionHandler: SessionHandlerType;\n  private context: Session.Context;\n  private profiler: Readonly<Profiler>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Guid} from 'guid-typescript';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nimport {ProtoUtil, ShapeUtil} from './util';\n\nexport declare namespace Tensor {\n  export interface DataTypeMap {\n    bool: Uint8Array;\n    float32: Float32Array;\n    float64: Float64Array;\n    string: string[];\n    int8: Int8Array;\n    uint8: Uint8Array;\n    int16: Int16Array;\n    uint16: Uint16Array;\n    int32: Int32Array;\n    uint32: Uint32Array;\n  }\n\n  export type DataType = keyof DataTypeMap;\n\n  export type StringType = Tensor.DataTypeMap['string'];\n  export type BooleanType = Tensor.DataTypeMap['bool'];\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\n  export type NumberType = BooleanType|IntegerType|FloatType;\n\n  export type Id = Guid;\n}\n\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\n\ntype DataProvider = (id: Tensor.Id) => TensorData;\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\n\nexport class Tensor {\n  /**\n   * get the underlying tensor data\n   */\n  get data(): TensorData {\n    if (this.cache === undefined) {\n      const data = this.dataProvider!(this.dataId);\n      if (data.length !== this.size) {\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\n      }\n      this.cache = data;\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the underlying string tensor data. Should only use when type is STRING\n   */\n  get stringData() {\n    if (this.type !== 'string') {\n      throw new TypeError('data type is not string');\n    }\n\n    return this.data as Tensor.StringType;\n  }\n\n  /**\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL)\n   */\n  get integerData() {\n    switch (this.type) {\n      case 'uint8':\n      case 'int8':\n      case 'uint16':\n      case 'int16':\n      case 'int32':\n      case 'uint32':\n      case 'bool':\n        return this.data as Tensor.IntegerType;\n\n      default:\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\n    }\n  }\n\n  /**\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\n   */\n  get floatData() {\n    switch (this.type) {\n      case 'float32':\n      case 'float64':\n        return this.data as Tensor.FloatType;\n\n      default:\n        throw new TypeError('data type is not float (float32, float64)');\n    }\n  }\n\n  /**\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\n   */\n  get numberData() {\n    if (this.type !== 'string') {\n      return this.data as Tensor.NumberType;\n    }\n    throw new TypeError('type cannot be non-number (string)');\n  }\n\n  /**\n   * get value of an element at the given indices\n   */\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\n  }\n\n  /**\n   * set value of an element at the given indices\n   */\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\n  }\n\n  /**\n   * get the underlying tensor data asynchronously\n   */\n  async getData(): Promise<TensorData> {\n    if (this.cache === undefined) {\n      this.cache = await this.asyncDataProvider!(this.dataId);\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the number of elements in the tensor\n   */\n  public readonly size: number;\n\n  private _strides: readonly number[];\n  /**\n   * get the strides for each dimension\n   */\n  get strides(): readonly number[] {\n    if (!this._strides) {\n      this._strides = ShapeUtil.computeStrides(this.dims);\n    }\n    return this._strides;\n  }\n\n  constructor(\n      /**\n       * get the dimensions of the tensor\n       */\n      public readonly dims: readonly number[],\n      /**\n       * get the type of the tensor\n       */\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\n      /**\n       * get the data ID that used to map to a tensor data\n       */\n      public readonly dataId: Guid = Guid.create()) {\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\n    const size = this.size;\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\n\n    if (cache !== undefined) {\n      if (cache.length !== size) {\n        throw new RangeError('Input dims doesn\\'t match data length.');\n      }\n    }\n\n    if (type === 'string') {\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\n        throw new TypeError('cache should be a string array');\n      }\n\n      if (empty) {\n        this.cache = new Array<string>(size);\n      }\n    } else {\n      if (cache !== undefined) {\n        const constructor = dataviewConstructor(type);\n        if (!(cache instanceof constructor)) {\n          throw new TypeError(`cache should be type ${constructor.name}`);\n        }\n      }\n\n      if (empty) {\n        const buf = new ArrayBuffer(size * sizeof(type));\n        this.cache = createView(buf, type);\n      }\n    }\n  }\n\n  /**\n   * Construct new Tensor from a ONNX Tensor object\n   * @param tensorProto the ONNX Tensor\n   */\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\n    if (!tensorProto) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      tensorProto.stringData!.forEach((str, i) => {\n        const buf = Buffer.from(str.buffer, str.byteOffset, str.byteLength);\n        value.data[i] = buf.toString();\n      });\n\n    } else if (\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\n        tensorProto.rawData.byteLength > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource =\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\n      const elementSize = sizeofProto(tensorProto.dataType!);\n      const length = tensorProto.rawData.byteLength / elementSize;\n\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\n        dataDest[i] = n;\n      }\n    } else {\n      // populate value from array\n      let array: Array<number|Long>;\n      switch (tensorProto.dataType) {\n        case onnx.TensorProto.DataType.FLOAT:\n          array = tensorProto.floatData!;\n          break;\n        case onnx.TensorProto.DataType.INT32:\n        case onnx.TensorProto.DataType.INT16:\n        case onnx.TensorProto.DataType.UINT16:\n        case onnx.TensorProto.DataType.INT8:\n        case onnx.TensorProto.DataType.UINT8:\n        case onnx.TensorProto.DataType.BOOL:\n          array = tensorProto.int32Data!;\n          break;\n        case onnx.TensorProto.DataType.INT64:\n          array = tensorProto.int64Data!;\n          break;\n        case onnx.TensorProto.DataType.DOUBLE:\n          array = tensorProto.doubleData!;\n          break;\n        case onnx.TensorProto.DataType.UINT32:\n        case onnx.TensorProto.DataType.UINT64:\n          array = tensorProto.uint64Data!;\n          break;\n        default:\n          // should never run here\n          throw new Error('unspecific error');\n      }\n\n      if (array === null || array === undefined) {\n        throw new Error('failed to populate data from a tensorproto value');\n      }\n\n      const data = value.data;\n      if (data.length !== array.length) {\n        throw new Error('array length mismatch');\n      }\n\n      for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (Long.isLong(element)) {\n          data[i] = longToNumber(element, tensorProto.dataType);\n        } else {\n          data[i] = element;\n        }\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Construct new Tensor from raw data\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\n   * for other types of tensor.\n   * @param dims the dimensions of the tensor\n   * @param type the type of the tensor\n   */\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\n    return new Tensor(dims, type, undefined, undefined, data);\n  }\n\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\n    if (!ortTensor) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\n        value.data[i] = ortTensor.stringData(i);\n      }\n\n    } else if (\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource = new DataView(\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\n      const elementSize = sizeofProto(ortTensor.dataType());\n      const length = ortTensor.rawDataLength() / elementSize;\n\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\n        dataDest[i] = n;\n      }\n    }\n    return value;\n  }\n}\n\nfunction sizeof(type: Tensor.DataType): number {\n  switch (type) {\n    case 'bool':\n    case 'int8':\n    case 'uint8':\n      return 1;\n    case 'int16':\n    case 'uint16':\n      return 2;\n    case 'int32':\n    case 'uint32':\n    case 'float32':\n      return 4;\n    case 'float64':\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\n  }\n}\n\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.UINT8:\n    case onnx.TensorProto.DataType.INT8:\n    case onnx.TensorProto.DataType.BOOL:\n      return 1;\n    case onnx.TensorProto.DataType.UINT16:\n    case onnx.TensorProto.DataType.INT16:\n      return 2;\n    case onnx.TensorProto.DataType.FLOAT:\n    case onnx.TensorProto.DataType.INT32:\n    case onnx.TensorProto.DataType.UINT32:\n      return 4;\n    case onnx.TensorProto.DataType.INT64:\n    case onnx.TensorProto.DataType.DOUBLE:\n    case onnx.TensorProto.DataType.UINT64:\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\n  return new (dataviewConstructor(type))(dataBuffer);\n}\n\nfunction dataviewConstructor(type: Tensor.DataType) {\n  switch (type) {\n    case 'bool':\n    case 'uint8':\n      return Uint8Array;\n    case 'int8':\n      return Int8Array;\n    case 'int16':\n      return Int16Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'int32':\n      return Int32Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'float32':\n      return Float32Array;\n    case 'float64':\n      return Float64Array;\n    default:\n      // should never run to here\n      throw new Error('unspecified error');\n  }\n}\n\n// convert a long number to a 32-bit integer (cast-down)\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  // INT64, UINT32, UINT64\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\n      throw new TypeError('int64 is not supported');\n    }\n  } else if (\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\n      throw new TypeError('uint64 is not supported');\n    }\n  } else {\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\n  }\n\n  return i.toNumber();\n}\n\n// read one value from TensorProto\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.BOOL:\n    case onnx.TensorProto.DataType.UINT8:\n      return view.getUint8(byteOffset);\n    case onnx.TensorProto.DataType.INT8:\n      return view.getInt8(byteOffset);\n    case onnx.TensorProto.DataType.UINT16:\n      return view.getUint16(byteOffset, true);\n    case onnx.TensorProto.DataType.INT16:\n      return view.getInt16(byteOffset, true);\n    case onnx.TensorProto.DataType.FLOAT:\n      return view.getFloat32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT32:\n      return view.getInt32(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT32:\n      return view.getUint32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\n    case onnx.TensorProto.DataType.DOUBLE:\n      return view.getFloat64(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\n    default:\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\n\n// check the inputs shape before running an OP.\n// return true when the inputs pass the check\n// return false when the inputs do not fit the requirement\n// throw exception when fatal error or not implemented\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\n  if (!inputs || inputs.length !== expectedDimensions.length) {\n    return false;\n  }\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Evaluates the given expression and asserts error message if condition is unmet.\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport class ArrayUtil {\n  /**\n   * Verifies if 2 input arrays contain the same elements.\n   * @param n1 Array 1\n   * @param n2 Array 2\n   * @returns Whether these 2 are equal\n   */\n  static arraysEqual(\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array,\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport class MatMulUtil {\n  /**\n   * Fix the input shapes for MatMul operation if they need fixing\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\n   */\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\n      [readonly number[], readonly number[]] {\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\n    // removed.\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\n\n    // If the second argument is 1-D, it is promoted to a matrix by appending\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\n    // removed.\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\n\n    return [a, b];\n  }\n\n  /**\n   * Fix the output shape computed for MatMul operation if it needs fixing\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\n   * This will be mutated.\n   * @param aRank The rank of tensor A.\n   * @param bRank The rank of tensor B.\n   */\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\n    // Remove prepended dimension if first input is 1d\n    if (aRank === 1) {\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\n      outputShape.splice(outputShape.length - 2, 1);\n    }\n    // Remove appended dimension if second input is 1d\n    if (bRank === 1) {\n      outputShape.pop();\n    }\n  }\n\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcas\n   * @returns The calculated indices that maps to the original tensor.\n   */\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\n    // length as the broadcasted shape, and for each dimension the index should\n    // not be out of range.\n    const originalIndices = new Array(originalShape.length);\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\n    return originalIndices;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcast\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\n   *     mutated).\n   */\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\n    // broadcasted shape, and for each dimension the index should not be out of range.\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\n    const dimOffset = broadcastedIndices.length - originalShape.length;\n    for (let i = 0; i < originalShape.length; i++) {\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\n    }\n  }\n\n  /**\n   * Perform the broadcasting operation on the specific operator\n   * @param a The input tensor A\n   * @param b The input tensor B\n   * @param op The operator lambda function\n   * @param inplace Whether to write the result back to A.\n   * @returns The result tensor, or undefined if input not broadcastable.\n   */\n  static calc(\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\n      resultType?: Tensor.DataType): Tensor|undefined {\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\n\n    if (outputShape) {\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\n        // B is not broadcastable to A, failed to calculate inplace.\n        return undefined;\n      }\n\n      const size = ShapeUtil.size(outputShape);\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\n\n      // both inputs are scalars\n      if (outputShape.length === 0) {\n        c.set([], op(a.get([]), b.get([])));\n      }\n\n      // atleast one input is a non-scalar\n      else {\n        const outputIndices = new Array<number>(outputShape.length);\n        const originalIndicesA = new Array(a.dims.length);\n        const originalIndicesB = new Array(b.dims.length);\n        let valA: string|number = 0;\n        let valB: string|number = 0;\n        let isAScalar = false;\n        let isBScalar = false;\n        if (a.dims.length === 0) {\n          valA = a.get([]);\n          isAScalar = true;\n        }\n        if (b.dims.length === 0) {\n          valB = b.get([]);\n          isBScalar = true;\n        }\n        let rest: number;\n        for (let i = 0; i < size; i++) {\n          // traversal indices\n          rest = i;\n          for (let j = outputShape.length - 1; j >= 0; j--) {\n            outputIndices[j] = rest % outputShape[j];\n            rest = Math.floor(rest / outputShape[j]);\n          }\n\n          if (!isAScalar) {\n            // map outputIndices (which is actually broadcasted) to the originalIndices\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\n            valA = a.get(originalIndicesA);\n          }\n          if (!isBScalar) {\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\n            valB = b.get(originalIndicesB);\n          }\n\n          c.set(outputIndices, op(valA, valB));\n        }\n      }\n\n      return c;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determine the broadcasted dims in input shape based on the given output shape.\n   * Note that this function only returns the broadcasted dims.\n   * @param inputShape The input shape\n   * @param outputShape The output shape\n   * @returns The broadcasted dims in input shape.\n   */\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\n    const inRank = inputShape.length;\n    const dims: number[] = [];\n    for (let i = 0; i < inRank; i++) {\n      const dim = inRank - 1 - i;\n      const a = inputShape[dim] || 1;\n      const b = outputShape[outputShape.length - 1 - i] || 1;\n      if (b > 1 && a === 1) {\n        dims.unshift(dim);\n      }\n    }\n    return dims;\n  }\n}\n\n// copy array helper\n// mimics memcpy as much as possible\nexport function arrayCopyHelper(\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n    blockSize: number) {\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\n    throw new Error('sourceIndex out of bounds');\n  }\n  if (targetIndex < 0 || targetIndex >= target.length) {\n    throw new Error('targetIndex out of bounds');\n  }\n  if (sourceIndex + blockSize > source.length) {\n    throw new Error('source indices to be copied are outside bounds');\n  }\n  if (targetIndex + blockSize > target.length) {\n    throw new Error('target array is too small to hold result');\n  }\n\n  for (let offset = 0; offset < blockSize; offset++) {\n    target[targetIndex + offset] = source[sourceIndex + offset];\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\nexport class ProtoUtil {\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\n    switch (typeProto) {\n      case onnx.TensorProto.DataType.INT8:\n        return 'int8';\n      case onnx.TensorProto.DataType.UINT8:\n        return 'uint8';\n      case onnx.TensorProto.DataType.BOOL:\n        return 'bool';\n      case onnx.TensorProto.DataType.INT16:\n        return 'int16';\n      case onnx.TensorProto.DataType.UINT16:\n        return 'uint16';\n      case onnx.TensorProto.DataType.INT32:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT32:\n        return 'uint32';\n      case onnx.TensorProto.DataType.FLOAT:\n        return 'float32';\n      case onnx.TensorProto.DataType.DOUBLE:\n        return 'float64';\n      case onnx.TensorProto.DataType.STRING:\n        return 'string';\n\n      // For INT64/UINT64, reduce their value to 32-bits.\n      // Should throw exception when overflow\n      case onnx.TensorProto.DataType.INT64:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT64:\n        return 'uint32';\n\n      default:\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\n    }\n  }\n\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\n    switch (type) {\n      case 'int8':\n        return onnx.TensorProto.DataType.INT8;\n      case 'uint8':\n        return onnx.TensorProto.DataType.UINT8;\n      case 'bool':\n        return onnx.TensorProto.DataType.BOOL;\n      case 'int16':\n        return onnx.TensorProto.DataType.INT16;\n      case 'uint16':\n        return onnx.TensorProto.DataType.UINT16;\n      case 'int32':\n        return onnx.TensorProto.DataType.INT32;\n      case 'uint32':\n        return onnx.TensorProto.DataType.UINT32;\n      case 'float32':\n        return onnx.TensorProto.DataType.FLOAT;\n      case 'float64':\n        return onnx.TensorProto.DataType.DOUBLE;\n      case 'string':\n        return onnx.TensorProto.DataType.STRING;\n      case 'int64':\n        return onnx.TensorProto.DataType.INT64;\n      case 'uint64':\n        return onnx.TensorProto.DataType.UINT64;\n\n      default:\n        throw new Error(`unsupported data type: ${type}`);\n    }\n  }\n\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\n    // get rid of Long type for dims\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\n  }\n\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\n    return {\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\n    };\n  }\n\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\n    const dims = [];\n    for (let i = 0; i < tensor.dimsLength(); i++) {\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\n    }\n    return dims;\n  }\n\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\n    const attributes = [];\n    for (let i = 0; i < node.attributesLength(); i++) {\n      attributes.push(node.attributes(i)!);\n    }\n    return attributes;\n  }\n}\n\nexport class LongUtil {\n  static longToNumber(n: Long|flatbuffers.Long|number) {\n    if (Long.isLong(n)) {\n      return n.toNumber();\n    } else if (n instanceof flatbuffers.Long) {\n      return Long.fromValue({low: n.low, high: n.high, unsigned: true}).toNumber();\n    }\n    return n;\n  }\n  static isLong(n: unknown) {\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\n  }\n}\n\nexport class ShapeUtil {\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  // `axis` inclusive\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  // `axis` exclusive\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  static transpose(dims: readonly number[]): readonly number[] {\n    const copy = dims.slice();\n    return copy.reverse();\n  }\n\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\n    if (axis === undefined) {\n      axis = indices.length;\n    }\n    let offset = 0;\n    for (let i = 0; i < axis; ++i) {\n      offset += strides[i] * indices[i];\n    }\n    return offset;\n  }\n\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\n    const rank = strides.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [offset * strides[0]];\n    }\n    const indices: number[] = new Array(strides.length);\n    for (let i = 0; i < indices.length - 1; ++i) {\n      indices[i] = Math.floor(offset / strides[i]);\n      offset -= indices[i] * strides[i];\n    }\n    indices[indices.length - 1] = offset;\n    return indices;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\n  }\n\n  // Increment an index into a tensor (in lexicographic\n  // ordering), wrapping around the specified upper_bound.\n  /**\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\n   * @param index Given index to increment (Will be mutated)\n   * @param dims The dimensions of the tensor for which the given index corresponds to\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\n   */\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\n    if (dims.length === 0 || index.length === 0) {\n      throw new Error('Index incrementing unsupported for scalar Tensor');\n    }\n    if (axisToIncrementOn === undefined) {\n      axisToIncrementOn = dims.length;\n    } else {\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\n        throw new Error('Incorrect axis to increment on');\n      }\n    }\n\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\n      index[k]++;\n      if (index[k] < dims[k]) {\n        break;\n      }\n      index[k] = 0;\n    }\n  }\n\n  /**\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\n   * Used in Reshape\n   * @param originalDims Original Shape array\n   * @param shapeHints array containing values to compute the new dimensions\n   * For example:\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\n   * https://github.com/onnx/onnx/blob/master/docs/Operators.md#Reshape\n   */\n\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\n    // reshape to a Scalar Tensor\n    if (shapeHints.length === 0) {\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\n        return [];\n      } else {\n        throw new Error('cannot reshape to a scalar Tensor');\n      }\n    }\n\n    const nDims = shapeHints.length;\n    const reshapedDims = new Array<number>(nDims);\n    let unknownDimension = -1;\n    let newTensorSize = 1;\n    for (let i = 0; i < nDims; i++) {\n      if (shapeHints[i] < -1) {\n        throw new Error('a dimension in shape hints cannot be less than -1');\n      }\n      if (shapeHints[i] === -1) {\n        if (unknownDimension !== -1) {\n          throw new Error('at most one dimension in shape hints can be -1');\n        }\n        unknownDimension = i;\n      } else {\n        if (shapeHints[i] === 0) {\n          if (i >= originalDims.length) {\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\n          }\n          reshapedDims[i] = originalDims[i];\n        } else {\n          reshapedDims[i] = shapeHints[i];\n        }\n        newTensorSize *= reshapedDims[i];\n      }\n    }\n\n    const oldTensorSize = ShapeUtil.size(originalDims);\n    if (unknownDimension !== -1) {\n      if (oldTensorSize % newTensorSize !== 0) {\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\n            originalDims}] Output shape: [${shapeHints}]`);\n      }\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\n    }\n    // validate sizes from originalDims and reshapedDims match\n    else {\n      if (newTensorSize !== oldTensorSize) {\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\n      }\n    }\n    return reshapedDims;\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n\n  /**\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\n   * @param dims - input `dims` that needs to be checked\n   */\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\n    if (dims.length > 6) {\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\n    }\n    let size = 1;\n    for (const n of dims) {\n      if (!Number.isInteger(n)) {\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\n      }\n      if (n < 0 || n > 2147483647) {\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\n      }\n      size *= n;\n    }\n    return size;\n  }\n\n  /**\n   * Determines the shape of output tensor y = flatten(x, axis)\n   * @param dims - shape of input tensor\n   * @param axis - flatten axis, in the range [-r, r]\n   */\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\n    if (axis < 0) {\n      axis += dims.length;\n    }\n    const total = dims.reduce((x, y) => x * y, 1);\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\n    const outputDims = [total / right, right];\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = squeeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - squeeze axes\n   */\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>();\n\n    // sanity check\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\n\n    for (let i = 0; i < dims.length; i++) {\n      const inSqueezeList = axes.indexOf(i) >= 0;\n      if (inSqueezeList && dims[i] !== 1) {\n        throw new Error('squeeze an axis of size different than 1');\n      }\n\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\n        outputDims.push(dims[i]);\n      }\n    }\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - unsqueeze axes\n   */\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>(dims.length + axes.length);\n\n    // initialize the array elements to 0\n    outputDims.fill(0);\n\n    // set all axes indices to 1 in outputDims and check for duplicates\n    for (let i = 0; i < axes.length; i++) {\n      const axis = ShapeUtil.normalizeAxis(axes[i], dims.length);\n      if (axis >= outputDims.length) {\n        throw new Error('\\'axes\\' has an out of range axis');\n      }\n      if (outputDims[axis] !== 0) {\n        throw new Error('\\'axes\\' has a duplicate axis');\n      }\n\n      outputDims[axis] = 1;\n    }\n\n    // fill in the zero entries of outputDims with the input tensor's shape\n    let inputDimsIterator = 0;\n    for (let i = 0; i < outputDims.length; i++) {\n      if (outputDims[i] === 0) {\n        outputDims[i] = dims[inputDimsIterator++];\n      }\n    }\n\n    // sanity check assertion. 'inputDimsIterator'\n    // should be equal to the length of 'dims'\n    if (inputDimsIterator !== dims.length) {\n      throw new Error('the unsqueezed dimension could not be established');\n    }\n\n    return outputDims;\n  }\n}\n\n// bunch of helper methods that do a variety of math operations\nexport class MathUtil {\n  // y = (x*x) + y\n  static sqr(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\n    }\n  }\n\n  // y = ax + y\n  static axpy(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, alpha: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\n    }\n  }\n\n  // y = pow(x, b)\n  static powx(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, b: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\n    }\n  }\n\n  // y = x * y\n  static mul(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\n    }\n  }\n}\n\nexport class SplitUtil {\n  /**\n   * Calculates new Shapes from existing one and the splits given along the axis provides\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\n   * @param axis The dimension along which the Tensor will be split\n   * @param splits Offsets for the start of each split\n   */\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\n      [number[][], number[]] {\n    if (split.length === 0) {\n      if (!numOutputs) {\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\n      }\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\n    }\n\n    const shapes: number[][] = [];\n    const offsets = [0];\n    for (let i = 0; i < split.length; ++i) {\n      if (i !== 0) {\n        offsets.push(offsets[i - 1] + split[i - 1]);\n      }\n      const shape = dims.slice();\n      shape[axis] = split[i];\n      shapes.push(shape);\n    }\n    return [shapes, offsets];\n  }\n\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\n    if (numElementsAlongAxis % numOutputs !== 0) {\n      throw new Error('cannot split tensor to equal sized parts');\n    }\n    for (let i = 0; i < numOutputs; ++i) {\n      split.push(numElementsAlongAxis / numOutputs);\n    }\n  }\n}\n\nexport class ReduceUtil {\n  /**\n   * Perform reduce operations on the specific operator\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduce(\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\n      op2: (a: number, b: number) => number): Tensor {\n    const dims = a.dims.slice(0);\n    // if axes is not set, perform reduce on all axes\n    if (axes.length === 0) {\n      dims.forEach((d, ind) => axes.push(ind));\n    }\n    // get a temporary broadcastable output shape\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\n\n    // loop through the output and calculate result one by one\n    const size = ShapeUtil.size(outputDims);\n    const y = new Tensor(outputDims, a.type);\n    const strides = ShapeUtil.computeStrides(outputDims);\n    const inputStrides = ShapeUtil.computeStrides(dims);\n    const indicesY = new Array(dims.length);\n    for (let i = 0; i < size; i++) {\n      const indices = ShapeUtil.offsetToIndices(i, strides);\n      // map index\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\n      y.set(\n          indices,\n          ReduceUtil.calcReduceByAxis(\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\n    }\n\n    if (keepdims) {\n      return y;\n    } else {\n      // keepdims == 0, calculate the expected shape\n      return new Tensor(\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\n    }\n  }\n\n  /**\n   * Perform reduce operations on the specific operator on specific axes\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param dims The input dimension.\n   * @param curAxisInd Index in axes specifying the current dimension along\n   *      which the tensor will be reduced\n   * @param pos The current index of element to perform operation\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduceByAxis(\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\n    let res = 0;\n    if (curAxisInd >= axes.length) {\n      return op1(input[pos]);\n    }\n    const axis = axes[curAxisInd];\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\n    for (let i = 0; i < dims[axis]; i++) {\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\n      pos += step;\n    }\n    return res;\n  }\n\n  /**\n   * Calculate the expected shape of a reduce operation\n   * @param dims The input tensor dimension\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   */\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\n    const outputDims = dims.slice();\n    for (let i = 0; i < axes.length; i++) {\n      if (keepDims) {\n        outputDims[axes[i]] = 1;\n      } else {\n        outputDims[axes[i]] = 0;\n      }\n    }\n    return outputDims.filter(dim => dim !== 0);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      pads: number[]) {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n          autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], kernelShape: number[], pads: number[],\n      autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    // TODO: support dilations for pool operators\n    const dilations = new Array<number>(kernelShape.length).fill(1);\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\nimport {OrtWasmMessage, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initWasm = async(): Promise<void> => {\n  if (isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, (scriptSrc as string).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.initOrt(numThreads, loggingLevel);\n  }\n};\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {createSession, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\n\nlet ortInit: boolean;\n\n\nconst getLogLevel = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async loadModel(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!ortInit) {\n      await initOrt(env.wasm.numThreads!, getLogLevel(env.logLevel!));\n      ortInit = true;\n    }\n\n    [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n};\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    if (options?.graphOptimizationLevel === undefined) {\n      sessionOptions.graphOptimizationLevel = 'all';\n    }\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel!);\n\n    if (options?.enableCpuMemArena === undefined) {\n      sessionOptions.enableCpuMemArena = true;\n    }\n\n    if (options?.enableMemPattern === undefined) {\n      sessionOptions.enableMemPattern = true;\n    }\n\n    if (options?.executionMode === undefined) {\n      sessionOptions.executionMode = 'sequential';\n    }\n    const executionMode = getExecutionMode(sessionOptions.executionMode!);\n\n    let logIdDataOffset = 0;\n    if (options?.logId !== undefined) {\n      logIdDataOffset = allocWasmString(options.logId, allocs);\n    }\n\n    if (options?.logSeverityLevel === undefined) {\n      sessionOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      sessionOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.enableProfiling === undefined) {\n      sessionOptions.enableProfiling = false;\n    }\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena!, !!sessionOptions.enableMemPattern!, executionMode,\n        !!sessionOptions.enableProfiling!, 0, logIdDataOffset, sessionOptions.logSeverityLevel!,\n        sessionOptions.logVerbosityLevel!);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    if (options?.executionProviders) {\n      for (const ep of options.executionProviders) {\n        const name = typeof ep === 'string' ? ep : ep.name;\n        if (name === 'webnn') {\n          let devicePreference = 0;\n          let powerPreference = 0;\n          if (typeof ep !== 'string') {\n            const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n            if (webnnOptions?.devicePreference) {\n              devicePreference = webnnOptions.devicePreference;\n            }\n            if (webnnOptions?.powerPreference) {\n              powerPreference = webnnOptions.powerPreference;\n            }\n          }\n          const preferenceValues = [0, 1, 2];\n          if (!preferenceValues.includes(devicePreference)) {\n            throw new Error(\"Invalid devicePerference value, it shoule be one of {0, 1, 2}\");\n          }\n          if (!preferenceValues.includes(powerPreference)) {\n            throw new Error(\"Invalid powerPreference value, it shoule be one of {0, 1, 2}\");\n          }\n          const devicePreferenceNames = [\"Default\", \"GPU\", \"CPU\"];\n          const powerPreferenceNames = [\"Default\", \"High-performance\", \"Low-power\"];\n          console.log(`webnn device preference: ${devicePreferenceNames[devicePreference]}`);\n          console.log(`webnn power preference: ${powerPreferenceNames[powerPreference]}`);\n          if (wasm._OrtSessionOptionsAppendExecutionProviderWebNN(sessionOptionsHandle, devicePreference, powerPreference) !== 0) {\n            throw new Error(`Can't append WebNN execution provider`);\n          }\n          break;\n        }\n      }\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\nimport {SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions: Array<SessionMetadata|undefined> = [];\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n      const modelDataOffset = wasm._malloc(model.byteLength);\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        wasm.HEAPU8.set(model, modelDataOffset);\n        sessionHandle = wasm._OrtCreateSession(modelDataOffset, model.byteLength, sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelDataOffset);\n        wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.push([sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [activeSessions.length - 1, inputNames, outputNames];\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions[sessionId];\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions[sessionId] = undefined;\n};\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nconst enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n\nconst tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\nconst tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int32';\n    case DataType.uint64:\n      return 'uint32';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\nconst numericTensorTypeToTypedArray = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * perform inference run\n */\nexport const run =\n    (sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n     options: InferenceSession.RunOptions): SerializableTensor[] => {\n      const wasm = getInstance();\n      const session = activeSessions[sessionId];\n      if (!session) {\n        throw new Error('invalid session id');\n      }\n      const sessionHandle = session[0];\n      const inputNamesUTF8Encoded = session[1];\n      const outputNamesUTF8Encoded = session[2];\n\n      const inputCount = inputIndices.length;\n      const outputCount = outputIndices.length;\n\n      let runOptionsHandle = 0;\n      let runOptionsAllocs: number[] = [];\n\n      const inputValues: number[] = [];\n      const inputAllocs: number[] = [];\n\n      try {\n        [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n        // create input tensors\n        for (let i = 0; i < inputCount; i++) {\n          const dataType = inputs[i][0];\n          const dims = inputs[i][1];\n          const data = inputs[i][2];\n\n          let dataOffset: number;\n          let dataByteLength: number;\n\n          if (Array.isArray(data)) {\n            // string tensor\n            dataByteLength = 4 * data.length;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < data.length; i++) {\n              if (typeof data[i] !== 'string') {\n                throw new TypeError(`tensor data at index ${i} is not a string`);\n              }\n              wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n            }\n          } else {\n            dataByteLength = data.byteLength;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n            if (tensor === 0) {\n              throw new Error('Can\\'t create a tensor');\n            }\n            inputValues.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        }\n\n        const beforeRunStack = wasm.stackSave();\n        const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n        const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n        const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n        const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n        try {\n          let inputValuesIndex = inputValuesOffset / 4;\n          let inputNamesIndex = inputNamesOffset / 4;\n          let outputValuesIndex = outputValuesOffset / 4;\n          let outputNamesIndex = outputNamesOffset / 4;\n          for (let i = 0; i < inputCount; i++) {\n            wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n            wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n          }\n          for (let i = 0; i < outputCount; i++) {\n            wasm.HEAPU32[outputValuesIndex++] = 0;\n            wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n          }\n\n          // support RunOptions\n          let errorCode = wasm._OrtRun(\n              sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n              outputValuesOffset, runOptionsHandle);\n\n          const output: SerializableTensor[] = [];\n\n          if (errorCode === 0) {\n            for (let i = 0; i < outputCount; i++) {\n              const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n              const beforeGetTensorDataStack = wasm.stackSave();\n              // stack allocate 4 pointer value\n              const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n              let type: Tensor.Type|undefined, dataOffset = 0;\n              try {\n                errorCode = wasm._OrtGetTensorData(\n                    tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n                if (errorCode !== 0) {\n                  throw new Error(`Can't get a tensor data. error code = ${errorCode}`);\n                }\n                let tensorDataIndex = tensorDataOffset / 4;\n                const dataType = wasm.HEAPU32[tensorDataIndex++];\n                dataOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n                const dims = [];\n                for (let i = 0; i < dimsLength; i++) {\n                  dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n                }\n                wasm._OrtFree(dimsOffset);\n\n                const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n                type = tensorDataTypeEnumToString(dataType);\n                if (type === 'string') {\n                  const stringData: string[] = [];\n                  let dataIndex = dataOffset / 4;\n                  for (let i = 0; i < size; i++) {\n                    const offset = wasm.HEAPU32[dataIndex++];\n                    const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                    stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n                  }\n                  output.push([type, dims, stringData]);\n                } else {\n                  const typedArrayConstructor = numericTensorTypeToTypedArray(type);\n                  const data = new typedArrayConstructor(size);\n                  new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                      .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n                  output.push([type, dims, data]);\n                }\n              } finally {\n                wasm.stackRestore(beforeGetTensorDataStack);\n                if (type === 'string' && dataOffset) {\n                  wasm._free(dataOffset);\n                }\n                wasm._OrtReleaseTensor(tensor);\n              }\n            }\n          }\n\n          if (errorCode === 0) {\n            return output;\n          } else {\n            throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n          }\n        } finally {\n          wasm.stackRestore(beforeRunStack);\n        }\n      } finally {\n        inputValues.forEach(wasm._OrtReleaseTensor);\n        inputAllocs.forEach(wasm._free);\n\n        wasm._OrtReleaseRunOptions(runOptionsHandle);\n        runOptionsAllocs.forEach(wasm._free);\n      }\n    };\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions[sessionId];\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\nimport ortWasmFactoryThreaded from './binding/ort-wasm-threaded.js';\nimport ortWasmFactory from './binding/ort-wasm.js';\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n    return WebAssembly.validate(new Uint8Array(\n        [0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 9, 1, 7, 0, 65, 0, 253, 15, 26, 11]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPrefixOverride = typeof flags.wasmPaths === 'string' ? flags.wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(false, useThreads);\n  const wasmOverrideFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof flags.wasmPaths === 'object' ? flags.wasmPaths[wasmOverrideFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (fileName.endsWith('.worker.js') && typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName === wasmFileName) {\n          const prefix: string = wasmPrefixOverride ?? scriptDirectory;\n          return wasmPathOverride ?? prefix + wasmOverrideFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode =\n            `var ortWasmThreaded=(function(){var _scriptDir;return ${ortWasmFactoryThreaded.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nimport worker from \"!!../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.9.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n(()=>{var e={474:(e,t,n)=>{var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(e){function t(){return R.buffer!=I&&Z(R.buffer),U}function r(){return R.buffer!=I&&Z(R.buffer),G}function i(){return R.buffer!=I&&Z(R.buffer),L}function o(){return R.buffer!=I&&Z(R.buffer),W}function a(){return R.buffer!=I&&Z(R.buffer),N}function u(){return R.buffer!=I&&Z(R.buffer),H}var c,s,f;e=e||{},c||(c=void 0!==e?e:{}),c.ready=new Promise((function(e,t){s=e,f=t}));var l,d={};for(l in c)c.hasOwnProperty(l)&&(d[l]=c[l]);var p=\\\"./this.program\\\";function h(e,t){throw t}var g,m,b,y,v,w=\\\"object\\\"==typeof window,_=\\\"function\\\"==typeof importScripts,O=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,A=c.ENVIRONMENT_IS_PTHREAD||!1,E=\\\"\\\";function T(e){return c.locateFile?c.locateFile(e,E):E+e}if(O){if(E=_?n(908).dirname(E)+\\\"/\\\":\\\"//\\\",g=function(e,t){return y||(y=n(384)),v||(v=n(908)),e=v.normalize(e),y.readFileSync(e,t?null:\\\"utf8\\\")},b=function(e){return(e=g(e,!0)).buffer||(e=new Uint8Array(e)),B(e.buffer),e},m=function(e,t,r){y||(y=n(384)),v||(v=n(908)),e=v.normalize(e),y.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){if(!(e instanceof yn))throw e})),process.on(\\\"unhandledRejection\\\",de),h=function(e,t){if(ae())throw process.exitCode=e,t;process.exit(e)},c.inspect=function(){return\\\"[Emscripten Module object]\\\"},void 0===n.g.Worker){var S;try{S=n(925)}catch(e){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=S.Worker}}else(w||_)&&(_?E=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(E=document.currentScript.src),_scriptDir&&(E=_scriptDir),E=0!==E.indexOf(\\\"blob:\\\")?E.substr(0,E.lastIndexOf(\\\"/\\\")+1):\\\"\\\",O?(g=function(e,t){return y||(y=n(384)),v||(v=n(908)),e=v.normalize(e),y.readFileSync(e,t?null:\\\"utf8\\\")},b=function(e){return(e=g(e,!0)).buffer||(e=new Uint8Array(e)),B(e.buffer),e},m=function(e,t,r){y||(y=n(384)),v||(v=n(908)),e=v.normalize(e),y.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))}):(g=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},_&&(b=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),m=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));O&&\\\"undefined\\\"==typeof performance&&(n.g.performance=n(953).performance);var M,x,k=c.print||console.log.bind(console),D=c.printErr||console.warn.bind(console);for(l in d)d.hasOwnProperty(l)&&(c[l]=d[l]);d=null,c.thisProgram&&(p=c.thisProgram),c.quit&&(h=c.quit),c.wasmBinary&&(x=c.wasmBinary);var P=c.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&de(\\\"no native wasm support detected\\\");var R,C,z,j=!1;function B(e,t){e||de(\\\"Assertion failed: \\\"+t)}function F(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var I,U,G,L,W,N,H,Y=\\\"undefined\\\"!=typeof TextDecoder?new F(\\\"utf8\\\"):void 0;function V(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&Y)return Y.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var i=e[t++];if(128&i){var o=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|o);else{var a=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|o<<6|a:(7&i)<<18|o<<12|a<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function q(e,t){return e?V(r(),e,t):\\\"\\\"}function $(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var o=0;o<e.length;++o){var a=e.charCodeAt(o);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++o)),127>=a){if(n>=r)break;t[n++]=a}else{if(2047>=a){if(n+1>=r)break;t[n++]=192|a>>6}else{if(65535>=a){if(n+2>=r)break;t[n++]=224|a>>12}else{if(n+3>=r)break;t[n++]=240|a>>18,t[n++]=128|a>>12&63}t[n++]=128|a>>6&63}t[n++]=128|63&a}}return t[n]=0,n-i}function X(e,t,n){return $(e,r(),t,n)}function J(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function Q(e){var n=J(e)+1,r=Yt(n);return r&&$(e,t(),r,n),r}function Z(e){I=e,c.HEAP8=U=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=L=new Int32Array(e),c.HEAPU8=G=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=W=new Uint32Array(e),c.HEAPF32=N=new Float32Array(e),c.HEAPF64=H=new Float64Array(e)}\\\"undefined\\\"!=typeof TextDecoder&&new F(\\\"utf-16le\\\"),A&&(I=c.buffer);var K=c.INITIAL_MEMORY||16777216;if(A)R=c.wasmMemory,I=c.buffer;else if(c.wasmMemory)R=c.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:K/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw D(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),O&&console.log(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\\\"),Error(\\\"bad memory\\\");R&&(I=R.buffer),K=I.byteLength,Z(I);var ee,te=[],ne=[],re=[],ie=[],oe=0;function ae(){return P||0<oe}function ue(){var e=c.preRun.shift();te.unshift(e)}var ce,se=0,fe=null,le=null;function de(e){throw c.onAbort&&c.onAbort(e),B(!A),D(e),j=!0,z=1,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),f(e),e}function pe(){return ce.startsWith(\\\"data:application/octet-stream;base64,\\\")}function he(){var e=ce;try{if(e==ce&&x)return new Uint8Array(x);if(b)return b(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){de(e)}}c.preloadedImages={},c.preloadedAudios={},ce=\\\"ort-wasm-threaded.wasm\\\",pe()||(ce=T(ce));var ge={1000260:function(){throw\\\"Canceled!\\\"}};function me(e){for(;0<e.length;){var t=e.shift();if(\\\"function\\\"==typeof t)t(c);else{var n=t.Rc;\\\"number\\\"==typeof n?void 0===t.jc?ee.get(n)():ee.get(n)(t.jc):n(void 0===t.jc?null:t.jc)}}}function be(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var r=Atomics.load(i(),bn>>2),o=0;if(r==e&&Atomics.compareExchange(i(),bn>>2,r,0)==r&&(o=1,0>=--n))return 1;if(0<=(e=Atomics.notify(i(),e>>2,n)))return e+o;throw\\\"Atomics.notify returned an unexpected value \\\"+e}function ye(e){if(A)throw\\\"Internal Error! cleanupThread() can only ever be called from main application thread!\\\";if(!e)throw\\\"Internal Error! Null pthread_ptr in cleanupThread!\\\";var t=we.dc[e];t&&(i()[e+12>>2]=0,we.vc(t.worker))}c._emscripten_futex_wake=be;var ve,we={hc:[],fc:[],Dc:[],Dd:function(){},Vc:function(){for(var e=Yt(228),t=0;57>t;++t)o()[e/4+t]=0;i()[e+12>>2]=e,t=e+152,i()[t>>2]=t;var n=Yt(512);for(t=0;128>t;++t)o()[n/4+t]=0;Atomics.store(o(),e+100>>2,n),Atomics.store(o(),e+40>>2,e),on(e,!_,1),Jt(e)},Wc:function(){we.receiveObjectTransfer=we.bd,we.threadInit=we.nd,we.threadCancel=we.md,we.threadExit=we.Lc,we.setExitStatus=we.dd},dc:{},Cc:[],Ic:function(){for(;0<we.Cc.length;)we.Cc.pop()();un()},Jc:function(e,t){Atomics.store(o(),e+56>>2,1),Atomics.store(o(),e+60>>2,0),we.Ic(),Atomics.store(o(),e+4>>2,t),Atomics.store(o(),e+0>>2,1),be(e+0,2147483647),on(0,0,0)},dd:function(e){z=e},Lc:function(e){var t=$t();t&&(we.Jc(t,e),A&&postMessage({cmd:\\\"exit\\\"}))},md:function(){we.Jc($t(),-1),postMessage({cmd:\\\"cancelDone\\\"})},Kc:function(){for(var e in we.dc){var t=we.dc[e];t&&t.worker&&we.vc(t.worker)}for(we.dc={},e=0;e<we.hc.length;++e){var n=we.hc[e];n.terminate()}for(we.hc=[],e=0;e<we.fc.length;++e)t=(n=we.fc[e]).cc,we.Ac(t),n.terminate();we.fc=[]},Ac:function(e){if(e){if(e.ec){var t=i()[e.ec+100>>2];i()[e.ec+100>>2]=0,qt(t),qt(e.ec)}e.ec=0,e.zc&&e.ic&&qt(e.ic),e.ic=0,e.worker&&(e.worker.cc=null)}},vc:function(e){we.cd((function(){delete we.dc[e.cc.ec],we.hc.push(e),we.fc.splice(we.fc.indexOf(e),1),we.Ac(e.cc),e.cc=void 0}))},cd:function(e){i()[mn>>2]=0;try{e()}finally{i()[mn>>2]=1}},bd:function(){},nd:function(){for(var e in we.Dc)we.Dc[e]()},Yc:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.cc&&(we.Pc=e.cc.ec),r.targetThread&&r.targetThread!=$t()){var u=we.dc[r.Jd];u?u.worker.postMessage(n.data,r.transferList):D('Internal error! Worker sent a message \\\"'+a+'\\\" to target pthread '+r.targetThread+\\\", but that thread no longer exists!\\\")}else if(\\\"processQueuedMainThreadWork\\\"===a)Kt();else if(\\\"spawnThread\\\"===a)Ee(n.data);else if(\\\"cleanupThread\\\"===a)ye(r.thread);else if(\\\"killThread\\\"===a){if(n=r.thread,A)throw\\\"Internal Error! killThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in killThread!\\\";i()[n+12>>2]=0,r=we.dc[n],delete we.dc[n],r.worker.terminate(),we.Ac(r),we.fc.splice(we.fc.indexOf(r.worker),1),r.worker.cc=void 0}else if(\\\"cancelThread\\\"===a){if(n=r.thread,A)throw\\\"Internal Error! cancelThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in cancelThread!\\\";we.dc[n].worker.postMessage({cmd:\\\"cancel\\\"})}else if(\\\"loaded\\\"===a)e.loaded=!0,t&&t(e),e.pc&&(e.pc(),delete e.pc);else if(\\\"print\\\"===a)k(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"printErr\\\"===a)D(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"alert\\\"===a)alert(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"exit\\\"===a)e.cc&&Atomics.load(o(),e.cc.ec+64>>2)&&we.vc(e);else if(\\\"exitProcess\\\"===a)try{wn(r.returnCode)}catch(e){if(e instanceof yn)return;throw e}else\\\"cancelDone\\\"===a?we.vc(e):\\\"objectTransfer\\\"!==a&&(\\\"setimmediate\\\"===n.data.target?e.postMessage(n.data):D(\\\"worker sent an unknown command \\\"+a));we.Pc=void 0},e.onerror=function(e){D(\\\"pthread sent an error! \\\"+e.filename+\\\":\\\"+e.lineno+\\\": \\\"+e.message)},O&&void 0!==e.on&&(e.on(\\\"message\\\",(function(t){e.onmessage({data:t})})),e.on(\\\"error\\\",(function(t){e.onerror(t)})),e.on(\\\"exit\\\",(function(){}))),e.postMessage({cmd:\\\"load\\\",urlOrBlob:c.mainScriptUrlOrBlob||_scriptDir,wasmMemory:R,wasmModule:C})},Mc:function(){var e=T(\\\"ort-wasm-threaded.worker.js\\\");we.hc.push(new Worker(e))},Sc:function(){return 0==we.hc.length&&(we.Mc(),we.Yc(we.hc[0])),we.hc.pop()},td:function(e){for(e=performance.now()+e;performance.now()<e;);}};function _e(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return i()[Vt()>>2]=28,-1;e=ve()}return i()[t>>2]=e/1e3|0,i()[t+4>>2]=e%1e3*1e6|0,0}function Oe(e,t){if(A)return qe(1,1,e,t);re.unshift({Rc:e,jc:t})}function Ae(e){this.nc=e-16,this.kd=function(e){i()[this.nc+4>>2]=e},this.gd=function(e){i()[this.nc+8>>2]=e},this.hd=function(){i()[this.nc>>2]=0},this.ed=function(){t()[this.nc+12>>0]=0},this.jd=function(){t()[this.nc+13>>0]=0},this.Tc=function(e,t){this.kd(e),this.gd(t),this.hd(),this.ed(),this.jd()}}function Ee(e){if(A)throw\\\"Internal Error! spawnThread() can only ever be called from main application thread!\\\";var t=we.Sc();if(!t)return 6;if(void 0!==t.cc)throw\\\"Internal error!\\\";if(!e.uc)throw\\\"Internal error, no pthread ptr!\\\";we.fc.push(t);for(var n=Yt(512),r=0;128>r;++r)i()[n+4*r>>2]=0;var a=e.ic+e.kc,u=(r=we.dc[e.uc]={worker:t,ic:e.ic,kc:e.kc,zc:e.zc,ec:e.uc}).ec>>2;Atomics.store(o(),u+16,e.detached),Atomics.store(o(),u+25,n),Atomics.store(o(),u+10,r.ec),Atomics.store(o(),u+20,e.kc),Atomics.store(o(),u+19,a),Atomics.store(o(),u+26,e.kc),Atomics.store(o(),u+28,a),Atomics.store(o(),u+29,e.detached),n=an()+40,Atomics.store(o(),u+43,n),t.cc=r;var c={cmd:\\\"run\\\",start_routine:e.ld,arg:e.jc,threadInfoStruct:e.uc,stackBase:e.ic,stackSize:e.kc};return t.pc=function(){c.time=performance.now(),t.postMessage(c,e.sd)},t.loaded&&(t.pc(),delete t.pc),0}function Te(e,n,r){if(0>=e||e>t().length||1&e)return-28;if(w){if(Atomics.load(i(),e>>2)!=n)return-6;var o=performance.now();for(r=o+r,Atomics.exchange(i(),bn>>2,e);;){if((o=performance.now())>r)return Atomics.exchange(i(),bn>>2,0),-73;if(0==(o=Atomics.exchange(i(),bn>>2,0)))break;if(Kt(),Atomics.load(i(),e>>2)!=n)return-6;Atomics.exchange(i(),bn>>2,e)}return 0}if(\\\"timed-out\\\"===(e=Atomics.wait(i(),e>>2,n,r)))return-73;if(\\\"not-equal\\\"===e)return-6;if(\\\"ok\\\"===e)return 0;throw\\\"Atomics.wait returned an unexpected value \\\"+e}function Se(){O||_||(M||(M={}),M[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]||(M[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]=1,D(\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\")))}c.establishStackSpace=function(e,t){hn(e,t),dn(e)},c.invokeEntryPoint=function(e,t){return ee.get(e)(t)},ve=O?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:A?function(){return performance.now()-c.__performance_now_clock_drift}:function(){return performance.now()};var Me={},xe=[null,[],[]];function ke(e,t){var n=xe[e];0===t||10===t?((1===e?k:D)(V(n,0)),n.length=0):n.push(t)}var De={};function Pe(e,t){return A?qe(2,1,e,t):(e=q(e),De.xd(e,t))}function Re(e,t,n){return A?qe(3,1,e,t,n):0}function Ce(e,t){if(A)return qe(4,1,e,t)}function ze(e,t,n){if(A)return qe(5,1,e,t,n)}function je(e,t,n){return A?qe(6,1,e,t,n):0}function Be(e,t){if(A)return qe(7,1,e,t)}function Fe(e,t){return A?qe(8,1,e,t):(e=q(e),De.yd(e,t))}function Ie(e,t,n,i,o,a){if(A)t=qe(9,1,e,t,n,i,o,a);else if(a<<=12,0!=(16&i)&&0!=e%65536)t=-28;else if(0!=(32&i)){var u=65536*Math.ceil(t/65536);(e=gn(65536,u))?r().fill(0,e,e+u):e=0,e?(Me[e]={$c:e,Xc:t,Nc:!0,fd:o,Gd:n,flags:i,offset:a},t=e):t=-48}else t=-52;return t}function Ue(e,t){if(A)e=qe(10,1,e,t);else{var n=Me[e];0!==t&&n?(t===n.Xc&&(Me[e]=null,n.Nc&&qt(n.$c)),e=0):e=-28}return e}function Ge(e,t,n){if(A)return qe(11,1,e,t,n)}function Le(e,t,n){return A?qe(12,1,e,t,n):(e=q(e),De.zd(e,t,n))}function We(e){if(A)return qe(13,1,e)}function Ne(e,t){if(A)return qe(14,1,e,t)}function He(e){if(A)return qe(15,1,e)}function Ye(){if(A)return qe(16,1);de()}var Ve=[];function qe(e,t){for(var n=arguments.length-2,r=ln(),i=pn(8*n),o=i>>3,a=0;a<n;a++){var c=arguments[2+a];u()[o+a]=c}return n=en(e,n,i,t),dn(r),n}var $e=[],Xe=[0,\\\"undefined\\\"!=typeof document?document:0,\\\"undefined\\\"!=typeof window?window:0];function Je(e){return e=2<e?q(e):e,Xe[e]||(\\\"undefined\\\"!=typeof document?document.querySelector(e):void 0)}function Qe(e,t,n){var r=Je(e);if(!r)return-4;if(r.tc&&(i()[r.tc>>2]=t,i()[r.tc+4>>2]=n),!r.Hc&&r.vd){if(r.tc){r=i()[r.tc+8>>2],e=e?q(e):\\\"\\\";var o=ln(),a=pn(12),u=0;if(e){u=J(e)+1;var c=Yt(u);X(e,c,u),u=c}return i()[a>>2]=u,i()[a+4>>2]=t,i()[a+8>>2]=n,tn(0,r,657457152,0,u,a),dn(o),1}return-4}return r.Hc&&(r=r.Hc),e=!1,r.sc&&r.sc.rc&&(e=0===(e=r.sc.rc.getParameter(2978))[0]&&0===e[1]&&e[2]===r.width&&e[3]===r.height),r.width=t,r.height=n,e&&r.sc.rc.viewport(0,0,t,n),0}function Ze(e,t,n){return A?qe(17,1,e,t,n):Qe(e,t,n)}var Ke=[\\\"default\\\",\\\"low-power\\\",\\\"high-performance\\\"],et=[\\\"explicit\\\",\\\"same-upper\\\",\\\"same-lower\\\"],tt=[\\\"iohw\\\",\\\"hwoi\\\",\\\"ohwi\\\"],nt=[\\\"oihw\\\",\\\"hwio\\\",\\\"ohwi\\\",\\\"ihwo\\\"],rt=[\\\"nchw\\\",\\\"nhwc\\\"],it=[\\\"nearest-neighbor\\\",\\\"linear\\\"],ot=\\\"float32 float16 int32 uint32 int8 uint8\\\".split(\\\" \\\"),at=[\\\"forward\\\",\\\"backward\\\",\\\"both\\\"],ut=[\\\"zrn\\\",\\\"rzn\\\"],ct=[\\\"floor\\\",\\\"ceil\\\"];function st(e,t){if(0!==e&&0!==t){for(var n=[],r=0;r<e;++r,t+=4)n.push(i()[t>>2]);return n}}function ft(e,t=\\\"float32\\\"){const n=i()[e>>2]+o()[e+8>>2];return e=o()[e+4>>2],B(\\\"float32\\\"===t),new Float32Array(r().buffer,n,e/Float32Array.BYTES_PER_ELEMENT)}function lt(e){return{minValue:a()[e>>2],maxValue:a()[e+4>>2]}}function dt(e){return{alpha:a()[e>>2]}}function pt(e){return{type:ot[o()[e>>2]],dimensions:st(o()[e+8>>2],i()[e+4>>2])}}function ht(e){return{windowDimensions:st(o()[e>>2],i()[e+4>>2]),padding:\\\"explicit\\\"===et[i()[e+32>>2]]?st(o()[e+8>>2],i()[e+12>>2]):void 0,strides:st(o()[e+16>>2],i()[e+20>>2]),dilations:st(o()[e+24>>2],i()[e+28>>2]),autoPad:et[i()[e+32>>2]],layout:rt[i()[e+36>>2]],roundingType:ct[i()[e+40>>2]],outputSizes:st(o()[e+44>>2],i()[e+48>>2])}}var gt,mt,bt,yt,vt,wt,_t,Ot,At,Et,Tt,St,Mt={};function xt(){if(!St){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:p||\\\"./this.program\\\"};for(e in Mt)void 0===Mt[e]?delete t[e]:t[e]=Mt[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);St=n}return St}function kt(e,n){if(A)return qe(18,1,e,n);var r=0;return xt().forEach((function(o,a){var u=n+r;for(a=i()[e+4*a>>2]=u,u=0;u<o.length;++u)t()[a++>>0]=o.charCodeAt(u);t()[a>>0]=0,r+=o.length+1})),0}function Dt(e,t){if(A)return qe(19,1,e,t);var n=xt();i()[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),i()[t>>2]=r,0}function Pt(e){return A?qe(20,1,e):0}function Rt(e,n){return A?qe(21,1,e,n):(e=1==e||2==e?2:de(),t()[n>>0]=e,0)}function Ct(e,t,n,r){return A?qe(22,1,e,t,n,r):(e=De.Bd(e),t=De.Ad(e,t,n),i()[r>>2]=t,0)}function zt(e,t,n,r,i){if(A)return qe(23,1,e,t,n,r,i)}function jt(e,t,n,o){if(A)return qe(24,1,e,t,n,o);for(var a=0,u=0;u<n;u++){for(var c=i()[t+8*u>>2],s=i()[t+(8*u+4)>>2],f=0;f<s;f++)ke(e,r()[c+f]);a+=s}return i()[o>>2]=a,0}function Bt(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(A)return qe(25,1);if(!Bt.Oc){Bt.Oc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var o=r.getTimezoneOffset(),a=Math.max(t,o);i()[fn()>>2]=60*a,i()[sn()>>2]=Number(t!=o),n=e(n),r=e(r),n=Q(n),r=Q(r),o<t?(i()[cn()>>2]=n,i()[cn()+4>>2]=r):(i()[cn()>>2]=r,i()[cn()+4>>2]=n)}}function Ft(e){return 0==e%4&&(0!=e%100||0==e%400)}function It(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Ut=[31,29,31,30,31,30,31,31,30,31,30,31],Gt=[31,28,31,30,31,30,31,31,30,31,30,31];function Lt(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(Ft(e.getFullYear())?Ut:Gt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Wt(e,n,r,o){function a(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function u(e,t){return a(e,t,\\\"0\\\")}function c(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function f(e){e=Lt(new Date(e.bc+1900,0,1),e.yc);var t=new Date(e.getFullYear()+1,0,4),n=s(new Date(e.getFullYear(),0,4));return t=s(t),0>=c(n,e)?0>=c(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=i()[o+40>>2];for(var d in o={qd:i()[o>>2],pd:i()[o+4>>2],wc:i()[o+8>>2],qc:i()[o+12>>2],lc:i()[o+16>>2],bc:i()[o+20>>2],xc:i()[o+24>>2],yc:i()[o+28>>2],Kd:i()[o+32>>2],od:i()[o+36>>2],rd:l?q(l):\\\"\\\"},r=q(r),l={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(d,\\\"g\\\"),l[d]);var p=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),h=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(d in l={\\\"%a\\\":function(e){return p[e.xc].substring(0,3)},\\\"%A\\\":function(e){return p[e.xc]},\\\"%b\\\":function(e){return h[e.lc].substring(0,3)},\\\"%B\\\":function(e){return h[e.lc]},\\\"%C\\\":function(e){return u((e.bc+1900)/100|0,2)},\\\"%d\\\":function(e){return u(e.qc,2)},\\\"%e\\\":function(e){return a(e.qc,2,\\\" \\\")},\\\"%g\\\":function(e){return f(e).toString().substring(2)},\\\"%G\\\":function(e){return f(e)},\\\"%H\\\":function(e){return u(e.wc,2)},\\\"%I\\\":function(e){return 0==(e=e.wc)?e=12:12<e&&(e-=12),u(e,2)},\\\"%j\\\":function(e){return u(e.qc+It(Ft(e.bc+1900)?Ut:Gt,e.lc-1),3)},\\\"%m\\\":function(e){return u(e.lc+1,2)},\\\"%M\\\":function(e){return u(e.pd,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.wc&&12>e.wc?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return u(e.qd,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.xc||7},\\\"%U\\\":function(e){var t=new Date(e.bc+1900,0,1),n=0===t.getDay()?t:Lt(t,7-t.getDay());return 0>c(n,e=new Date(e.bc+1900,e.lc,e.qc))?u(Math.ceil((31-n.getDate()+(It(Ft(e.getFullYear())?Ut:Gt,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.bc+1901,0,4),n=s(new Date(e.bc+1900,0,4));t=s(t);var r=Lt(new Date(e.bc+1900,0,1),e.yc);return 0>c(r,n)?\\\"53\\\":0>=c(t,r)?\\\"01\\\":u(Math.ceil((n.getFullYear()<e.bc+1900?e.yc+32-n.getDate():e.yc+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.xc},\\\"%W\\\":function(e){var t=new Date(e.bc,0,1),n=1===t.getDay()?t:Lt(t,0===t.getDay()?1:7-t.getDay()+1);return 0>c(n,e=new Date(e.bc+1900,e.lc,e.qc))?u(Math.ceil((31-n.getDate()+(It(Ft(e.getFullYear())?Ut:Gt,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.bc+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.bc+1900},\\\"%z\\\":function(e){var t=0<=(e=e.od);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.rd},\\\"%%\\\":function(){return\\\"%\\\"}})r.includes(d)&&(r=r.replace(new RegExp(d,\\\"g\\\"),l[d](o)));return(d=function(e){var t=Array(J(e)+1);return $(e,t,0,t.length),t}(r)).length>n?0:(function(e,n){t().set(e,n)}(d,e),d.length-1)}gt||(gt=gt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},mt=mt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},bt=bt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},yt=yt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},vt=vt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},wt=wt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},_t=_t||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},Ot=Ot||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},At=At||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},Et=Et||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}},Tt=Tt||{mc:{},ad:1,create:function(e,t){t=t||{};var n=this.ad++;return t.Bc=1,t.object=e,this.mc[n]=t,n},get:function(e){if(0!==e)return this.mc[e].object},oc:function(e){this.mc[e].Bc++},release:function(e){var t=this.mc[e];t.Bc--,0>=t.Bc&&delete this.mc[e]}});var Nt=[null,Oe,Pe,Re,Ce,ze,je,Be,Fe,Ie,Ue,Ge,Le,We,Ne,He,Ye,Ze,kt,Dt,Pt,Rt,Ct,zt,jt,Bt],Ht={h:function(e,t,n,r){de(\\\"Assertion failed: \\\"+q(e)+\\\", at: \\\"+[t?q(t):\\\"unknown filename\\\",n,r?q(r):\\\"unknown function\\\"])},cb:function(e,t){return _e(e,t)},b:function(e){return Yt(e+16)+16},d:function(e,t){return Oe(e,t)},e:function(e,t){we.Cc.push((function(){ee.get(e)(t)}))},c:function(e,t,n){throw new Ae(e).Tc(t,n),e},I:function(e,t,n,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return D(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;if(!e)return D(\\\"pthread_create called with a null thread pointer!\\\"),28;var a=[];if(A&&0===a.length)return Zt(687865856,e,t,n,r);var u=0,c=0;if(t&&-1!=t){var s=i()[t>>2];s+=81920,u=i()[t+8>>2],c=0!==i()[t+12>>2]}else s=2097152;(t=0==u)?u=gn(16,s):B(0<(u-=s));for(var f=Yt(228),l=0;57>l;++l)o()[(f>>2)+l]=0;return i()[e>>2]=f,i()[f+12>>2]=f,e=f+152,i()[e>>2]=e,n={ic:u,kc:s,zc:t,detached:c,ld:n,uc:f,jc:r,sd:a},A?(n.ud=\\\"spawnThread\\\",postMessage(n,a),0):Ee(n)},G:function(e){throw A?we.Lc(e):(we.Ic(),wn(e)),\\\"unwind\\\"},H:function(e,t){return function(e,t){if(!e)return D(\\\"pthread_join attempted on a null thread pointer!\\\"),71;if(A&&$t()==e)return D(\\\"PThread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(!A&&Qt()==e)return D(\\\"Main thread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(i()[e+12>>2]!==e)return D(\\\"pthread_join attempted on thread \\\"+e+\\\", which does not point to a valid thread, or does not exist anymore!\\\"),71;if(Atomics.load(o(),e+64>>2))return D(\\\"Attempted to join thread \\\"+e+\\\", which was already detached!\\\"),28;for(Se();;){var n=Atomics.load(o(),e+0>>2);if(1==n)return n=Atomics.load(o(),e+4>>2),t&&(i()[t>>2]=n),Atomics.store(o(),e+64>>2,1),A?postMessage({cmd:\\\"cleanupThread\\\",thread:e}):ye(e),0;nn(),A||Kt(),Te(e+0,n,A?100:1)}}(e,t)},z:Pe,y:Re,C:Ce,gb:ze,s:function(){return 42},_a:je,A:Be,D:Fe,F:Ie,E:Ue,q:Ge,fb:Le,db:We,t:Ne,eb:He,P:function(e,t){if(e==t)postMessage({cmd:\\\"processQueuedMainThreadWork\\\"});else if(A)postMessage({targetThread:e,cmd:\\\"processThreadQueue\\\"});else{if(!(e=(e=we.dc[e])&&e.worker))return;e.postMessage({cmd:\\\"processThreadQueue\\\"})}return 1},f:Ye,w:_e,Va:function(e,t){return e-t},S:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},m:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},ba:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},N:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Q:function(e,t,n){var o;for(Ve.length=0,n>>=2;o=r()[t++];)(o=105>o)&&1&n&&n++,Ve.push(o?u()[n++>>1]:i()[n]),++n;return ge[e].apply(null,Ve)},Za:Se,n:function(){},k:Te,j:be,B:function(){return 2147483648},i:ve,Xa:function(e,t,n){r().copyWithin(e,t,t+n)},o:function(){return O?n(993).cpus().length:navigator.hardwareConcurrency},L:function(e,t,n){$e.length=t,n>>=3;for(var r=0;r<t;r++)$e[r]=u()[n+r];return(0>e?ge[-e-1]:Nt[e]).apply(null,$e)},Ya:function(e){var t=r().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var n=1;4>=n;n*=2){var i=t*(1+.2/n);i=Math.min(i,e+100663296),0<(i=Math.max(e,i))%65536&&(i+=65536-i%65536);e:{try{R.grow(Math.min(2147483648,i)-I.byteLength+65535>>>16),Z(R.buffer);var o=1;break e}catch(e){}o=void 0}if(o)return!0}return!1},M:function(e,t,n){return Je(e)?Qe(e,t,n):Ze(e,t,n)},v:function(){},K:function(e,t,n){return oe+=1,setTimeout((function(){--oe,function(e){if(!j){try{e()}catch(e){if(e instanceof yn)return;if(\\\"unwind\\\"!==e)throw e&&\\\"object\\\"==typeof e&&e.stack&&D(\\\"exception thrown: \\\"+[e,e.stack]),e}if(!ae())try{A?rn(z):wn(z)}catch(e){if(!(e instanceof yn))throw e}}}((function(){ee.get(e)(n)}))}),t)},O:function(e,t){t>>=2;var n=i()[t+6];return t={alpha:!!i()[t],depth:!!i()[t+1],stencil:!!i()[t+2],antialias:!!i()[t+3],premultipliedAlpha:!!i()[t+4],preserveDrawingBuffer:!!i()[t+5],powerPreference:Ke[n],failIfMajorPerformanceCaveat:!!i()[t+7],Zc:i()[t+8],Ed:i()[t+9],Fc:i()[t+10],Qc:i()[t+11],Hd:i()[t+12],Id:i()[t+13]},!(e=Je(e))||t.Qc?0:function(e,t){e.Gc||(e.Gc=e.getContext,e.getContext=function(t,n){return\\\"webgl\\\"==t==(n=e.Gc(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\\\"webgl\\\",t);return n?function(e,t){var n=Yt(8);i()[n+4>>2]=$t();var r={Cd:n,attributes:t,version:t.Zc,rc:e};return e.canvas&&(e.canvas.sc=r),(void 0===t.Fc||t.Fc)&&function(e){if(e||(e=void 0),!e.Uc){e.Uc=!0;var t=e.rc;!function(e){var t=e.getExtension(\\\"ANGLE_instanced_arrays\\\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,i){t.drawArraysInstancedANGLE(e,n,r,i)},e.drawElementsInstanced=function(e,n,r,i,o){t.drawElementsInstancedANGLE(e,n,r,i,o)})}(t),function(e){var t=e.getExtension(\\\"OES_vertex_array_object\\\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\\\"WEBGL_draw_buffers\\\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.wd=t.getExtension(\\\"EXT_disjoint_timer_query\\\"),t.Fd=t.getExtension(\\\"WEBGL_multi_draw\\\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\\\"lose_context\\\")||e.includes(\\\"debug\\\")||t.getExtension(e)}))}}(r),n}(n,t):0}(e,t)},Ta:function(e){var t={devicePreference:\\\"default\\\",powerPreference:\\\"default\\\"};return 0!==e&&(t={devicePreference:[\\\"default\\\",\\\"gpu\\\",\\\"cpu\\\"][o()[e>>2]],powerPreference:[\\\"default\\\",\\\"high-performance\\\",\\\"low-power\\\"][o()[e+4>>2]]}),gt.create(navigator.ml.createContext(t))},ab:kt,bb:Dt,l:Pt,$a:Rt,r:Ct,Wa:zt,p:jt,wa:function(e){var t=Date.now();return i()[e>>2]=t/1e3|0,i()[e+4>>2]=t%1e3*1e3|0,0},hb:function e(t,n){return t=new Date(1e3*i()[t>>2]),i()[n>>2]=t.getUTCSeconds(),i()[n+4>>2]=t.getUTCMinutes(),i()[n+8>>2]=t.getUTCHours(),i()[n+12>>2]=t.getUTCDate(),i()[n+16>>2]=t.getUTCMonth(),i()[n+20>>2]=t.getUTCFullYear()-1900,i()[n+24>>2]=t.getUTCDay(),i()[n+36>>2]=0,i()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[n+28>>2]=t,e.Ec||(e.Ec=Q(\\\"GMT\\\")),i()[n+40>>2]=e.Ec,n},J:function(){we.Vc()},u:function(e,t){Bt(),e=new Date(1e3*i()[e>>2]),i()[t>>2]=e.getSeconds(),i()[t+4>>2]=e.getMinutes(),i()[t+8>>2]=e.getHours(),i()[t+12>>2]=e.getDate(),i()[t+16>>2]=e.getMonth(),i()[t+20>>2]=e.getFullYear()-1900,i()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),r=(e.getTime()-n.getTime())/864e5|0;return i()[t+28>>2]=r,i()[t+36>>2]=-60*e.getTimezoneOffset(),r=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),i()[t+32>>2]=e,e=i()[cn()+(e?4:0)>>2],i()[t+40>>2]=e,t},a:R||c.wasmMemory,x:function(e){Bt();var t=new Date(i()[e+20>>2]+1900,i()[e+16>>2],i()[e+12>>2],i()[e+8>>2],i()[e+4>>2],i()[e>>2],0),n=i()[e+32>>2],r=t.getTimezoneOffset(),o=new Date(t.getFullYear(),0,1),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),u=o.getTimezoneOffset(),c=Math.min(u,a);return 0>n?i()[e+32>>2]=Number(a!=u&&c==r):0<n!=(c==r)&&(a=Math.max(u,a),t.setTime(t.getTime()+6e4*((0<n?c:a)-r))),i()[e+24>>2]=t.getDay(),n=(t.getTime()-o.getTime())/864e5|0,i()[e+28>>2]=n,i()[e>>2]=t.getSeconds(),i()[e+4>>2]=t.getMinutes(),i()[e+8>>2]=t.getHours(),i()[e+12>>2]=t.getDate(),i()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Sa:function(e){gt.oc(e)},Ra:function(e){gt.release(e)},Qa:function(e){mt.oc(e)},Pa:function(e){mt.release(e)},La:function(e,t,n){return e=yt.get(e),t=At.get(t),n=At.get(n),n=e.add(t,n),At.create(n)},Ka:function(e,t,n){return e=yt.get(e),t=At.get(t),n=ht(n),n=e.averagePool2d(t,n),At.create(n)},Ja:function(e,t,n,r,o){return e=yt.get(e),t=At.get(t),n=At.get(n),r=At.get(r),o={scale:At.get(i()[o>>2]),bias:At.get(i()[o+4>>2]),axis:i()[o+8>>2],epsilon:a()[o+12>>2],activation:mt.get(i()[o+16>>2])},o=e.batchNormalization(t,n,r,o),At.create(o)},Ia:function(e,t){e=yt.get(e),t=Ot.get(t);try{var n=e.build(t);return bt.create(n)}catch(e){return console.log(\\\"builder.build failed: \\\"+e),0}},Ha:function(e,t,n){return e=yt.get(e),t=At.get(t),n=lt(n),n=e.clamp(t,n),At.create(n)},Ga:function(e,t){return e=yt.get(e),t=lt(t),t=e.clamp(t),mt.create(t)},Fa:function(e,t,n,r){e=yt.get(e),t=st(t,n),n=[];for(var i=0;i<t.length;++i)n.push(At.get(t[i]));return r=e.concat(n,r),At.create(r)},Ea:function(e,t,n){return e=yt.get(e),n=ft(n,(t=pt(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),At.create(n)},Ca:function(e,t,n,r){return e=yt.get(e),t=At.get(t),n=At.get(n),r={padding:\\\"explicit\\\"===et[i()[r+24>>2]]?st(o()[r>>2],i()[r+4>>2]):void 0,strides:st(o()[r+8>>2],i()[r+12>>2]),dilations:st(o()[r+16>>2],i()[r+20>>2]),autoPad:et[i()[r+24>>2]],groups:i()[r+28>>2],inputLayout:rt[i()[r+32>>2]],filterLayout:nt[i()[r+36>>2]],bias:At.get(i()[r+40>>2]),activation:mt.get(i()[r+44>>2])},r=e.conv2d(t,n,r),At.create(r)},Da:function(e,t,n,r){return e=yt.get(e),t=At.get(t),n=At.get(n),r={padding:\\\"explicit\\\"===et[i()[r+40>>2]]?st(o()[r>>2],i()[r+4>>2]):void 0,strides:st(o()[r+8>>2],i()[r+12>>2]),dilations:st(o()[r+16>>2],i()[r+20>>2]),outputPadding:st(o()[r+24>>2],i()[r+28>>2]),outputSizes:st(o()[r+32>>2],i()[r+36>>2]),autoPad:et[i()[r+40>>2]],groups:i()[r+44>>2],inputLayout:rt[i()[r+48>>2]],filterLayout:tt[i()[r+52>>2]],bias:At.get(i()[r+56>>2]),activation:mt.get(i()[r+60>>2])},r=e.convTranspose2d(t,n,r),At.create(r)},Ba:function(e,n,r,o){return e=yt.get(e),n=At.get(n),r=At.get(r),o={c:At.get(i()[o>>2]),alpha:a()[o+4>>2],beta:a()[o+8>>2],aTranspose:0!==t()[o+12>>0],bTranspose:0!==t()[o+13>>0]},o=e.gemm(n,r,o),At.create(o)},Aa:function(e,n,r,o,a,u,c){return e=yt.get(e),n=At.get(n),r=At.get(r),o=At.get(o),c={bias:At.get(i()[c>>2]),recurrentBias:At.get(i()[c+4>>2]),initialHiddenState:At.get(i()[c+8>>2]),resetAfter:0!==t()[c+12>>0],returnSequence:0!==t()[c+13>>0],direction:at[i()[c+16>>2]],layout:ut[i()[c+20>>2]],activations:Tt.get(i()[c+24>>2])},a=e.gru(n,r,o,a,u,c),Et.create(a)},za:function(e,t,n){return e=yt.get(e),t=q(t),n=pt(n),n=e.input(t,n),At.create(n)},ya:function(e,t,n){return e=yt.get(e),t=At.get(t),n=dt(n),n=e.leakyRelu(t,n),At.create(n)},xa:function(e,t){return e=yt.get(e),t=dt(t),t=e.leakyRelu(t),mt.create(t)},va:function(e,t,n){return e=yt.get(e),t=At.get(t),n=At.get(n),n=e.matmul(t,n),At.create(n)},ua:function(e,t,n){return e=yt.get(e),t=At.get(t),n=ht(n),n=e.maxPool2d(t,n),At.create(n)},ja:function(e){yt.release(e)},ta:function(e,t){return e=yt.get(e),t=At.get(t),t=e.relu(t),At.create(t)},sa:function(e){return e=yt.get(e).relu(),mt.create(e)},ra:function(e,t,n){e=yt.get(e),t=At.get(t);var r=it[i()[n>>2]],u=o()[n+4>>2],c=i()[n+8>>2];if(0!==u&&0!==c){for(var s=[],f=0;f<u;++f,c+=4)s.push(a()[c>>2]);u=s}else u=void 0;return n={mode:r,scales:u,sizes:st(o()[n+12>>2],i()[n+16>>2]),axes:st(o()[n+20>>2],i()[n+24>>2])},n=e.resample2d(t,n),At.create(n)},qa:function(e,t,n,r){return e=yt.get(e),t=At.get(t),n=st(r,n),n=e.reshape(t,n),At.create(n)},pa:function(e,t){return e=yt.get(e),t=At.get(t),t=e.sigmoid(t),At.create(t)},oa:function(e){return e=yt.get(e).sigmoid(),mt.create(e)},na:function(e,t,n,r,a){if(e=yt.get(e),t=At.get(t),0!==r&&0!==n){for(var u=[],c=0;c<r;++c,n+=4)u.push(o()[n>>2]);n=u}else n=void 0;return 1==r&&(n=n[0]),r={axis:i()[a>>2]},r=e.split(t,n,r),Et.create(r)},ma:function(e,t){return e=yt.get(e),t=At.get(t),t=e.tanh(t),At.create(t)},la:function(e){return e=yt.get(e).tanh(),mt.create(e)},ka:function(e,t,n){return e=yt.get(e),t=At.get(t),n={permutation:st(o()[n>>2],i()[n+4>>2])},n=e.transpose(t,n),At.create(n)},Oa:function(e,t,n){return e=bt.get(e),t=wt.get(t),n=_t.get(n),e.compute(t,n)},Na:function(e){bt.oc(e)},Ma:function(e){bt.release(e)},ha:function(e){wt.release(e)},ia:function(e,t,n){e=wt.get(e),t=q(t),n=0===i()[n+12>>2]?ft(n+0):{resource:ft(n+0),dimensions:st(o()[n+16>>2],i()[n+12>>2])},e[t]=n},fa:function(e){Ot.release(e)},ga:function(e,t,n){e=Ot.get(e),t=q(t),n=At.get(n),e[t]=n},da:function(e){_t.release(e)},ea:function(e,t,n){e=_t.get(e),t=q(t),n=ft(n),e[t]=n},$:function(e,t){return e=Et.get(e)[t],At.create(e)},_:function(e){Et.release(e)},ca:function(e){At.oc(e)},aa:function(e){At.release(e)},Y:function(e){Tt.oc(e)},X:function(e){Tt.release(e)},Z:function(e,t){e=Tt.get(e),t=mt.get(t),e.push(t)},Ua:Wt,g:function(e,t,n,r){return Wt(e,t,n,r)},W:function(e){return e=gt.get(e),e=new MLGraphBuilder(e),yt.create(e)},V:function(){return wt.create({})},U:function(){return Ot.create({})},T:function(){return _t.create({})},R:function(){return Tt.create([])}};!function(){function e(e,t){c.asm=e.exports,ee=c.asm.Db,ne.unshift(c.asm.ib),we.Dc.push(c.asm.Ib),C=t,A||(se--,c.monitorRunDependencies&&c.monitorRunDependencies(se),0==se&&(null!==fe&&(clearInterval(fe),fe=null),le&&(e=le,le=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!x&&(w||_)){if(\\\"function\\\"==typeof fetch&&!ce.startsWith(\\\"file://\\\"))return fetch(ce,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+ce+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return he()}));if(m)return new Promise((function(e,t){m(ce,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return he()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){D(\\\"failed to asynchronously prepare wasm: \\\"+e),de(e)}))}var r={a:Ht};if(A||(se++,c.monitorRunDependencies&&c.monitorRunDependencies(se)),c.instantiateWasm)try{return c.instantiateWasm(r,e)}catch(e){return D(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(x||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||pe()||ce.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?n(t):fetch(ce,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return D(\\\"wasm streaming compile failed: \\\"+e),D(\\\"falling back to ArrayBuffer instantiation\\\"),n(t)}))}))).catch(f)}(),c.___wasm_call_ctors=function(){return(c.___wasm_call_ctors=c.asm.ib).apply(null,arguments)},c._OrtInit=function(){return(c._OrtInit=c.asm.jb).apply(null,arguments)},c._OrtCreateSessionOptions=function(){return(c._OrtCreateSessionOptions=c.asm.kb).apply(null,arguments)},c._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(c._OrtSessionOptionsAppendExecutionProviderWebNN=c.asm.lb).apply(null,arguments)},c._OrtAddSessionConfigEntry=function(){return(c._OrtAddSessionConfigEntry=c.asm.mb).apply(null,arguments)},c._OrtReleaseSessionOptions=function(){return(c._OrtReleaseSessionOptions=c.asm.nb).apply(null,arguments)},c._OrtCreateSession=function(){return(c._OrtCreateSession=c.asm.ob).apply(null,arguments)},c._OrtReleaseSession=function(){return(c._OrtReleaseSession=c.asm.pb).apply(null,arguments)},c._OrtGetInputCount=function(){return(c._OrtGetInputCount=c.asm.qb).apply(null,arguments)},c._OrtGetOutputCount=function(){return(c._OrtGetOutputCount=c.asm.rb).apply(null,arguments)},c._OrtGetInputName=function(){return(c._OrtGetInputName=c.asm.sb).apply(null,arguments)},c._OrtGetOutputName=function(){return(c._OrtGetOutputName=c.asm.tb).apply(null,arguments)},c._OrtFree=function(){return(c._OrtFree=c.asm.ub).apply(null,arguments)},c._OrtCreateTensor=function(){return(c._OrtCreateTensor=c.asm.vb).apply(null,arguments)},c._OrtGetTensorData=function(){return(c._OrtGetTensorData=c.asm.wb).apply(null,arguments)},c._OrtReleaseTensor=function(){return(c._OrtReleaseTensor=c.asm.xb).apply(null,arguments)},c._OrtCreateRunOptions=function(){return(c._OrtCreateRunOptions=c.asm.yb).apply(null,arguments)},c._OrtAddRunConfigEntry=function(){return(c._OrtAddRunConfigEntry=c.asm.zb).apply(null,arguments)},c._OrtReleaseRunOptions=function(){return(c._OrtReleaseRunOptions=c.asm.Ab).apply(null,arguments)},c._OrtRun=function(){return(c._OrtRun=c.asm.Bb).apply(null,arguments)},c._OrtEndProfiling=function(){return(c._OrtEndProfiling=c.asm.Cb).apply(null,arguments)};var Yt=c._malloc=function(){return(Yt=c._malloc=c.asm.Eb).apply(null,arguments)},Vt=c.___errno_location=function(){return(Vt=c.___errno_location=c.asm.Fb).apply(null,arguments)},qt=c._free=function(){return(qt=c._free=c.asm.Gb).apply(null,arguments)},$t=c._pthread_self=function(){return($t=c._pthread_self=c.asm.Hb).apply(null,arguments)};c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.Ib).apply(null,arguments)},c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.Jb).apply(null,arguments)};var Xt,Jt=c._emscripten_register_main_browser_thread_id=function(){return(Jt=c._emscripten_register_main_browser_thread_id=c.asm.Kb).apply(null,arguments)},Qt=c._emscripten_main_browser_thread_id=function(){return(Qt=c._emscripten_main_browser_thread_id=c.asm.Lb).apply(null,arguments)},Zt=c._emscripten_sync_run_in_main_thread_4=function(){return(Zt=c._emscripten_sync_run_in_main_thread_4=c.asm.Mb).apply(null,arguments)},Kt=c._emscripten_main_thread_process_queued_calls=function(){return(Kt=c._emscripten_main_thread_process_queued_calls=c.asm.Nb).apply(null,arguments)},en=c._emscripten_run_in_main_runtime_thread_js=function(){return(en=c._emscripten_run_in_main_runtime_thread_js=c.asm.Ob).apply(null,arguments)},tn=c.__emscripten_call_on_thread=function(){return(tn=c.__emscripten_call_on_thread=c.asm.Pb).apply(null,arguments)},nn=c._pthread_testcancel=function(){return(nn=c._pthread_testcancel=c.asm.Qb).apply(null,arguments)},rn=c._pthread_exit=function(){return(rn=c._pthread_exit=c.asm.Rb).apply(null,arguments)},on=c.__emscripten_thread_init=function(){return(on=c.__emscripten_thread_init=c.asm.Sb).apply(null,arguments)},an=c._emscripten_get_global_libc=function(){return(an=c._emscripten_get_global_libc=c.asm.Tb).apply(null,arguments)},un=c.___pthread_tsd_run_dtors=function(){return(un=c.___pthread_tsd_run_dtors=c.asm.Ub).apply(null,arguments)},cn=c.__get_tzname=function(){return(cn=c.__get_tzname=c.asm.Vb).apply(null,arguments)},sn=c.__get_daylight=function(){return(sn=c.__get_daylight=c.asm.Wb).apply(null,arguments)},fn=c.__get_timezone=function(){return(fn=c.__get_timezone=c.asm.Xb).apply(null,arguments)},ln=c.stackSave=function(){return(ln=c.stackSave=c.asm.Yb).apply(null,arguments)},dn=c.stackRestore=function(){return(dn=c.stackRestore=c.asm.Zb).apply(null,arguments)},pn=c.stackAlloc=function(){return(pn=c.stackAlloc=c.asm._b).apply(null,arguments)},hn=c._emscripten_stack_set_limits=function(){return(hn=c._emscripten_stack_set_limits=c.asm.$b).apply(null,arguments)},gn=c._memalign=function(){return(gn=c._memalign=c.asm.ac).apply(null,arguments)},mn=c.__emscripten_allow_main_runtime_queued_calls=999808,bn=c.__emscripten_main_thread_futex=1003828;function yn(e){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+e+\\\")\\\",this.status=e}function vn(){function e(){if(!Xt&&(Xt=!0,c.calledRun=!0,!j)&&(A||me(ne),s(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),!A)){if(c.postRun)for(\\\"function\\\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var e=c.postRun.shift();ie.unshift(e)}me(ie)}}if(!(0<se))if(A)s(c),A||me(ne),postMessage({cmd:\\\"loaded\\\"});else{if(!A){if(c.preRun)for(\\\"function\\\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)ue();me(te)}0<se||(c.setStatus?(c.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){c.setStatus(\\\"\\\")}),1),e()}),1)):e())}}function wn(e){if(z=e,A)throw postMessage({cmd:\\\"exitProcess\\\",returnCode:e}),new yn(e);ae()||(we.Kc(),A||(me(re),\\\"undefined\\\"!=typeof _fflush&&_fflush(0),xe[1].length&&ke(1,10),xe[2].length&&ke(2,10))),z=e,ae()||(we.Kc(),c.onExit&&c.onExit(e),j=!0),h(e,new yn(e))}if(c.UTF8ToString=q,c.stringToUTF8=X,c.lengthBytesUTF8=J,c.keepRuntimeAlive=ae,c.PThread=we,c.stackSave=ln,c.stackRestore=dn,c.stackAlloc=pn,c.PThread=we,c.wasmMemory=R,c.ExitStatus=yn,le=function e(){Xt||vn(),Xt||(le=e)},c.run=vn,c.preInit)for(\\\"function\\\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();return A&&(P=!1,we.Wc()),vn(),e.ready});e.exports=r},118:e=>{\\\"use strict\\\";e.exports='\\\"use strict\\\";var e={};if(\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node&&void 0===global.Worker){var a=require(\\\"worker_threads\\\"),t=a.parentPort;t.on(\\\"message\\\",(function(e){onmessage({data:e})}));var r=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:a.Worker,importScripts:function(e){(0,eval)(r.readFileSync(e,\\\"utf8\\\"))},postMessage:function(e){t.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:a,threadId:e._pthread_self()})},e.instantiateWasm=function(a,t){var r=new WebAssembly.Instance(e.wasmModule,a);return t(r),e.wasmModule=null,r.exports},self.onmessage=function(a){try{if(\\\"load\\\"===a.data.cmd){if(e.wasmModule=a.data.wasmModule,e.wasmMemory=a.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof a.data.urlOrBlob)importScripts(a.data.urlOrBlob);else{var t=URL.createObjectURL(a.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e).then((function(a){e=a}))}else if(\\\"objectTransfer\\\"===a.data.cmd)e.PThread.receiveObjectTransfer(a.data);else if(\\\"run\\\"===a.data.cmd){e.__performance_now_clock_drift=performance.now()-a.data.time,e.__emscripten_thread_init(a.data.threadInfoStruct,0,0);var r=a.data.stackBase,o=a.data.stackBase+a.data.stackSize;e.establishStackSpace(o,r),e.PThread.receiveObjectTransfer(a.data),e.PThread.threadInit();try{var n=e.invokeEntryPoint(a.data.start_routine,a.data.arg);e.keepRuntimeAlive()?e.PThread.setExitStatus(n):e.PThread.threadExit(n)}catch(a){if(\\\"Canceled!\\\"===a)e.PThread.threadCancel();else if(\\\"unwind\\\"!=a){if(!(a instanceof e.ExitStatus))throw e.PThread.threadExit(-2),a;e.keepRuntimeAlive()||e.PThread.threadExit(a.status)}}}else\\\"cancel\\\"===a.data.cmd?e._pthread_self()&&e.PThread.threadCancel():\\\"setimmediate\\\"===a.data.target||(\\\"processThreadQueue\\\"===a.data.cmd?e._pthread_self()&&e._emscripten_current_thread_process_queued_calls():(s(\\\"worker.js received unknown command \\\"+a.data.cmd),s(a.data)))}catch(e){throw s(\\\"worker.js onmessage() captured an uncaught exception: \\\"+e),e&&e.stack&&s(e.stack),e}};\\\\n'},932:(e,t,n)=>{var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(e){var t,r,i;e=e||{},t||(t=void 0!==e?e:{}),t.ready=new Promise((function(e,t){r=e,i=t}));var o,a={};for(o in t)t.hasOwnProperty(o)&&(a[o]=t[o]);var u,c,s,f,l,d=\\\"./this.program\\\",p=\\\"object\\\"==typeof window,h=\\\"function\\\"==typeof importScripts,g=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,m=\\\"\\\";g?(m=h?n(908).dirname(m)+\\\"/\\\":\\\"//\\\",u=function(e,t){return f||(f=n(384)),l||(l=n(908)),e=l.normalize(e),f.readFileSync(e,t?null:\\\"utf8\\\")},s=function(e){return(e=u(e,!0)).buffer||(e=new Uint8Array(e)),e.buffer||Y(\\\"Assertion failed: undefined\\\"),e},c=function(e,t,r){f||(f=n(384)),l||(l=n(908)),e=l.normalize(e),f.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){throw e})),process.on(\\\"unhandledRejection\\\",Y),t.inspect=function(){return\\\"[Emscripten Module object]\\\"}):(p||h)&&(h?m=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(m=document.currentScript.src),_scriptDir&&(m=_scriptDir),m=0!==m.indexOf(\\\"blob:\\\")?m.substr(0,m.lastIndexOf(\\\"/\\\")+1):\\\"\\\",u=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},h&&(s=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),c=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var b,y=t.print||console.log.bind(console),v=t.printErr||console.warn.bind(console);for(o in a)a.hasOwnProperty(o)&&(t[o]=a[o]);a=null,t.thisProgram&&(d=t.thisProgram),t.wasmBinary&&(b=t.wasmBinary),t.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&Y(\\\"no native wasm support detected\\\");var w,_,O,A,E,T,S,M=!1,x=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function k(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&x)return x.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var i=e[t++];if(128&i){var o=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|o);else{var a=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|o<<6|a:(7&i)<<18|o<<12|a<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function D(e,t){return e?k(A,e,t):\\\"\\\"}function P(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var o=0;o<e.length;++o){var a=e.charCodeAt(o);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++o)),127>=a){if(n>=r)break;t[n++]=a}else{if(2047>=a){if(n+1>=r)break;t[n++]=192|a>>6}else{if(65535>=a){if(n+2>=r)break;t[n++]=224|a>>12}else{if(n+3>=r)break;t[n++]=240|a>>18,t[n++]=128|a>>12&63}t[n++]=128|a>>6&63}t[n++]=128|63&a}}return t[n]=0,n-i}function R(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function C(e){var t=R(e)+1,n=Ue(t);return n&&P(e,O,n,t),n}function z(){var e=w.buffer;_=e,t.HEAP8=O=new Int8Array(e),t.HEAP16=new Int16Array(e),t.HEAP32=E=new Int32Array(e),t.HEAPU8=A=new Uint8Array(e),t.HEAPU16=new Uint16Array(e),t.HEAPU32=T=new Uint32Array(e),t.HEAPF32=S=new Float32Array(e),t.HEAPF64=new Float64Array(e)}var j,B=[],F=[],I=[],U=[];function G(){var e=t.preRun.shift();B.unshift(e)}var L,W=0,N=null,H=null;function Y(e){throw t.onAbort&&t.onAbort(e),v(e),M=!0,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),i(e),e}function V(){return L.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(t.preloadedImages={},t.preloadedAudios={},L=\\\"ort-wasm.wasm\\\",!V()){var q=L;L=t.locateFile?t.locateFile(q,m):m+q}function $(){var e=L;try{if(e==L&&b)return new Uint8Array(b);if(s)return s(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){Y(e)}}function X(e){for(;0<e.length;){var n=e.shift();if(\\\"function\\\"==typeof n)n(t);else{var r=n.Ib;\\\"number\\\"==typeof r?void 0===n.yb?j.get(r)():j.get(r)(n.yb):r(void 0===n.yb?null:n.yb)}}}function J(e){this.Ab=e-16,this.Sb=function(e){E[this.Ab+4>>2]=e},this.Pb=function(e){E[this.Ab+8>>2]=e},this.Qb=function(){E[this.Ab>>2]=0},this.Ob=function(){O[this.Ab+12>>0]=0},this.Rb=function(){O[this.Ab+13>>0]=0},this.Kb=function(e,t){this.Sb(e),this.Pb(t),this.Qb(),this.Ob(),this.Rb()}}var Q,Z={},K=[null,[],[]],ee={};Q=g?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:function(){return performance.now()};var te=[\\\"explicit\\\",\\\"same-upper\\\",\\\"same-lower\\\"],ne=[\\\"iohw\\\",\\\"hwoi\\\",\\\"ohwi\\\"],re=[\\\"oihw\\\",\\\"hwio\\\",\\\"ohwi\\\",\\\"ihwo\\\"],ie=[\\\"nchw\\\",\\\"nhwc\\\"],oe=[\\\"nearest-neighbor\\\",\\\"linear\\\"],ae=\\\"float32 float16 int32 uint32 int8 uint8\\\".split(\\\" \\\"),ue=[\\\"forward\\\",\\\"backward\\\",\\\"both\\\"],ce=[\\\"zrn\\\",\\\"rzn\\\"],se=[\\\"floor\\\",\\\"ceil\\\"];function fe(e,t){if(0!==e&&0!==t){for(var n=[],r=0;r<e;++r,t+=4)n.push(E[t>>2]);return n}}function le(e,t=\\\"float32\\\"){const n=E[e>>2]+T[e+8>>2];return e=T[e+4>>2],\\\"float32\\\"===t||Y(\\\"Assertion failed: undefined\\\"),new Float32Array(A.buffer,n,e/Float32Array.BYTES_PER_ELEMENT)}function de(e){return{minValue:S[e>>2],maxValue:S[e+4>>2]}}function pe(e){return{type:ae[T[e>>2]],dimensions:fe(T[e+8>>2],E[e+4>>2])}}function he(e){return{windowDimensions:fe(T[e>>2],E[e+4>>2]),padding:\\\"explicit\\\"===te[E[e+32>>2]]?fe(T[e+8>>2],E[e+12>>2]):void 0,strides:fe(T[e+16>>2],E[e+20>>2]),dilations:fe(T[e+24>>2],E[e+28>>2]),autoPad:te[E[e+32>>2]],layout:ie[E[e+36>>2]],roundingType:se[E[e+40>>2]],outputSizes:fe(T[e+44>>2],E[e+48>>2])}}var ge,me,be,ye,ve,we,_e,Oe,Ae,Ee,Te,Se,Me,xe={};function ke(){if(!Se){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:d||\\\"./this.program\\\"};for(e in xe)void 0===xe[e]?delete t[e]:t[e]=xe[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);Se=n}return Se}function De(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(!Me){Me=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var i=r.getTimezoneOffset(),o=Math.max(t,i);E[He()>>2]=60*o,E[Ne()>>2]=Number(t!=i),n=e(n),r=e(r),n=C(n),r=C(r),i<t?(E[We()>>2]=n,E[We()+4>>2]=r):(E[We()>>2]=r,E[We()+4>>2]=n)}}function Pe(e){return 0==e%4&&(0!=e%100||0==e%400)}function Re(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Ce=[31,29,31,30,31,30,31,31,30,31,30,31],ze=[31,28,31,30,31,30,31,31,30,31,30,31];function je(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(Pe(e.getFullYear())?Ce:ze)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Be(e,t,n,r){function i(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function o(e,t){return i(e,t,\\\"0\\\")}function a(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function c(e){e=je(new Date(e.wb+1900,0,1),e.Fb);var t=new Date(e.getFullYear()+1,0,4),n=u(new Date(e.getFullYear(),0,4));return t=u(t),0>=a(n,e)?0>=a(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var s=E[r+40>>2];for(var f in r={Vb:E[r>>2],Ub:E[r+4>>2],Db:E[r+8>>2],Cb:E[r+12>>2],xb:E[r+16>>2],wb:E[r+20>>2],Eb:E[r+24>>2],Fb:E[r+28>>2],cc:E[r+32>>2],Tb:E[r+36>>2],Wb:s?D(s):\\\"\\\"},n=D(n),s={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})n=n.replace(new RegExp(f,\\\"g\\\"),s[f]);var l=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),d=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(f in s={\\\"%a\\\":function(e){return l[e.Eb].substring(0,3)},\\\"%A\\\":function(e){return l[e.Eb]},\\\"%b\\\":function(e){return d[e.xb].substring(0,3)},\\\"%B\\\":function(e){return d[e.xb]},\\\"%C\\\":function(e){return o((e.wb+1900)/100|0,2)},\\\"%d\\\":function(e){return o(e.Cb,2)},\\\"%e\\\":function(e){return i(e.Cb,2,\\\" \\\")},\\\"%g\\\":function(e){return c(e).toString().substring(2)},\\\"%G\\\":function(e){return c(e)},\\\"%H\\\":function(e){return o(e.Db,2)},\\\"%I\\\":function(e){return 0==(e=e.Db)?e=12:12<e&&(e-=12),o(e,2)},\\\"%j\\\":function(e){return o(e.Cb+Re(Pe(e.wb+1900)?Ce:ze,e.xb-1),3)},\\\"%m\\\":function(e){return o(e.xb+1,2)},\\\"%M\\\":function(e){return o(e.Ub,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.Db&&12>e.Db?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return o(e.Vb,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.Eb||7},\\\"%U\\\":function(e){var t=new Date(e.wb+1900,0,1),n=0===t.getDay()?t:je(t,7-t.getDay());return 0>a(n,e=new Date(e.wb+1900,e.xb,e.Cb))?o(Math.ceil((31-n.getDate()+(Re(Pe(e.getFullYear())?Ce:ze,e.getMonth()-1)-31)+e.getDate())/7),2):0===a(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.wb+1901,0,4),n=u(new Date(e.wb+1900,0,4));t=u(t);var r=je(new Date(e.wb+1900,0,1),e.Fb);return 0>a(r,n)?\\\"53\\\":0>=a(t,r)?\\\"01\\\":o(Math.ceil((n.getFullYear()<e.wb+1900?e.Fb+32-n.getDate():e.Fb+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.Eb},\\\"%W\\\":function(e){var t=new Date(e.wb,0,1),n=1===t.getDay()?t:je(t,0===t.getDay()?1:7-t.getDay()+1);return 0>a(n,e=new Date(e.wb+1900,e.xb,e.Cb))?o(Math.ceil((31-n.getDate()+(Re(Pe(e.getFullYear())?Ce:ze,e.getMonth()-1)-31)+e.getDate())/7),2):0===a(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.wb+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.wb+1900},\\\"%z\\\":function(e){var t=0<=(e=e.Tb);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.Wb},\\\"%%\\\":function(){return\\\"%\\\"}})n.includes(f)&&(n=n.replace(new RegExp(f,\\\"g\\\"),s[f](r)));return(f=function(e){var t=Array(R(e)+1);return P(e,t,0,t.length),t}(n)).length>t?0:(O.set(f,e),f.length-1)}ge||(ge=ge||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},me=me||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},be=be||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},ye=ye||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},ve=ve||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},we=we||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},_e=_e||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},Oe=Oe||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},Ae=Ae||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},Ee=Ee||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}},Te=Te||{zb:{},Nb:1,create:function(e,t){t=t||{};var n=this.Nb++;return t.Gb=1,t.object=e,this.zb[n]=t,n},get:function(e){if(0!==e)return this.zb[e].object},Bb:function(e){this.zb[e].Gb++},release:function(e){var t=this.zb[e];t.Gb--,0>=t.Gb&&delete this.zb[e]}});var Fe={a:function(e){return Ue(e+16)+16},c:function(e,t){I.unshift({Ib:e,yb:t})},f:function(e,t){I.unshift({Ib:e,yb:t})},b:function(e,t,n){throw new J(e).Kb(t,n),e},Q:function(e,t){return e=D(e),ee.Xb(e,t)},p:function(){return 0},T:function(){},P:function(){},t:function(){return 42},H:function(){return 0},R:function(){},U:function(e,t){return e=D(e),ee.Yb(e,t)},W:function(e,t,n,r,i,o){if(o<<=12,0!=(16&r)&&0!=e%65536)t=-28;else if(0!=(32&r)){e=65536*Math.ceil(t/65536);var a=$e(65536,e);a?(A.fill(0,a,a+e),e=a):e=0,e?(Z[e]={Mb:e,Lb:t,Jb:!0,fd:i,bc:n,flags:r,offset:o},t=e):t=-48}else t=-52;return t},V:function(e,t){var n=Z[e];return 0!==t&&n?(t===n.Lb&&(Z[e]=null,n.Jb&&Le(n.Mb)),e=0):e=-28,e},n:function(){},O:function(e,t,n){return e=D(e),ee.Zb(e,t,n)},M:function(){},u:function(){},N:function(){},k:function(){Y()},B:function(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return E[Ge()>>2]=28,-1;e=Q()}return E[t>>2]=e/1e3|0,E[t+4>>2]=e%1e3*1e6|0,0},X:function(e,t){return e-t},Pa:function(){Y(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},j:function(){Y(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Qa:function(){Y(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Oa:function(){Y(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},S:function(){return 2147483648},G:function(e,t,n){A.copyWithin(e,t,t+n)},m:function(e){var t=A.length;if(2147483648<(e>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296),0<(r=Math.max(e,r))%65536&&(r+=65536-r%65536);e:{try{w.grow(Math.min(2147483648,r)-_.byteLength+65535>>>16),z();var i=1;break e}catch(e){}i=void 0}if(i)return!0}return!1},L:function(e){for(var t=Q();Q()-t<e;);},Ma:function(e){var t={devicePreference:\\\"default\\\",powerPreference:\\\"default\\\"};return 0!==e&&(t={devicePreference:[\\\"default\\\",\\\"gpu\\\",\\\"cpu\\\"][T[e>>2]],powerPreference:[\\\"default\\\",\\\"high-performance\\\",\\\"low-power\\\"][T[e+4>>2]]}),ge.create(navigator.ml.createContext(t))},J:function(e,t){var n=0;return ke().forEach((function(r,i){var o=t+n;for(i=E[e+4*i>>2]=o,o=0;o<r.length;++o)O[i++>>0]=r.charCodeAt(o);O[i>>0]=0,n+=r.length+1})),0},K:function(e,t){var n=ke();E[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),E[t>>2]=r,0},i:function(){return 0},I:function(e,t){return e=1==e||2==e?2:Y(),O[t>>0]=e,0},r:function(e,t,n,r){return e=ee.ac(e),t=ee.$b(e,t,n),E[r>>2]=t,0},F:function(){},s:function(e,t,n,r){for(var i=0,o=0;o<n;o++){for(var a=E[t+8*o>>2],u=E[t+(8*o+4)>>2],c=0;c<u;c++){var s=A[a+c],f=K[e];0===s||10===s?((1===e?y:v)(k(f,0)),f.length=0):f.push(s)}i+=u}return E[r>>2]=i,0},sa:function(e){var t=Date.now();return E[e>>2]=t/1e3|0,E[e+4>>2]=t%1e3*1e3|0,0},da:function e(t,n){return t=new Date(1e3*E[t>>2]),E[n>>2]=t.getUTCSeconds(),E[n+4>>2]=t.getUTCMinutes(),E[n+8>>2]=t.getUTCHours(),E[n+12>>2]=t.getUTCDate(),E[n+16>>2]=t.getUTCMonth(),E[n+20>>2]=t.getUTCFullYear()-1900,E[n+24>>2]=t.getUTCDay(),E[n+36>>2]=0,E[n+32>>2]=0,E[n+28>>2]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,e.Hb||(e.Hb=C(\\\"GMT\\\")),E[n+40>>2]=e.Hb,n},x:function(e,t){De(),e=new Date(1e3*E[e>>2]),E[t>>2]=e.getSeconds(),E[t+4>>2]=e.getMinutes(),E[t+8>>2]=e.getHours(),E[t+12>>2]=e.getDate(),E[t+16>>2]=e.getMonth(),E[t+20>>2]=e.getFullYear()-1900,E[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1);E[t+28>>2]=(e.getTime()-n.getTime())/864e5|0,E[t+36>>2]=-60*e.getTimezoneOffset();var r=new Date(e.getFullYear(),6,1).getTimezoneOffset();return e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),E[t+32>>2]=e,e=E[We()+(e?4:0)>>2],E[t+40>>2]=e,t},q:function(e){De();var t=new Date(E[e+20>>2]+1900,E[e+16>>2],E[e+12>>2],E[e+8>>2],E[e+4>>2],E[e>>2],0),n=E[e+32>>2],r=t.getTimezoneOffset(),i=new Date(t.getFullYear(),0,1),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),a=i.getTimezoneOffset(),u=Math.min(a,o);return 0>n?E[e+32>>2]=Number(o!=a&&u==r):0<n!=(u==r)&&(o=Math.max(a,o),t.setTime(t.getTime()+6e4*((0<n?u:o)-r))),E[e+24>>2]=t.getDay(),E[e+28>>2]=(t.getTime()-i.getTime())/864e5|0,E[e>>2]=t.getSeconds(),E[e+4>>2]=t.getMinutes(),E[e+8>>2]=t.getHours(),E[e+12>>2]=t.getDate(),E[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},E:function(e){ge.Bb(e)},D:function(e){ge.release(e)},La:function(e){me.Bb(e)},g:function(e){me.release(e)},Ia:function(e,t,n){return e=ye.get(e),t=Ae.get(t),n=Ae.get(n),n=e.add(t,n),Ae.create(n)},Ha:function(e,t,n){return e=ye.get(e),t=Ae.get(t),n=he(n),n=e.averagePool2d(t,n),Ae.create(n)},Ga:function(e,t,n,r,i){return e=ye.get(e),t=Ae.get(t),n=Ae.get(n),r=Ae.get(r),i={scale:Ae.get(E[i>>2]),bias:Ae.get(E[i+4>>2]),axis:E[i+8>>2],epsilon:S[i+12>>2],activation:me.get(E[i+16>>2])},i=e.batchNormalization(t,n,r,i),Ae.create(i)},Fa:function(e,t){e=ye.get(e),t=Oe.get(t);try{var n=e.build(t);return be.create(n)}catch(e){return console.log(\\\"builder.build failed: \\\"+e),0}},Ea:function(e,t,n){return e=ye.get(e),t=Ae.get(t),n=e.clamp(t,de(n)),Ae.create(n)},Da:function(e,t){return e=ye.get(e).clamp(de(t)),me.create(e)},Ca:function(e,t,n,r){e=ye.get(e),t=fe(t,n),n=[];for(var i=0;i<t.length;++i)n.push(Ae.get(t[i]));return r=e.concat(n,r),Ae.create(r)},Ba:function(e,t,n){return e=ye.get(e),n=le(n,(t=pe(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),Ae.create(n)},za:function(e,t,n,r){return e=ye.get(e),t=Ae.get(t),n=Ae.get(n),r={padding:\\\"explicit\\\"===te[E[r+24>>2]]?fe(T[r>>2],E[r+4>>2]):void 0,strides:fe(T[r+8>>2],E[r+12>>2]),dilations:fe(T[r+16>>2],E[r+20>>2]),autoPad:te[E[r+24>>2]],groups:E[r+28>>2],inputLayout:ie[E[r+32>>2]],filterLayout:re[E[r+36>>2]],bias:Ae.get(E[r+40>>2]),activation:me.get(E[r+44>>2])},r=e.conv2d(t,n,r),Ae.create(r)},Aa:function(e,t,n,r){return e=ye.get(e),t=Ae.get(t),n=Ae.get(n),r={padding:\\\"explicit\\\"===te[E[r+40>>2]]?fe(T[r>>2],E[r+4>>2]):void 0,strides:fe(T[r+8>>2],E[r+12>>2]),dilations:fe(T[r+16>>2],E[r+20>>2]),outputPadding:fe(T[r+24>>2],E[r+28>>2]),outputSizes:fe(T[r+32>>2],E[r+36>>2]),autoPad:te[E[r+40>>2]],groups:E[r+44>>2],inputLayout:ie[E[r+48>>2]],filterLayout:ne[E[r+52>>2]],bias:Ae.get(E[r+56>>2]),activation:me.get(E[r+60>>2])},r=e.convTranspose2d(t,n,r),Ae.create(r)},ya:function(e,t,n,r){return e=ye.get(e),t=Ae.get(t),n=Ae.get(n),r={c:Ae.get(E[r>>2]),alpha:S[r+4>>2],beta:S[r+8>>2],aTranspose:0!==O[r+12>>0],bTranspose:0!==O[r+13>>0]},r=e.gemm(t,n,r),Ae.create(r)},xa:function(e,t,n,r,i,o,a){return e=ye.get(e),t=Ae.get(t),n=Ae.get(n),r=Ae.get(r),a={bias:Ae.get(E[a>>2]),recurrentBias:Ae.get(E[a+4>>2]),initialHiddenState:Ae.get(E[a+8>>2]),resetAfter:0!==O[a+12>>0],returnSequence:0!==O[a+13>>0],direction:ue[E[a+16>>2]],layout:ce[E[a+20>>2]],activations:Te.get(E[a+24>>2])},i=e.gru(t,n,r,i,o,a),Ee.create(i)},wa:function(e,t,n){return e=ye.get(e),t=D(t),n=pe(n),n=e.input(t,n),Ae.create(n)},va:function(e,t,n){return e=ye.get(e),t=Ae.get(t),n=e.leakyRelu(t,{alpha:S[n>>2]}),Ae.create(n)},ua:function(e,t){return e=ye.get(e).leakyRelu({alpha:S[t>>2]}),me.create(e)},ta:function(e,t,n){return e=ye.get(e),t=Ae.get(t),n=Ae.get(n),n=e.matmul(t,n),Ae.create(n)},ra:function(e,t,n){return e=ye.get(e),t=Ae.get(t),n=he(n),n=e.maxPool2d(t,n),Ae.create(n)},w:function(e){ye.release(e)},qa:function(e,t){return e=ye.get(e),t=Ae.get(t),t=e.relu(t),Ae.create(t)},A:function(e){return e=ye.get(e).relu(),me.create(e)},pa:function(e,t,n){e=ye.get(e),t=Ae.get(t);var r=oe[E[n>>2]],i=T[n+4>>2],o=E[n+8>>2];if(0!==i&&0!==o){for(var a=[],u=0;u<i;++u,o+=4)a.push(S[o>>2]);i=a}else i=void 0;return n={mode:r,scales:i,sizes:fe(T[n+12>>2],E[n+16>>2]),axes:fe(T[n+20>>2],E[n+24>>2])},n=e.resample2d(t,n),Ae.create(n)},oa:function(e,t,n,r){return e=ye.get(e),t=Ae.get(t),n=fe(r,n),n=e.reshape(t,n),Ae.create(n)},na:function(e,t){return e=ye.get(e),t=Ae.get(t),t=e.sigmoid(t),Ae.create(t)},z:function(e){return e=ye.get(e).sigmoid(),me.create(e)},ma:function(e,t,n,r,i){if(e=ye.get(e),t=Ae.get(t),0!==r&&0!==n){for(var o=[],a=0;a<r;++a,n+=4)o.push(T[n>>2]);n=o}else n=void 0;return 1==r&&(n=n[0]),r=e.split(t,n,{axis:E[i>>2]}),Ee.create(r)},la:function(e,t){return e=ye.get(e),t=Ae.get(t),t=e.tanh(t),Ae.create(t)},y:function(e){return e=ye.get(e).tanh(),me.create(e)},ka:function(e,t,n){return e=ye.get(e),t=Ae.get(t),n={permutation:fe(T[n>>2],E[n+4>>2])},n=e.transpose(t,n),Ae.create(n)},Ka:function(e,t,n){return e=be.get(e),t=we.get(t),n=_e.get(n),e.compute(t,n)},Ja:function(e){be.Bb(e)},C:function(e){be.release(e)},ia:function(e){we.release(e)},ja:function(e,t,n){e=we.get(e),t=D(t),n=0===E[n+12>>2]?le(n+0):{resource:le(n+0),dimensions:fe(T[n+16>>2],E[n+12>>2])},e[t]=n},ga:function(e){Oe.release(e)},ha:function(e,t,n){e=Oe.get(e),t=D(t),n=Ae.get(n),e[t]=n},ea:function(e){_e.release(e)},fa:function(e,t,n){e=_e.get(e),t=D(t),n=le(n),e[t]=n},l:function(e,t){return e=Ee.get(e)[t],Ae.create(e)},v:function(e){Ee.release(e)},e:function(e){Ae.Bb(e)},d:function(e){Ae.release(e)},ba:function(e){Te.Bb(e)},o:function(e){Te.release(e)},ca:function(e,t){e=Te.get(e),t=me.get(t),e.push(t)},Na:Be,h:function(e,t,n,r){return Be(e,t,n,r)},aa:function(e){return e=ge.get(e),e=new MLGraphBuilder(e),ye.create(e)},$:function(){return we.create({})},_:function(){return Oe.create({})},Z:function(){return _e.create({})},Y:function(){return Te.create([])}};!function(){function e(e){t.asm=e.exports,w=t.asm.Ra,z(),j=t.asm.vb,F.unshift(t.asm.Sa),W--,t.monitorRunDependencies&&t.monitorRunDependencies(W),0==W&&(null!==N&&(clearInterval(N),N=null),H&&(e=H,H=null,e()))}function n(t){e(t.instance)}function r(e){return function(){if(!b&&(p||h)){if(\\\"function\\\"==typeof fetch&&!L.startsWith(\\\"file://\\\"))return fetch(L,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+L+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return $()}));if(c)return new Promise((function(e,t){c(L,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return $()}))}().then((function(e){return WebAssembly.instantiate(e,o)})).then(e,(function(e){v(\\\"failed to asynchronously prepare wasm: \\\"+e),Y(e)}))}var o={a:Fe};if(W++,t.monitorRunDependencies&&t.monitorRunDependencies(W),t.instantiateWasm)try{return t.instantiateWasm(o,e)}catch(e){return v(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(b||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||V()||L.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?r(n):fetch(L,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,o).then(n,(function(e){return v(\\\"wasm streaming compile failed: \\\"+e),v(\\\"falling back to ArrayBuffer instantiation\\\"),r(n)}))}))).catch(i)}(),t.___wasm_call_ctors=function(){return(t.___wasm_call_ctors=t.asm.Sa).apply(null,arguments)},t._OrtInit=function(){return(t._OrtInit=t.asm.Ta).apply(null,arguments)},t._OrtCreateSessionOptions=function(){return(t._OrtCreateSessionOptions=t.asm.Ua).apply(null,arguments)},t._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(t._OrtSessionOptionsAppendExecutionProviderWebNN=t.asm.Va).apply(null,arguments)},t._OrtAddSessionConfigEntry=function(){return(t._OrtAddSessionConfigEntry=t.asm.Wa).apply(null,arguments)},t._OrtReleaseSessionOptions=function(){return(t._OrtReleaseSessionOptions=t.asm.Xa).apply(null,arguments)},t._OrtCreateSession=function(){return(t._OrtCreateSession=t.asm.Ya).apply(null,arguments)},t._OrtReleaseSession=function(){return(t._OrtReleaseSession=t.asm.Za).apply(null,arguments)},t._OrtGetInputCount=function(){return(t._OrtGetInputCount=t.asm._a).apply(null,arguments)},t._OrtGetOutputCount=function(){return(t._OrtGetOutputCount=t.asm.$a).apply(null,arguments)},t._OrtGetInputName=function(){return(t._OrtGetInputName=t.asm.ab).apply(null,arguments)},t._OrtGetOutputName=function(){return(t._OrtGetOutputName=t.asm.bb).apply(null,arguments)},t._OrtFree=function(){return(t._OrtFree=t.asm.cb).apply(null,arguments)},t._OrtCreateTensor=function(){return(t._OrtCreateTensor=t.asm.db).apply(null,arguments)},t._OrtGetTensorData=function(){return(t._OrtGetTensorData=t.asm.eb).apply(null,arguments)},t._OrtReleaseTensor=function(){return(t._OrtReleaseTensor=t.asm.fb).apply(null,arguments)},t._OrtCreateRunOptions=function(){return(t._OrtCreateRunOptions=t.asm.gb).apply(null,arguments)},t._OrtAddRunConfigEntry=function(){return(t._OrtAddRunConfigEntry=t.asm.hb).apply(null,arguments)},t._OrtReleaseRunOptions=function(){return(t._OrtReleaseRunOptions=t.asm.ib).apply(null,arguments)},t._OrtRun=function(){return(t._OrtRun=t.asm.jb).apply(null,arguments)},t._OrtEndProfiling=function(){return(t._OrtEndProfiling=t.asm.kb).apply(null,arguments)};var Ie,Ue=t._malloc=function(){return(Ue=t._malloc=t.asm.lb).apply(null,arguments)},Ge=t.___errno_location=function(){return(Ge=t.___errno_location=t.asm.mb).apply(null,arguments)},Le=t._free=function(){return(Le=t._free=t.asm.nb).apply(null,arguments)},We=t.__get_tzname=function(){return(We=t.__get_tzname=t.asm.ob).apply(null,arguments)},Ne=t.__get_daylight=function(){return(Ne=t.__get_daylight=t.asm.pb).apply(null,arguments)},He=t.__get_timezone=function(){return(He=t.__get_timezone=t.asm.qb).apply(null,arguments)},Ye=t.stackSave=function(){return(Ye=t.stackSave=t.asm.rb).apply(null,arguments)},Ve=t.stackRestore=function(){return(Ve=t.stackRestore=t.asm.sb).apply(null,arguments)},qe=t.stackAlloc=function(){return(qe=t.stackAlloc=t.asm.tb).apply(null,arguments)},$e=t._memalign=function(){return($e=t._memalign=t.asm.ub).apply(null,arguments)};function Xe(){function e(){if(!Ie&&(Ie=!0,t.calledRun=!0,!M)){if(X(F),r(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),t.postRun)for(\\\"function\\\"==typeof t.postRun&&(t.postRun=[t.postRun]);t.postRun.length;){var e=t.postRun.shift();U.unshift(e)}X(U)}}if(!(0<W)){if(t.preRun)for(\\\"function\\\"==typeof t.preRun&&(t.preRun=[t.preRun]);t.preRun.length;)G();X(B),0<W||(t.setStatus?(t.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){t.setStatus(\\\"\\\")}),1),e()}),1)):e())}}if(t.UTF8ToString=D,t.stringToUTF8=function(e,t,n){return P(e,A,t,n)},t.lengthBytesUTF8=R,t.stackSave=Ye,t.stackRestore=Ve,t.stackAlloc=qe,H=function e(){Ie||Xe(),Ie||(H=e)},t.run=Xe,t.preInit)for(\\\"function\\\"==typeof t.preInit&&(t.preInit=[t.preInit]);0<t.preInit.length;)t.preInit.pop()();return Xe(),e.ready});e.exports=r},967:(e,t)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.iterateExtraOptions=void 0,t.iterateExtraOptions=(e,n,r,i)=>{if(\\\"object\\\"==typeof e&&null!==e){if(r.has(e))throw new Error(\\\"Circular reference in options\\\");r.add(e)}Object.entries(e).forEach((([e,o])=>{const a=n?n+e:e;if(\\\"object\\\"==typeof o)t.iterateExtraOptions(o,a+\\\".\\\",r,i);else if(\\\"string\\\"==typeof o||\\\"number\\\"==typeof o)i(a,o.toString());else{if(\\\"boolean\\\"!=typeof o)throw new Error(\\\"Can't handle extra config type: \\\"+typeof o);i(a,o?\\\"1\\\":\\\"0\\\")}}))}},586:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setRunOptions=void 0;const r=n(967),i=n(983),o=n(361);t.setRunOptions=e=>{const t=o.getInstance();let n=0;const a=[],u=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===(null==e?void 0:e.terminate)&&(u.terminate=!1);let o=0;if(void 0!==(null==e?void 0:e.tag)&&(o=i.allocWasmString(e.tag,a)),n=t._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,o),0===n)throw new Error(\\\"Can't create run options\\\");return void 0!==(null==e?void 0:e.extra)&&r.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,((e,r)=>{const o=i.allocWasmString(e,a),u=i.allocWasmString(r,a);if(0!==t._OrtAddRunConfigEntry(n,o,u))throw new Error(`Can't set a run config entry: ${e} - ${r}`)})),[n,a]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),a.forEach(t._free),e}}},919:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setSessionOptions=void 0;const r=n(967),i=n(983),o=n(361);t.setSessionOptions=e=>{const t=o.getInstance();let n=0;const a=[],u=e||{};(e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});const t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly=\\\"1\\\")})(u);try{void 0===(null==e?void 0:e.graphOptimizationLevel)&&(u.graphOptimizationLevel=\\\"all\\\");const o=(e=>{switch(e){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}})(u.graphOptimizationLevel);void 0===(null==e?void 0:e.enableCpuMemArena)&&(u.enableCpuMemArena=!0),void 0===(null==e?void 0:e.enableMemPattern)&&(u.enableMemPattern=!0),void 0===(null==e?void 0:e.executionMode)&&(u.executionMode=\\\"sequential\\\");const c=(e=>{switch(e){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}})(u.executionMode);let s=0;if(void 0!==(null==e?void 0:e.logId)&&(s=i.allocWasmString(e.logId,a)),void 0===(null==e?void 0:e.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);if(void 0===(null==e?void 0:e.enableProfiling)&&(u.enableProfiling=!1),n=t._OrtCreateSessionOptions(o,!!u.enableCpuMemArena,!!u.enableMemPattern,c,!!u.enableProfiling,0,s,u.logSeverityLevel,u.logVerbosityLevel),0===n)throw new Error(\\\"Can't create session options\\\");if(void 0!==(null==e?void 0:e.extra)&&r.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,((e,r)=>{const o=i.allocWasmString(e,a),u=i.allocWasmString(r,a);if(0!==t._OrtAddSessionConfigEntry(n,o,u))throw new Error(`Can't set a session config entry: ${e} - ${r}`)})),null==e?void 0:e.executionProviders)for(const r of e.executionProviders)if(\\\"webnn\\\"===(\\\"string\\\"==typeof r?r:r.name)){let e=0,i=0;if(\\\"string\\\"!=typeof r){const t=r;(null==t?void 0:t.devicePreference)&&(e=t.devicePreference),(null==t?void 0:t.powerPreference)&&(i=t.powerPreference)}const o=[0,1,2];if(!o.includes(e))throw new Error(\\\"Invalid devicePerference value, it shoule be one of {0, 1, 2}\\\");if(!o.includes(i))throw new Error(\\\"Invalid powerPreference value, it shoule be one of {0, 1, 2}\\\");const a=[\\\"Default\\\",\\\"GPU\\\",\\\"CPU\\\"],u=[\\\"Default\\\",\\\"High-performance\\\",\\\"Low-power\\\"];if(console.log(`webnn device preference: ${a[e]}`),console.log(`webnn power preference: ${u[i]}`),0!==t._OrtSessionOptionsAppendExecutionProviderWebNN(n,e,i))throw new Error(\\\"Can't append WebNN execution provider\\\");break}return[n,a]}catch(e){throw 0!==n&&t._OrtReleaseSessionOptions(n),a.forEach(t._free),e}}},983:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.allocWasmString=void 0;const r=n(361);t.allocWasmString=(e,t)=>{const n=r.getInstance(),i=n.lengthBytesUTF8(e)+1,o=n._malloc(i);return n.stringToUTF8(e,o,i),t.push(o),o}},349:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.initOrt=void 0;const r=n(586),i=n(919),o=n(983),a=n(361);t.initOrt=(e,t)=>{const n=a.getInstance()._OrtInit(e,t);if(0!==n)throw new Error(`Can't initialize onnxruntime. error code = ${n}`)};const u=[];t.createSession=(e,t)=>{const n=a.getInstance(),r=n._malloc(e.byteLength);let o=0,c=0,s=[];try{if([c,s]=i.setSessionOptions(t),n.HEAPU8.set(e,r),o=n._OrtCreateSession(r,e.byteLength,c),0===o)throw new Error(\\\"Can't create a session\\\")}finally{n._free(r),n._OrtReleaseSessionOptions(c),s.forEach(n._free)}const f=n._OrtGetInputCount(o),l=n._OrtGetOutputCount(o),d=[],p=[],h=[],g=[];for(let e=0;e<f;e++){const t=n._OrtGetInputName(o,e);if(0===t)throw new Error(\\\"Can't get an input name\\\");p.push(t),d.push(n.UTF8ToString(t))}for(let e=0;e<l;e++){const t=n._OrtGetOutputName(o,e);if(0===t)throw new Error(\\\"Can't get an output name\\\");g.push(t),h.push(n.UTF8ToString(t))}return u.push([o,p,g]),[u.length-1,d,h]},t.releaseSession=e=>{const t=a.getInstance(),n=u[e];if(!n)throw new Error(\\\"invalid session id\\\");const r=n[0],i=n[1],o=n[2];i.forEach(t._OrtFree),o.forEach(t._OrtFree),t._OrtReleaseSession(r),u[e]=void 0};const c=e=>{switch(e){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(`unsupported data type: ${e}`)}},s=e=>{switch(e){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int32\\\";case 13:return\\\"uint32\\\";default:throw new Error(`unsupported data type: ${e}`)}},f=e=>{switch(e){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"bool\\\":return Uint8Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}};t.run=(e,t,n,i,l)=>{const d=a.getInstance(),p=u[e];if(!p)throw new Error(\\\"invalid session id\\\");const h=p[0],g=p[1],m=p[2],b=t.length,y=i.length;let v=0,w=[];const _=[],O=[];try{[v,w]=r.setRunOptions(l);for(let e=0;e<b;e++){const t=n[e][0],r=n[e][1],i=n[e][2];let a,u;if(Array.isArray(i)){u=4*i.length,a=d._malloc(u),O.push(a);let e=a/4;for(let t=0;t<i.length;t++){if(\\\"string\\\"!=typeof i[t])throw new TypeError(`tensor data at index ${t} is not a string`);d.HEAPU32[e++]=o.allocWasmString(i[t],O)}}else u=i.byteLength,a=d._malloc(u),O.push(a),d.HEAPU8.set(new Uint8Array(i.buffer,i.byteOffset,u),a);const s=d.stackSave(),f=d.stackAlloc(4*r.length);try{let e=f/4;r.forEach((t=>d.HEAP32[e++]=t));const n=d._OrtCreateTensor(c(t),a,u,f,r.length);if(0===n)throw new Error(\\\"Can't create a tensor\\\");_.push(n)}finally{d.stackRestore(s)}}const e=d.stackSave(),a=d.stackAlloc(4*b),u=d.stackAlloc(4*b),p=d.stackAlloc(4*y),A=d.stackAlloc(4*y);try{let n=a/4,r=u/4,o=p/4,c=A/4;for(let e=0;e<b;e++)d.HEAPU32[n++]=_[e],d.HEAPU32[r++]=g[t[e]];for(let e=0;e<y;e++)d.HEAPU32[o++]=0,d.HEAPU32[c++]=m[i[e]];let l=d._OrtRun(h,u,a,b,A,y,p,v);const w=[];if(0===l)for(let e=0;e<y;e++){const t=d.HEAPU32[p/4+e],n=d.stackSave(),r=d.stackAlloc(16);let i,o=0;try{if(l=d._OrtGetTensorData(t,r,r+4,r+8,r+12),0!==l)throw new Error(`Can't get a tensor data. error code = ${l}`);let e=r/4;const a=d.HEAPU32[e++];o=d.HEAPU32[e++];const u=d.HEAPU32[e++],c=d.HEAPU32[e++],p=[];for(let e=0;e<c;e++)p.push(d.HEAPU32[u/4+e]);d._OrtFree(u);const h=0===p.length?1:p.reduce(((e,t)=>e*t));if(i=s(a),\\\"string\\\"===i){const e=[];let t=o/4;for(let n=0;n<h;n++){const r=d.HEAPU32[t++],i=n===h-1?void 0:d.HEAPU32[t]-r;e.push(d.UTF8ToString(r,i))}w.push([i,p,e])}else{const e=new(f(i))(h);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(d.HEAPU8.subarray(o,o+e.byteLength)),w.push([i,p,e])}}finally{d.stackRestore(n),\\\"string\\\"===i&&o&&d._free(o),d._OrtReleaseTensor(t)}}if(0===l)return w;throw new Error(`failed to call OrtRun(). error code = ${l}.`)}finally{d.stackRestore(e)}}finally{_.forEach(d._OrtReleaseTensor),O.forEach(d._free),d._OrtReleaseRunOptions(v),w.forEach(d._free)}},t.endProfiling=e=>{const t=a.getInstance(),n=u[e];if(!n)throw new Error(\\\"invalid session id\\\");const r=n[0],i=t._OrtEndProfiling(r);if(0===i)throw new Error(\\\"Can't get an profile file name\\\");t._OrtFree(i)},t.extractTransferableBuffers=e=>{const t=[];for(const n of e){const e=n[2];!Array.isArray(e)&&e.buffer&&t.push(e.buffer)}return t}},361:function(e,t,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\\\"default\\\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t},a=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,o){function a(e){try{c(r.next(e))}catch(e){o(e)}}function u(e){try{c(r.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,u)}c((r=r.apply(e,t||[])).next())}))},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;const c=o(n(449)),s=u(n(474)),f=u(n(932));let l,d=!1,p=!1,h=!1;const g=(e,t)=>t?e?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":e?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\";t.initializeWebAssembly=e=>a(void 0,void 0,void 0,(function*(){if(d)return Promise.resolve();if(p)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(h)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");p=!0;const t=e.initTimeout,r=e.numThreads,i=e.simd,o=r>1&&(()=>{try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}})(),a=i&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}})(),u=\\\"string\\\"==typeof e.wasmPaths?e.wasmPaths:void 0,m=g(!1,o),b=g(a,o),y=\\\"object\\\"==typeof e.wasmPaths?e.wasmPaths[b]:void 0;let v=!1;const w=[];if(t>0&&w.push(new Promise((e=>{setTimeout((()=>{v=!0,e()}),t)}))),w.push(new Promise(((e,t)=>{const r=o?s.default:f.default,i={locateFile:(e,t)=>{if(e.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob)return URL.createObjectURL(new Blob([n(118)],{type:\\\"text/javascript\\\"}));if(e===m){const e=null!=u?u:t;return null!=y?y:e+b}return t+e}};if(o)if(\\\"undefined\\\"==typeof Blob)i.mainScriptUrlOrBlob=c.join(\\\"/\\\",\\\"ort-wasm-threaded.js\\\");else{const e=`var ortWasmThreaded=(function(){var _scriptDir;return ${s.default.toString()}})();`;i.mainScriptUrlOrBlob=new Blob([e],{type:\\\"text/javascript\\\"})}r(i).then((t=>{p=!1,d=!0,l=t,e()}),(e=>{p=!1,h=!0,t(e)}))}))),yield Promise.race(w),v)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)})),t.getInstance=()=>{if(d&&l)return l;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},t.dispose=()=>{var e;!d||p||h||(p=!0,null===(e=l.PThread)||void 0===e||e.terminateAllThreads(),l=void 0,p=!1,d=!1,h=!0)}},384:()=>{},993:()=>{},908:()=>{},953:()=>{},925:()=>{},449:()=>{}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var o=t[r]={exports:{}};return e[r].call(o.exports,o,o.exports,n),o.exports}n.g=function(){if(\\\"object\\\"==typeof globalThis)return globalThis;try{return this||new Function(\\\"return this\\\")()}catch(e){if(\\\"object\\\"==typeof window)return window}}(),(()=>{\\\"use strict\\\";const e=n(349),t=n(361);self.onmessage=n=>{switch(n.data.type){case\\\"init-wasm\\\":t.initializeWebAssembly(n.data.in).then((()=>postMessage({type:\\\"init-wasm\\\"})),(e=>postMessage({type:\\\"init-wasm\\\",err:e})));break;case\\\"init-ort\\\":try{const{numThreads:t,loggingLevel:r}=n.data.in;e.initOrt(t,r),postMessage({type:\\\"init-ort\\\"})}catch(e){postMessage({type:\\\"init-ort\\\",err:e})}break;case\\\"create\\\":try{const{model:t,options:r}=n.data.in,i=e.createSession(t,r);postMessage({type:\\\"create\\\",out:i})}catch(e){postMessage({type:\\\"create\\\",err:e})}break;case\\\"release\\\":try{const t=n.data.in;e.releaseSession(t),postMessage({type:\\\"release\\\"})}catch(e){postMessage({type:\\\"release\\\",err:e})}break;case\\\"run\\\":try{const{sessionId:t,inputIndices:r,inputs:i,outputIndices:o,options:a}=n.data.in,u=e.run(t,r,i,o,a);postMessage({type:\\\"run\\\",out:u},e.extractTransferableBuffers(u))}catch(e){postMessage({type:\\\"run\\\",err:e})}break;case\\\"end-profiling\\\":try{const t=n.data.in;e.endProfiling(t),postMessage({type:\\\"end-profiling\\\"})}catch(e){postMessage({type:\\\"end-profiling\\\",err:e})}}}})()})();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__2174__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6018);\n"],"sourceRoot":""}